{"version":3,"file":"chunk-DKBjnJXm.js","sources":["../../src/components/LoadingSpinner.js"],"sourcesContent":["/**\n * Loading Spinner Component\n * Reusable spinner with customizable size and message\n */\n\nexport class LoadingSpinner {\n    constructor(container, options = {}) {\n        this.container = typeof container === 'string' ? document.getElementById(container) : container;\n        this.options = {\n            size: options.size || 'medium',\n            message: options.message || 'Loading...',\n            overlay: options.overlay !== false, // default true\n            className: options.className || '',\n            ...options\n        };\n\n        this.spinnerElement = null;\n        this.isVisible = false;\n    }\n\n    /**\n     * Show the spinner\n     */\n    show(message) {\n        if (message) {\n            this.options.message = message;\n        }\n\n        if (this.spinnerElement) {\n            this.hide();\n        }\n\n        this.spinnerElement = this.createSpinnerElement();\n\n        if (this.container) {\n            this.container.appendChild(this.spinnerElement);\n        } else {\n            document.body.appendChild(this.spinnerElement);\n        }\n\n        // Trigger animation\n        requestAnimationFrame(() => {\n            if (this.spinnerElement) {\n                this.spinnerElement.style.opacity = '1';\n            }\n        });\n\n        this.isVisible = true;\n\n        // Accessibility\n        this.announceToScreenReader(this.options.message);\n    }\n\n    /**\n     * Hide the spinner\n     */\n    hide() {\n        if (!this.spinnerElement || !this.isVisible) {return;}\n\n        this.spinnerElement.style.opacity = '0';\n\n        setTimeout(() => {\n            if (this.spinnerElement && this.spinnerElement.parentNode) {\n                this.spinnerElement.parentNode.removeChild(this.spinnerElement);\n            }\n            this.spinnerElement = null;\n        }, 300);\n\n        this.isVisible = false;\n    }\n\n    /**\n     * Update spinner message\n     */\n    updateMessage(message) {\n        this.options.message = message;\n        if (this.spinnerElement) {\n            const messageElement = this.spinnerElement.querySelector('.spinner-message');\n            if (messageElement) {\n                messageElement.textContent = message;\n                this.announceToScreenReader(message);\n            }\n        }\n    }\n\n    /**\n     * Create spinner DOM element\n     */\n    createSpinnerElement() {\n        const spinner = document.createElement('div');\n        spinner.className = `loading-spinner-container ${this.options.className}`;\n\n        const sizeClass = this.getSizeClass();\n        const overlayClass = this.options.overlay ? 'with-overlay' : '';\n\n        spinner.innerHTML = `\n            <div class=\"loading-spinner-backdrop ${overlayClass}\">\n                <div class=\"loading-spinner-content\">\n                    <div class=\"loading-spinner ${sizeClass}\" aria-hidden=\"true\">\n                        <div class=\"spinner-ring\"></div>\n                        <div class=\"spinner-ring\"></div>\n                        <div class=\"spinner-ring\"></div>\n                        <div class=\"spinner-ring\"></div>\n                    </div>\n                    <div class=\"spinner-message\" aria-live=\"polite\" aria-atomic=\"true\">\n                        ${this.options.message}\n                    </div>\n                </div>\n            </div>\n        `;\n\n        this.applyStyles(spinner);\n        return spinner;\n    }\n\n    /**\n     * Get size class based on size option\n     */\n    getSizeClass() {\n        const sizes = {\n            small: 'spinner-small',\n            medium: 'spinner-medium',\n            large: 'spinner-large',\n            xlarge: 'spinner-xlarge'\n        };\n        return sizes[this.options.size] || sizes.medium;\n    }\n\n    /**\n     * Apply inline styles for better performance and flexibility\n     */\n    applyStyles(element) {\n        element.style.cssText = `\n            position: ${this.container ? 'absolute' : 'fixed'};\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            z-index: 10000;\n            opacity: 0;\n            transition: opacity 0.3s ease;\n            pointer-events: none;\n        `;\n\n        const backdrop = element.querySelector('.loading-spinner-backdrop');\n        if (backdrop) {\n            backdrop.style.cssText = `\n                width: 100%;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                background-color: ${this.options.overlay ? 'rgba(255, 255, 255, 0.9)' : 'transparent'};\n                backdrop-filter: ${this.options.overlay ? 'blur(2px)' : 'none'};\n            `;\n        }\n\n        const content = element.querySelector('.loading-spinner-content');\n        if (content) {\n            content.style.cssText = `\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap: 1rem;\n                padding: 2rem;\n                background: ${this.options.overlay ? 'rgba(255, 255, 255, 0.95)' : 'transparent'};\n                border-radius: 0.5rem;\n                box-shadow: ${this.options.overlay ? '0 4px 12px rgba(0, 0, 0, 0.1)' : 'none'};\n            `;\n        }\n\n        const spinner = element.querySelector('.loading-spinner');\n        if (spinner) {\n            this.applySpinnerStyles(spinner);\n        }\n\n        const message = element.querySelector('.spinner-message');\n        if (message) {\n            message.style.cssText = `\n                font-family: system-ui, sans-serif;\n                font-size: 0.875rem;\n                color: #374151;\n                text-align: center;\n                margin: 0;\n            `;\n        }\n    }\n\n    /**\n     * Apply spinner animation styles\n     */\n    applySpinnerStyles(spinner) {\n        const sizes = {\n            'spinner-small': '24px',\n            'spinner-medium': '40px',\n            'spinner-large': '56px',\n            'spinner-xlarge': '72px'\n        };\n\n        const size = sizes[spinner.classList[1]] || sizes['spinner-medium'];\n\n        spinner.style.cssText = `\n            display: inline-block;\n            position: relative;\n            width: ${size};\n            height: ${size};\n        `;\n\n        const rings = spinner.querySelectorAll('.spinner-ring');\n        rings.forEach((ring, index) => {\n            ring.style.cssText = `\n                box-sizing: border-box;\n                display: block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                border: 3px solid transparent;\n                border-top-color: #3B82F6;\n                border-radius: 50%;\n                animation: spinner-rotate ${1.2 + (index * 0.1)}s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n                animation-delay: ${index * -0.15}s;\n            `;\n        });\n\n        // Add keyframes if not already added\n        this.addKeyframes();\n    }\n\n    /**\n     * Add CSS keyframes for spinner animation\n     */\n    addKeyframes() {\n        const styleId = 'spinner-keyframes';\n        if (document.getElementById(styleId)) {return;}\n\n        const style = document.createElement('style');\n        style.id = styleId;\n        style.textContent = `\n            @keyframes spinner-rotate {\n                0% { transform: rotate(0deg); }\n                100% { transform: rotate(360deg); }\n            }\n        `;\n        document.head.appendChild(style);\n    }\n\n    /**\n     * Announce to screen reader\n     */\n    announceToScreenReader(message) {\n        const announcement = document.createElement('div');\n        announcement.setAttribute('aria-live', 'polite');\n        announcement.setAttribute('aria-atomic', 'true');\n        announcement.style.cssText = `\n            position: absolute;\n            left: -10000px;\n            width: 1px;\n            height: 1px;\n            overflow: hidden;\n        `;\n        announcement.textContent = message;\n\n        document.body.appendChild(announcement);\n\n        setTimeout(() => {\n            if (announcement.parentNode) {\n                announcement.parentNode.removeChild(announcement);\n            }\n        }, 1000);\n    }\n\n    /**\n     * Check if spinner is currently visible\n     */\n    isSpinnerVisible() {\n        return this.isVisible;\n    }\n\n    /**\n     * Destroy spinner and clean up\n     */\n    destroy() {\n        this.hide();\n        this.container = null;\n        this.options = null;\n    }\n}\n\n// Export convenience functions\nexport const showSpinner = (container, options) => {\n    const spinner = new LoadingSpinner(container, options);\n    spinner.show();\n    return spinner;\n};\n\nexport const createSpinner = (container, options) => {\n    return new LoadingSpinner(container, options);\n};\n\nexport default LoadingSpinner;\n"],"names":["LoadingSpinner","constructor","container","options","this","document","getElementById","size","message","overlay","className","spinnerElement","isVisible","show","hide","createSpinnerElement","appendChild","body","requestAnimationFrame","style","opacity","announceToScreenReader","setTimeout","parentNode","removeChild","updateMessage","messageElement","querySelector","textContent","spinner","createElement","sizeClass","getSizeClass","overlayClass","innerHTML","applyStyles","sizes","small","medium","large","xlarge","element","cssText","backdrop","content","applySpinnerStyles","classList","querySelectorAll","forEach","ring","index","addKeyframes","styleId","id","head","announcement","setAttribute","isSpinnerVisible","destroy"],"mappings":"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"}