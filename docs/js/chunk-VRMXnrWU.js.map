{"version":3,"file":"chunk-VRMXnrWU.js","sources":["../../src/ui/d3-graph-enhanced.js","../../src/ui/dashboardUI.js"],"sourcesContent":["/**\n * Complete D3.js Enhanced Graph Visualization\n * Full-featured implementation with clustering, smooth transitions, and advanced interactions\n */\n\nimport { store } from '../core/store.js';\n\nexport class D3EnhancedGraphView {\n    constructor(containerId) {\n        this.containerId = containerId;\n        this.container = document.getElementById(containerId);\n\n        if (!this.container) {\n            throw new Error(`Container with ID '${this.containerId}' not found`);\n        }\n\n        // Initialize D3 if available\n        this.d3 = window.d3;\n        if (!this.d3) {\n            console.warn('D3.js not loaded. Loading from CDN...');\n            this.loadD3().then(() => {\n                this.init();\n            });\n            return;\n        }\n\n        this.svg = null;\n        this.simulation = null;\n        this.nodes = [];\n        this.edges = [];\n        this.hiddenNodes = new Set();\n        this.clusteredNodes = new Map();\n\n        // D3 selections\n        this.nodeSelection = null;\n        this.edgeSelection = null;\n        this.nodeGroup = null;\n        this.edgeGroup = null;\n\n        // Interaction state\n        this.selectedNodes = new Set();\n        this.highlightedNodes = new Set();\n        this.focusedNodeIndex = -1;\n        this.keyboardNavigationMode = false;\n        this.isDragging = false;\n        this.transform = { x: 0, y: 0, k: 1 };\n\n        // Accessibility features\n        this.focusableNodes = [];\n        this.nodeDescriptions = new Map();\n\n        // Enhanced configuration\n        this.config = {\n            width: 1000,\n            height: 700,\n            nodeRadius: {\n                small: 15,\n                medium: 20,\n                large: 28,\n                cluster: 35\n            },\n            edgeLength: {\n                default: 120,\n                cluster: 180,\n                strong: 90\n            },\n            nodeColors: {\n                'faa_stars_terminal': '#e74c3c',\n                'approach_control': '#3498db',\n                'faa_eram_terminal': '#2ecc71',\n                'geographic_location': '#f39c12',\n                'radar_equipment': '#9b59b6',\n                'communication_equipment': '#e67e22',\n                'default': '#95a5a6',\n                'cluster': '#34495e'\n            },\n            nodeIcons: {\n                'faa_stars_terminal': '🏢',\n                'approach_control': '🛫',\n                'faa_eram_terminal': '📡',\n                'geographic_location': '📍',\n                'radar_equipment': '📊',\n                'communication_equipment': '📻',\n                'default': '◉',\n                'cluster': '⚪'\n            },\n            edgeTypes: {\n                'LOCATED_AT': { color: '#3498db', width: 2.5, dash: null },\n                'CONNECTED_TO': { color: '#2ecc71', width: 2, dash: null },\n                'CONTAINS': { color: '#e74c3c', width: 3, dash: null },\n                'default': { color: '#bdc3c7', width: 1.8, dash: null }\n            },\n            forces: {\n                charge: -1200,\n                chargeDistance: 400,\n                collide: 40,\n                centerStrength: 0.05,\n                linkStrength: 0.8,\n                linkDistance: 120\n            },\n            transitions: {\n                duration: 900,\n                stagger: 50,\n                ease: this.d3?.easeCubicInOut || 'cubic-in-out'\n            },\n            clustering: {\n                enabled: true,\n                threshold: 4,\n                maxDistance: 150,\n                minClusterSize: 3\n            },\n            performance: {\n                maxSimulationIterations: 300, // Cap simulation iterations\n                simulationCooldown: 0.1, // Stop early when energy is low\n                renderThrottle: 16, // ~60fps for rendering\n                batchSize: 100, // Process nodes in batches\n                enableLOD: true, // Level of detail rendering\n                maxVisibleNodes: 1000, // Limit visible nodes for performance\n                useOffscreen: false, // Use offscreen canvas for heavy operations\n                enableWebGL: false // Use WebGL for better performance (if available)\n            }\n        };\n\n        // Performance monitoring\n        this.performanceStats = {\n            frameCount: 0,\n            lastFpsUpdate: performance.now(),\n            fps: 0,\n            renderTime: 0,\n            simulationIterations: 0\n        };\n\n        // Animation frame management\n        this.animationFrameId = null;\n        this.isAnimating = false;\n        this.pendingUpdates = new Set();\n\n        // Level of detail management\n        this.lodNodes = new Map();\n        this.lodEdges = new Map();\n        this.currentZoomLevel = 1;\n\n        this.init();\n        this.setupSubscriptions();\n        this.setupAccessibilityFeatures();\n    }\n\n    /**\n     * Load D3.js from CDN if not available\n     */\n    async loadD3() {\n        return new Promise((resolve, reject) => {\n            if (window.d3) {\n                this.d3 = window.d3;\n                resolve();\n                return;\n            }\n\n            const script = document.createElement('script');\n            script.src = 'https://d3js.org/d3.v7.min.js';\n            script.onload = () => {\n                this.d3 = window.d3;\n                resolve();\n            };\n            script.onerror = reject;\n            document.head.appendChild(script);\n        });\n    }\n\n    /**\n     * Initialize the enhanced graph view\n     */\n    init() {\n        if (!this.d3) {\n            console.error('D3.js not available');\n            return;\n        }\n\n        // Clear container\n        this.container.innerHTML = '';\n\n        // Create responsive SVG\n        this.createResponsiveSVG();\n\n        // Setup zoom and pan\n        this.setupZoomBehavior();\n\n        // Initialize force simulation\n        this.setupForceSimulation();\n\n        // Create definition section for patterns and gradients\n        this.createDefinitions();\n\n        console.log('D3 Enhanced Graph View initialized');\n    }\n\n    /**\n     * Create responsive SVG container\n     */\n    createResponsiveSVG() {\n        const containerRect = this.container.getBoundingClientRect();\n        this.config.width = containerRect.width || this.config.width;\n        this.config.height = containerRect.height || this.config.height;\n\n        this.svg = this.d3.select(this.container)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%')\n            .attr('viewBox', `0 0 ${this.config.width} ${this.config.height}`)\n            .style('background', 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)')\n            .style('border-radius', '8px');\n\n        // Create main group for zoomable content\n        this.zoomGroup = this.svg.append('g').attr('class', 'zoom-group');\n\n        // Create ordered groups for proper layering\n        this.edgeGroup = this.zoomGroup.append('g').attr('class', 'edges');\n        this.nodeGroup = this.zoomGroup.append('g').attr('class', 'nodes');\n    }\n\n    /**\n     * Setup enhanced zoom and pan behavior\n     */\n    setupZoomBehavior() {\n        this.zoom = this.d3.zoom()\n            .scaleExtent([0.1, 5])\n            .on('zoom', (event) => {\n                this.transform = event.transform;\n                this.zoomGroup.attr('transform', event.transform);\n\n                // Update store with zoom state\n                store.setState({\n                    graphView: {\n                        ...store.getState().graphView,\n                        zoom: event.transform.k,\n                        center: { x: -event.transform.x, y: -event.transform.y }\n                    }\n                });\n\n                // Adjust visual elements based on zoom level\n                this.adjustElementsForZoom(event.transform.k);\n            });\n\n        this.svg.call(this.zoom);\n\n        // Double-click to reset zoom\n        this.svg.on('dblclick.zoom', () => {\n            this.resetView();\n        });\n\n        // Keyboard navigation for graph container\n        this.setupGraphKeyboardNavigation();\n    }\n\n    /**\n     * Setup advanced force simulation with performance optimizations\n     */\n    setupForceSimulation() {\n        this.simulation = this.d3.forceSimulation()\n            .force('link', this.d3.forceLink()\n                .id(d => d.id)\n                .distance(d => this.getLinkDistance(d))\n                .strength(this.config.forces.linkStrength)\n            )\n            .force('charge', this.d3.forceManyBody()\n                .strength(this.config.forces.charge)\n                .distanceMax(this.config.forces.chargeDistance)\n            )\n            .force('center', this.d3.forceCenter(\n                this.config.width / 2,\n                this.config.height / 2\n            ).strength(this.config.forces.centerStrength))\n            .force('collision', this.d3.forceCollide()\n                .radius(d => this.getNodeRadius(d) + this.config.forces.collide)\n                .strength(0.8)\n            )\n            .force('x', this.d3.forceX(this.config.width / 2).strength(0.02))\n            .force('y', this.d3.forceY(this.config.height / 2).strength(0.02));\n\n        // Performance-optimized tick handling\n        this.simulation.on('tick', () => {\n            this.handleSimulationTick();\n        });\n\n        // Monitor simulation performance\n        this.simulation.on('end', () => {\n            console.log(`Simulation completed in ${this.performanceStats.simulationIterations} iterations`);\n        });\n\n        // Cap simulation iterations for performance\n        this.simulationIterationCount = 0;\n    }\n\n    /**\n     * Optimized simulation tick handling with requestAnimationFrame\n     */\n    handleSimulationTick() {\n        this.simulationIterationCount++;\n        this.performanceStats.simulationIterations = this.simulationIterationCount;\n\n        // Cap simulation iterations\n        if (this.simulationIterationCount > this.config.performance.maxSimulationIterations) {\n            this.simulation.stop();\n            console.log('Simulation stopped due to iteration limit');\n            return;\n        }\n\n        // Early termination based on energy\n        if (this.simulation.alpha() < this.config.performance.simulationCooldown) {\n            this.simulation.stop();\n            console.log('Simulation stopped due to low energy');\n            return;\n        }\n\n        // Use requestAnimationFrame for smooth updates\n        if (!this.isAnimating) {\n            this.isAnimating = true;\n\n            this.animationFrameId = requestAnimationFrame(() => {\n                const startTime = performance.now();\n\n                this.updatePositionsOptimized();\n\n                const endTime = performance.now();\n                this.performanceStats.renderTime = endTime - startTime;\n\n                this.updateFPS();\n                this.isAnimating = false;\n            });\n        }\n    }\n\n    /**\n     * Optimized position updates with batching\n     */\n    updatePositionsOptimized() {\n        const batchSize = this.config.performance.batchSize;\n\n        // Update nodes in batches\n        if (this.nodeSelection) {\n            const nodeData = this.nodeSelection.data();\n\n            // Process nodes in batches to avoid blocking\n            for (let i = 0; i < nodeData.length; i += batchSize) {\n                const batch = nodeData.slice(i, i + batchSize);\n\n                // Update positions for this batch\n                this.nodeSelection\n                    .filter((d, index) => index >= i && index < i + batchSize)\n                    .attr('transform', d => `translate(${d.x || 0},${d.y || 0})`);\n            }\n        }\n\n        // Update edges with level of detail\n        if (this.edgeSelection) {\n            this.updateEdgePositionsLOD();\n        }\n    }\n\n    /**\n     * Level of detail edge position updates\n     */\n    updateEdgePositionsLOD() {\n        const currentZoom = this.transform.k;\n\n        if (this.config.performance.enableLOD) {\n            // Only update visible edges at low zoom levels\n            if (currentZoom < 0.5) {\n                // At very low zoom, only update major edges\n                this.edgeSelection\n                    .filter(d => d.type === 'CONTAINS' || d.type === 'CONNECTED_TO')\n                    .select('.edge-line')\n                    .attr('x1', d => d.source.x)\n                    .attr('y1', d => d.source.y)\n                    .attr('x2', d => d.target.x)\n                    .attr('y2', d => d.target.y);\n            } else {\n                // At normal zoom, update all edges\n                this.edgeSelection.select('.edge-line')\n                    .attr('x1', d => d.source.x)\n                    .attr('y1', d => d.source.y)\n                    .attr('x2', d => d.target.x)\n                    .attr('y2', d => d.target.y);\n\n                this.edgeSelection.select('.edge-bg')\n                    .attr('x1', d => d.source.x)\n                    .attr('y1', d => d.source.y)\n                    .attr('x2', d => d.target.x)\n                    .attr('y2', d => d.target.y);\n\n                // Only show edge labels at high zoom\n                if (currentZoom > 1.5) {\n                    this.edgeSelection.select('.edge-label-group')\n                        .style('opacity', 1)\n                        .attr('transform', d => {\n                            const midX = (d.source.x + d.target.x) / 2;\n                            const midY = (d.source.y + d.target.y) / 2;\n                            const angle = Math.atan2(d.target.y - d.source.y, d.target.x - d.source.x);\n                            return `translate(${midX},${midY}) rotate(${angle * 180 / Math.PI})`;\n                        });\n                } else {\n                    this.edgeSelection.select('.edge-label-group')\n                        .style('opacity', 0);\n                }\n            }\n        } else {\n            // Standard update without LOD\n            this.updatePositions();\n        }\n    }\n\n    /**\n     * Update FPS counter\n     */\n    updateFPS() {\n        this.performanceStats.frameCount++;\n        const now = performance.now();\n\n        if (now - this.performanceStats.lastFpsUpdate > 1000) {\n            this.performanceStats.fps = Math.round(\n                (this.performanceStats.frameCount * 1000) /\n                (now - this.performanceStats.lastFpsUpdate)\n            );\n\n            this.performanceStats.frameCount = 0;\n            this.performanceStats.lastFpsUpdate = now;\n\n            // Log performance stats occasionally\n            if (this.simulationIterationCount % 100 === 0) {\n                console.log('Graph Performance:', {\n                    fps: this.performanceStats.fps,\n                    renderTime: Math.round(this.performanceStats.renderTime * 100) / 100 + 'ms',\n                    simulationIterations: this.performanceStats.simulationIterations,\n                    visibleNodes: this.nodes.length - this.hiddenNodes.size,\n                    visibleEdges: this.edges.length\n                });\n            }\n        }\n    }\n\n    /**\n     * Adjust visual elements based on zoom level for performance\n     */\n    adjustElementsForZoom(zoomLevel) {\n        this.currentZoomLevel = zoomLevel;\n\n        if (!this.config.performance.enableLOD) {return;}\n\n        // Adjust node detail based on zoom\n        if (this.nodeSelection) {\n            if (zoomLevel < 0.3) {\n                // Very low zoom - minimal detail\n                this.nodeSelection.select('.node-label-group').style('opacity', 0);\n                this.nodeSelection.select('.degree-indicator').style('opacity', 0);\n                this.nodeSelection.select('.cluster-badge').style('opacity', 0);\n            } else if (zoomLevel < 0.8) {\n                // Low zoom - some detail\n                this.nodeSelection.select('.node-label-group').style('opacity', 0.7);\n                this.nodeSelection.select('.degree-indicator').style('opacity', 0);\n                this.nodeSelection.select('.cluster-badge').style('opacity', d => this.clusteredNodes.has(d.id) ? 0.8 : 0);\n            } else {\n                // Normal zoom - full detail\n                this.nodeSelection.select('.node-label-group').style('opacity', 1);\n                this.nodeSelection.select('.degree-indicator').style('opacity', 0.8);\n                this.nodeSelection.select('.cluster-badge').style('opacity', d => this.clusteredNodes.has(d.id) ? 1 : 0);\n            }\n        }\n\n        // Adjust edge detail\n        if (this.edgeSelection) {\n            if (zoomLevel < 0.5) {\n                this.edgeSelection.select('.edge-bg').style('opacity', 0);\n            } else {\n                this.edgeSelection.select('.edge-bg').style('opacity', 0.3);\n            }\n        }\n    }\n\n    /**\n     * Throttled rendering for better performance\n     */\n    scheduleRender(renderFunction) {\n        if (this.pendingRender) {return;}\n\n        this.pendingRender = true;\n\n        requestAnimationFrame(() => {\n            renderFunction();\n            this.pendingRender = false;\n        });\n    }\n\n    /**\n     * Optimized visualization update with performance monitoring\n     */\n    updateVisualizationOptimized() {\n        const startTime = performance.now();\n\n        // Limit visible nodes for performance\n        if (this.nodes.length > this.config.performance.maxVisibleNodes) {\n            console.warn(`Large dataset detected (${this.nodes.length} nodes). Consider using clustering or filtering.`);\n        }\n\n        this.scheduleRender(() => {\n            this.updateNodes();\n            this.updateEdges();\n\n            const endTime = performance.now();\n            console.log(`Visualization update took ${endTime - startTime}ms`);\n        });\n    }\n\n    /**\n     * Create SVG definitions for gradients, patterns, and markers\n     */\n    createDefinitions() {\n        const defs = this.svg.append('defs');\n\n        // Create gradients for nodes\n        Object.entries(this.config.nodeColors).forEach(([type, color]) => {\n            const gradient = defs.append('radialGradient')\n                .attr('id', `gradient-${type}`)\n                .attr('cx', '30%')\n                .attr('cy', '30%');\n\n            gradient.append('stop')\n                .attr('offset', '0%')\n                .attr('stop-color', this.d3.color(color).brighter(0.5));\n\n            gradient.append('stop')\n                .attr('offset', '100%')\n                .attr('stop-color', color);\n        });\n\n        // Create enhanced arrow markers\n        this.createArrowMarkers(defs);\n\n        // Create filter effects\n        this.createFilterEffects(defs);\n    }\n\n    /**\n     * Create various arrow markers for different edge types\n     */\n    createArrowMarkers(defs) {\n        // Standard arrow\n        defs.append('marker')\n            .attr('id', 'arrowhead')\n            .attr('viewBox', '-0 -5 10 10')\n            .attr('refX', 18)\n            .attr('refY', 0)\n            .attr('orient', 'auto')\n            .attr('markerWidth', 8)\n            .attr('markerHeight', 8)\n            .append('path')\n            .attr('d', 'M 0,-5 L 10,0 L 0,5')\n            .attr('fill', '#7f8c8d');\n\n        // Highlighted arrow\n        defs.append('marker')\n            .attr('id', 'arrowhead-highlight')\n            .attr('viewBox', '-0 -5 10 10')\n            .attr('refX', 18)\n            .attr('refY', 0)\n            .attr('orient', 'auto')\n            .attr('markerWidth', 10)\n            .attr('markerHeight', 10)\n            .append('path')\n            .attr('d', 'M 0,-5 L 10,0 L 0,5')\n            .attr('fill', '#f39c12');\n\n        // Large arrow for thick edges\n        defs.append('marker')\n            .attr('id', 'arrowhead-large')\n            .attr('viewBox', '-0 -6 12 12')\n            .attr('refX', 20)\n            .attr('refY', 0)\n            .attr('orient', 'auto')\n            .attr('markerWidth', 10)\n            .attr('markerHeight', 10)\n            .append('path')\n            .attr('d', 'M 0,-6 L 12,0 L 0,6')\n            .attr('fill', '#e74c3c');\n    }\n\n    /**\n     * Create filter effects for visual enhancements\n     */\n    createFilterEffects(defs) {\n        // Drop shadow filter\n        const dropShadow = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('x', '-50%')\n            .attr('y', '-50%')\n            .attr('width', '200%')\n            .attr('height', '200%');\n\n        dropShadow.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'blur');\n\n        dropShadow.append('feOffset')\n            .attr('in', 'blur')\n            .attr('dx', 2)\n            .attr('dy', 2)\n            .attr('result', 'offsetBlur');\n\n        dropShadow.append('feFlood')\n            .attr('flood-color', '#000000')\n            .attr('flood-opacity', 0.3);\n\n        dropShadow.append('feComposite')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in');\n\n        const feMerge = dropShadow.append('feMerge');\n        feMerge.append('feMergeNode');\n        feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n        // Glow effect for selected nodes\n        const glow = defs.append('filter')\n            .attr('id', 'glow')\n            .attr('x', '-50%')\n            .attr('y', '-50%')\n            .attr('width', '200%')\n            .attr('height', '200%');\n\n        glow.append('feGaussianBlur')\n            .attr('stdDeviation', 4)\n            .attr('result', 'coloredBlur');\n\n        const glowMerge = glow.append('feMerge');\n        glowMerge.append('feMergeNode').attr('in', 'coloredBlur');\n        glowMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n    }\n\n    /**\n     * Setup store subscriptions\n     */\n    setupSubscriptions() {\n        // Subscribe to data changes\n        store.subscribe('nodes', (nodes) => {\n            this.nodes = [...nodes];\n            this.updateVisualization();\n        });\n\n        store.subscribe('edges', (edges) => {\n            this.edges = [...edges];\n            this.updateVisualization();\n        });\n\n        // Subscribe to selection changes\n        store.subscribe('selectedNode', (selectedNode) => {\n            this.handleNodeSelection(selectedNode);\n        });\n    }\n\n    /**\n     * Update the complete visualization with smooth transitions\n     */\n    updateVisualization() {\n        this.updateNodes();\n        this.updateEdges();\n    }\n\n    /**\n     * Enhanced node visualization with advanced features\n     */\n    updateNodes() {\n        if (!this.d3) {return;}\n\n        // Filter visible nodes\n        const visibleNodes = this.nodes.filter(n => !this.hiddenNodes.has(n.id));\n\n        // Data binding with key function\n        this.nodeSelection = this.nodeGroup\n            .selectAll('.node')\n            .data(visibleNodes, d => d.id);\n\n        // EXIT: Remove old nodes with staggered animation\n        this.nodeSelection.exit()\n            .transition()\n            .duration(this.config.transitions.duration)\n            .delay((d, i) => i * this.config.transitions.stagger)\n            .style('opacity', 0)\n            .attr('transform', d => `translate(${d.x || 0},${d.y || 0}) scale(0)`)\n            .remove();\n\n        // ENTER: Create new nodes\n        const nodeEnter = this.nodeSelection\n            .enter()\n            .append('g')\n            .attr('class', 'node')\n            .attr('transform', d => `translate(${d.x || this.config.width/2},${d.y || this.config.height/2}) scale(0)`)\n            .style('opacity', 0)\n            .call(this.setupDragBehavior())\n            .call(this.setupNodeInteractions());\n\n        // Create node structure\n        this.createEnhancedNodeStructure(nodeEnter);\n\n        // UPDATE + ENTER: Merge selections\n        this.nodeSelection = nodeEnter.merge(this.nodeSelection);\n\n        // Animate new nodes\n        nodeEnter\n            .transition()\n            .duration(this.config.transitions.duration)\n            .delay((d, i) => i * this.config.transitions.stagger)\n            .style('opacity', 1)\n            .attr('transform', d => `translate(${d.x || this.config.width/2},${d.y || this.config.height/2}) scale(1)`);\n\n        // Update existing nodes\n        this.updateExistingNodes();\n\n        // Update simulation\n        this.simulation.nodes(visibleNodes);\n        this.simulation.alpha(0.3).restart();\n    }\n\n    /**\n     * Create enhanced node structure with all visual elements\n     */\n    createEnhancedNodeStructure(nodeEnter) {\n        // Background circle for depth\n        nodeEnter.append('circle')\n            .attr('class', 'node-bg')\n            .attr('r', d => this.getNodeRadius(d) + 4)\n            .attr('fill', '#ffffff')\n            .attr('fill-opacity', 0.4)\n            .attr('filter', 'url(#drop-shadow)');\n\n        // Main node circle with gradient\n        nodeEnter.append('circle')\n            .attr('class', 'node-circle')\n            .attr('r', d => this.getNodeRadius(d))\n            .attr('fill', d => `url(#gradient-${d.type || 'default'})`)\n            .attr('stroke', '#2c3e50')\n            .attr('stroke-width', 2.5)\n            .style('cursor', 'pointer');\n\n        // Node icon/symbol\n        nodeEnter.append('text')\n            .attr('class', 'node-icon')\n            .attr('text-anchor', 'middle')\n            .attr('dominant-baseline', 'central')\n            .style('font-size', d => `${Math.max(12, this.getNodeRadius(d) * 0.8)}px`)\n            .style('fill', '#ffffff')\n            .style('font-weight', 'bold')\n            .style('text-shadow', '1px 1px 2px rgba(0,0,0,0.5)')\n            .style('pointer-events', 'none')\n            .style('user-select', 'none')\n            .text(d => this.getNodeIcon(d.type));\n\n        // Node label with background\n        const labelGroup = nodeEnter.append('g')\n            .attr('class', 'node-label-group')\n            .attr('transform', d => `translate(0, ${this.getNodeRadius(d) + 25})`);\n\n        // Label background\n        labelGroup.append('rect')\n            .attr('class', 'label-bg')\n            .attr('fill', 'rgba(255, 255, 255, 0.95)')\n            .attr('stroke', '#bdc3c7')\n            .attr('stroke-width', 1)\n            .attr('rx', 4)\n            .attr('ry', 4)\n            .style('filter', 'url(#drop-shadow)');\n\n        // Label text\n        labelGroup.append('text')\n            .attr('class', 'node-label')\n            .attr('text-anchor', 'middle')\n            .attr('dominant-baseline', 'central')\n            .style('font-size', '11px')\n            .style('font-weight', 'bold')\n            .style('fill', '#2c3e50')\n            .style('pointer-events', 'none')\n            .text(d => this.truncateLabel(d.name || d.label || d.id, 18));\n\n        // Position and size label background\n        labelGroup.selectAll('.label-bg')\n            .each(function(d) {\n                const textBox = d3.select(this.parentNode).select('.node-label').node().getBBox();\n                d3.select(this)\n                    .attr('x', textBox.x - 4)\n                    .attr('y', textBox.y - 2)\n                    .attr('width', textBox.width + 8)\n                    .attr('height', textBox.height + 4);\n            });\n\n        // Cluster indicator badge\n        const clusterBadge = nodeEnter.append('g')\n            .attr('class', 'cluster-badge')\n            .attr('transform', d => `translate(${this.getNodeRadius(d) - 8}, ${-this.getNodeRadius(d) + 8})`)\n            .style('opacity', d => this.clusteredNodes.has(d.id) ? 1 : 0);\n\n        clusterBadge.append('circle')\n            .attr('r', 8)\n            .attr('fill', '#f39c12')\n            .attr('stroke', '#e67e22')\n            .attr('stroke-width', 2);\n\n        clusterBadge.append('text')\n            .attr('text-anchor', 'middle')\n            .attr('dominant-baseline', 'central')\n            .style('font-size', '10px')\n            .style('font-weight', 'bold')\n            .style('fill', '#2c3e50')\n            .text(d => this.getClusterSize(d.id));\n\n        // Connection degree indicator\n        const degreeIndicator = nodeEnter.append('g')\n            .attr('class', 'degree-indicator')\n            .attr('transform', d => `translate(${-this.getNodeRadius(d) + 8}, ${-this.getNodeRadius(d) + 8})`);\n\n        degreeIndicator.append('circle')\n            .attr('r', 6)\n            .attr('fill', '#3498db')\n            .attr('stroke', '#2980b9')\n            .attr('stroke-width', 1)\n            .style('opacity', 0.8);\n\n        degreeIndicator.append('text')\n            .attr('text-anchor', 'middle')\n            .attr('dominant-baseline', 'central')\n            .style('font-size', '8px')\n            .style('font-weight', 'bold')\n            .style('fill', 'white')\n            .text(d => this.getNodeDegree(d));\n    }\n\n    /**\n     * Update existing nodes with current data\n     */\n    updateExistingNodes() {\n        // Update node circles\n        this.nodeSelection.select('.node-circle')\n            .transition()\n            .duration(this.config.transitions.duration / 2)\n            .attr('r', d => this.getNodeRadius(d))\n            .attr('stroke', d => this.selectedNodes.has(d.id) ? '#f39c12' : '#2c3e50')\n            .attr('stroke-width', d => this.selectedNodes.has(d.id) ? 4 : 2.5)\n            .style('filter', d => this.selectedNodes.has(d.id) ? 'url(#glow)' : null);\n\n        // Update cluster badges\n        this.nodeSelection.select('.cluster-badge')\n            .transition()\n            .duration(this.config.transitions.duration / 2)\n            .style('opacity', d => this.clusteredNodes.has(d.id) ? 1 : 0);\n\n        // Update degree indicators\n        this.nodeSelection.select('.degree-indicator text')\n            .text(d => this.getNodeDegree(d));\n    }\n\n    /**\n     * Enhanced edge visualization\n     */\n    updateEdges() {\n        if (!this.d3) {return;}\n\n        // Filter visible edges\n        const visibleEdges = this.edges.filter(edge => {\n            const sourceVisible = !this.hiddenNodes.has(edge.source.id || edge.source);\n            const targetVisible = !this.hiddenNodes.has(edge.target.id || edge.target);\n            return sourceVisible && targetVisible;\n        });\n\n        // Data binding\n        this.edgeSelection = this.edgeGroup\n            .selectAll('.edge')\n            .data(visibleEdges, d => d.id);\n\n        // EXIT\n        this.edgeSelection.exit()\n            .transition()\n            .duration(this.config.transitions.duration)\n            .style('opacity', 0)\n            .remove();\n\n        // ENTER\n        const edgeEnter = this.edgeSelection\n            .enter()\n            .append('g')\n            .attr('class', 'edge')\n            .style('opacity', 0)\n            .call(this.setupEdgeInteractions());\n\n        // Create edge structure\n        this.createEdgeStructure(edgeEnter);\n\n        // MERGE\n        this.edgeSelection = edgeEnter.merge(this.edgeSelection);\n\n        // Animate new edges\n        edgeEnter\n            .transition()\n            .duration(this.config.transitions.duration)\n            .style('opacity', 1);\n\n        // Update simulation links\n        this.simulation.force('link').links(visibleEdges);\n        this.simulation.alpha(0.3).restart();\n    }\n\n    /**\n     * Create comprehensive edge structure\n     */\n    createEdgeStructure(edgeEnter) {\n        // Background line for glow effect\n        edgeEnter.append('line')\n            .attr('class', 'edge-bg')\n            .attr('stroke', '#ffffff')\n            .attr('stroke-width', d => this.getEdgeWidth(d.type) + 4)\n            .attr('stroke-opacity', 0.3);\n\n        // Main edge line\n        edgeEnter.append('line')\n            .attr('class', 'edge-line')\n            .attr('stroke', d => this.getEdgeColor(d.type))\n            .attr('stroke-width', d => this.getEdgeWidth(d.type))\n            .attr('stroke-dasharray', d => this.getEdgeDash(d.type))\n            .attr('marker-end', d => this.getMarkerEnd(d.type))\n            .style('opacity', 0.8);\n\n        // Edge label group\n        const labelGroup = edgeEnter.append('g')\n            .attr('class', 'edge-label-group')\n            .style('opacity', 0);\n\n        // Label background\n        labelGroup.append('rect')\n            .attr('class', 'edge-label-bg')\n            .attr('fill', 'rgba(255, 255, 255, 0.95)')\n            .attr('stroke', '#bdc3c7')\n            .attr('stroke-width', 1)\n            .attr('rx', 3);\n\n        // Label text\n        labelGroup.append('text')\n            .attr('class', 'edge-label')\n            .attr('text-anchor', 'middle')\n            .attr('dominant-baseline', 'central')\n            .style('font-size', '10px')\n            .style('font-weight', 'bold')\n            .style('fill', '#2c3e50')\n            .style('pointer-events', 'none')\n            .text(d => d.type || d.label || '');\n    }\n\n    /**\n     * Setup advanced drag behavior\n     */\n    setupDragBehavior() {\n        return this.d3.drag()\n            .on('start', (event, d) => {\n                if (!event.active) {this.simulation.alphaTarget(0.3).restart();}\n                d.fx = d.x;\n                d.fy = d.y;\n                this.isDragging = true;\n\n                // Visual feedback\n                this.d3.select(event.sourceEvent.target.parentNode)\n                    .select('.node-circle')\n                    .transition()\n                    .attr('r', this.getNodeRadius(d) + 5)\n                    .style('filter', 'url(#glow)');\n            })\n            .on('drag', (event, d) => {\n                d.fx = event.x;\n                d.fy = event.y;\n            })\n            .on('end', (event, d) => {\n                if (!event.active) {this.simulation.alphaTarget(0);}\n                this.isDragging = false;\n\n                // Reset visual feedback\n                this.d3.select(event.sourceEvent.target.parentNode)\n                    .select('.node-circle')\n                    .transition()\n                    .attr('r', this.getNodeRadius(d))\n                    .style('filter', this.selectedNodes.has(d.id) ? 'url(#glow)' : null);\n\n                // Allow node to move freely if not fixed\n                if (!event.active) {\n                    d.fx = null;\n                    d.fy = null;\n                }\n            });\n    }\n\n    /**\n     * Setup enhanced node interactions\n     */\n    setupNodeInteractions() {\n        return (selection) => {\n            selection\n                .on('click', (event, d) => {\n                    event.stopPropagation();\n                    this.handleNodeClick(event, d);\n                })\n                .on('dblclick', (event, d) => {\n                    event.stopPropagation();\n                    this.handleNodeDoubleClick(event, d);\n                })\n                .on('mouseenter', (event, d) => {\n                    this.handleNodeMouseEnter(event, d);\n                })\n                .on('mouseleave', (event, d) => {\n                    this.handleNodeMouseLeave(event, d);\n                })\n                .on('contextmenu', (event, d) => {\n                    event.preventDefault();\n                    this.showContextMenu(event, d);\n                });\n        };\n    }\n\n    /**\n     * Setup edge interactions\n     */\n    setupEdgeInteractions() {\n        return (selection) => {\n            selection\n                .on('click', (event, d) => {\n                    event.stopPropagation();\n                    this.handleEdgeClick(event, d);\n                })\n                .on('mouseenter', (event, d) => {\n                    this.highlightEdge(d, true);\n                })\n                .on('mouseleave', (event, d) => {\n                    this.highlightEdge(d, false);\n                });\n        };\n    }\n\n    /**\n     * Handle node click with advanced selection logic\n     */\n    handleNodeClick(event, node) {\n        if (this.selectedNodes.has(node.id)) {\n            if (event.ctrlKey || event.metaKey) {\n                this.selectedNodes.delete(node.id);\n                if (this.selectedNodes.size === 0) {\n                    store.setState({ selectedNode: null });\n                }\n            } else {\n                // Single selection\n                this.selectedNodes.clear();\n                this.selectedNodes.add(node.id);\n                store.setState({ selectedNode: node });\n            }\n        } else {\n            if (!event.ctrlKey && !event.metaKey) {\n                this.selectedNodes.clear();\n            }\n            this.selectedNodes.add(node.id);\n            store.setState({ selectedNode: node });\n        }\n\n        this.updateNodeSelection();\n        this.highlightConnectedElements(node.id);\n    }\n\n    /**\n     * Handle node double-click for cluster expansion\n     */\n    handleNodeDoubleClick(event, node) {\n        if (this.clusteredNodes.has(node.id)) {\n            this.expandCluster(node.id);\n        } else {\n            const neighbors = this.getNodeNeighbors(node.id);\n            if (neighbors.length >= this.config.clustering.minClusterSize) {\n                this.createCluster(node.id, neighbors);\n            } else {\n                // Focus on node and its immediate connections\n                this.focusOnNode(node.id);\n            }\n        }\n    }\n\n    /**\n     * Enhanced mouse enter with tooltip and highlights\n     */\n    handleNodeMouseEnter(event, node) {\n        this.showEnhancedTooltip(event, node);\n        this.highlightNodeNeighborhood(node.id, true);\n    }\n\n    /**\n     * Handle mouse leave\n     */\n    handleNodeMouseLeave(event, node) {\n        this.hideEnhancedTooltip();\n        if (!this.selectedNodes.has(node.id)) {\n            this.highlightNodeNeighborhood(node.id, false);\n        }\n    }\n\n    /**\n     * Update position during simulation\n     */\n    updatePositions() {\n        // Update node positions\n        if (this.nodeSelection) {\n            this.nodeSelection\n                .attr('transform', d => `translate(${d.x},${d.y})`);\n        }\n\n        // Update edge positions\n        if (this.edgeSelection) {\n            this.edgeSelection.select('.edge-line')\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);\n\n            this.edgeSelection.select('.edge-bg')\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);\n\n            // Update edge labels\n            this.edgeSelection.select('.edge-label-group')\n                .attr('transform', d => {\n                    const midX = (d.source.x + d.target.x) / 2;\n                    const midY = (d.source.y + d.target.y) / 2;\n                    const angle = Math.atan2(d.target.y - d.source.y, d.target.x - d.source.x);\n                    return `translate(${midX},${midY}) rotate(${angle * 180 / Math.PI})`;\n                });\n        }\n    }\n\n    // Utility methods for node and edge properties\n    getNodeRadius(node) {\n        const degree = this.getNodeDegree(node);\n        if (this.clusteredNodes.has(node.id)) {return this.config.nodeRadius.cluster;}\n        if (degree > 8) {return this.config.nodeRadius.large;}\n        if (degree < 3) {return this.config.nodeRadius.small;}\n        return this.config.nodeRadius.medium;\n    }\n\n    getNodeColor(type) {\n        return this.config.nodeColors[type] || this.config.nodeColors.default;\n    }\n\n    getNodeIcon(type) {\n        return this.config.nodeIcons[type] || this.config.nodeIcons.default;\n    }\n\n    getNodeDegree(node) {\n        return this.edges.filter(edge =>\n            edge.source === node.id || edge.target === node.id ||\n            edge.source.id === node.id || edge.target.id === node.id\n        ).length;\n    }\n\n    getEdgeColor(type) {\n        return this.config.edgeTypes[type]?.color || this.config.edgeTypes.default.color;\n    }\n\n    getEdgeWidth(type) {\n        return this.config.edgeTypes[type]?.width || this.config.edgeTypes.default.width;\n    }\n\n    getEdgeDash(type) {\n        return this.config.edgeTypes[type]?.dash;\n    }\n\n    getLinkDistance(edge) {\n        const edgeConfig = this.config.edgeTypes[edge.type] || this.config.edgeTypes.default;\n        return this.config.edgeLength[edgeConfig.distance] || this.config.edgeLength.default;\n    }\n\n    getMarkerEnd(type) {\n        if (type === 'CONTAINS') {return 'url(#arrowhead-large)';}\n        return 'url(#arrowhead)';\n    }\n\n    getClusterSize(nodeId) {\n        const cluster = this.clusteredNodes.get(nodeId);\n        return cluster ? cluster.length : 0;\n    }\n\n    truncateLabel(text, maxLength = 20) {\n        return text && text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    }\n\n    // Enhanced tooltip system\n    showEnhancedTooltip(event, node) {\n        // Remove existing tooltip\n        this.d3.selectAll('.enhanced-tooltip').remove();\n\n        const tooltip = this.d3.select('body')\n            .append('div')\n            .attr('class', 'enhanced-tooltip')\n            .style('position', 'absolute')\n            .style('background', 'linear-gradient(135deg, rgba(44,62,80,0.95), rgba(52,73,94,0.95))')\n            .style('color', 'white')\n            .style('padding', '15px')\n            .style('border-radius', '10px')\n            .style('font-size', '13px')\n            .style('font-family', 'system-ui, -apple-system, sans-serif')\n            .style('pointer-events', 'none')\n            .style('z-index', '3000')\n            .style('box-shadow', '0 8px 25px rgba(0,0,0,0.3)')\n            .style('border', '1px solid rgba(255,255,255,0.1)')\n            .style('max-width', '350px')\n            .style('backdrop-filter', 'blur(5px)')\n            .style('opacity', 0);\n\n        const degree = this.getNodeDegree(node);\n        const isCluster = this.clusteredNodes.has(node.id);\n        const clusterSize = isCluster ? this.getClusterSize(node.id) : 0;\n\n        tooltip.html(`\n            <div style=\"display: flex; align-items: center; margin-bottom: 10px;\">\n                <span style=\"font-size: 24px; margin-right: 10px;\">${this.getNodeIcon(node.type)}</span>\n                <div>\n                    <div style=\"font-weight: bold; font-size: 16px;\">${node.name || node.label || node.id}</div>\n                    <div style=\"font-size: 11px; opacity: 0.8;\">${node.type || 'Unknown Type'}</div>\n                </div>\n            </div>\n            <div style=\"margin-bottom: 8px;\"><strong>ID:</strong> ${node.id}</div>\n            <div style=\"margin-bottom: 8px;\"><strong>Connections:</strong> ${degree}</div>\n            ${node.address?.city ? `<div style=\"margin-bottom: 8px;\"><strong>Location:</strong> ${node.address.city}, ${node.address.state}</div>` : ''}\n            ${isCluster ? `<div style=\"margin-bottom: 8px; color: #f39c12;\"><strong>📁 Cluster:</strong> ${clusterSize} hidden nodes</div>` : ''}\n            <div style=\"margin-top: 12px; padding-top: 8px; border-top: 1px solid rgba(255,255,255,0.2); font-size: 11px; opacity: 0.7;\">\n                Click to select • Double-click to ${isCluster ? 'expand' : 'cluster'} • Right-click for options\n            </div>\n        `);\n\n        // Position tooltip\n        const tooltipNode = tooltip.node();\n        const tooltipRect = tooltipNode.getBoundingClientRect();\n        const windowWidth = window.innerWidth;\n        const windowHeight = window.innerHeight;\n\n        let left = event.pageX + 15;\n        let top = event.pageY - 10;\n\n        // Adjust position to keep tooltip in viewport\n        if (left + tooltipRect.width > windowWidth) {\n            left = event.pageX - tooltipRect.width - 15;\n        }\n        if (top + tooltipRect.height > windowHeight) {\n            top = event.pageY - tooltipRect.height + 10;\n        }\n\n        tooltip\n            .style('left', left + 'px')\n            .style('top', top + 'px')\n            .transition()\n            .duration(200)\n            .style('opacity', 1);\n    }\n\n    hideEnhancedTooltip() {\n        this.d3.selectAll('.enhanced-tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0)\n            .remove();\n    }\n\n    // Clustering methods\n    getNodeNeighbors(nodeId, depth = 1) {\n        const neighbors = new Set();\n        const visited = new Set();\n        const queue = [{ id: nodeId, currentDepth: 0 }];\n\n        while (queue.length > 0) {\n            const { id: currentId, currentDepth } = queue.shift();\n\n            if (visited.has(currentId) || currentDepth > depth) {continue;}\n            visited.add(currentId);\n\n            this.edges.forEach(edge => {\n                let neighborId = null;\n                if (edge.source.id === currentId || edge.source === currentId) {\n                    neighborId = edge.target.id || edge.target;\n                } else if (edge.target.id === currentId || edge.target === currentId) {\n                    neighborId = edge.source.id || edge.source;\n                }\n\n                if (neighborId && !visited.has(neighborId) && neighborId !== nodeId) {\n                    neighbors.add(neighborId);\n                    if (currentDepth < depth) {\n                        queue.push({ id: neighborId, currentDepth: currentDepth + 1 });\n                    }\n                }\n            });\n        }\n\n        return Array.from(neighbors);\n    }\n\n    // View control methods\n    resetView() {\n        this.svg.transition()\n            .duration(1000)\n            .call(this.zoom.transform, this.d3.zoomIdentity);\n    }\n\n    fitToView() {\n        if (this.nodes.length === 0) {return;}\n\n        const bounds = this.getGraphBounds();\n        const fullWidth = this.config.width;\n        const fullHeight = this.config.height;\n\n        const scale = Math.min(\n            fullWidth / bounds.width,\n            fullHeight / bounds.height\n        ) * 0.8;\n\n        const translateX = fullWidth / 2 - scale * (bounds.x + bounds.width / 2);\n        const translateY = fullHeight / 2 - scale * (bounds.y + bounds.height / 2);\n\n        this.svg.transition()\n            .duration(1000)\n            .call(this.zoom.transform,\n                this.d3.zoomIdentity\n                    .translate(translateX, translateY)\n                    .scale(scale)\n            );\n    }\n\n    getGraphBounds() {\n        const visibleNodes = this.nodes.filter(n => !this.hiddenNodes.has(n.id));\n        if (visibleNodes.length === 0) {return { x: 0, y: 0, width: 1, height: 1 };}\n\n        const xs = visibleNodes.map(d => d.x || 0);\n        const ys = visibleNodes.map(d => d.y || 0);\n        const padding = 50;\n\n        return {\n            x: Math.min(...xs) - padding,\n            y: Math.min(...ys) - padding,\n            width: Math.max(...xs) - Math.min(...xs) + 2 * padding,\n            height: Math.max(...ys) - Math.min(...ys) + 2 * padding\n        };\n    }\n\n    /**\n     * Setup comprehensive accessibility features\n     */\n    setupAccessibilityFeatures() {\n        this.setupGraphKeyboardNavigation();\n        this.addScreenReaderSupport();\n        this.setupFocusManagement();\n        this.createAccessibilityDescriptions();\n    }\n\n    /**\n     * Setup keyboard navigation for the graph\n     */\n    setupGraphKeyboardNavigation() {\n        if (!this.container) {return;}\n\n        // Make container focusable\n        this.container.setAttribute('tabindex', '0');\n        this.container.setAttribute('role', 'application');\n        this.container.setAttribute('aria-label', 'Interactive knowledge graph');\n\n        // Add keyboard event listener\n        this.container.addEventListener('keydown', (event) => {\n            this.handleGraphKeyboard(event);\n        });\n\n        // Focus management\n        this.container.addEventListener('focus', () => {\n            this.announceGraphFocus();\n        });\n    }\n\n    /**\n     * Handle keyboard navigation within the graph\n     */\n    handleGraphKeyboard(event) {\n        if (!this.nodes || this.nodes.length === 0) {return;}\n\n        const visibleNodes = this.nodes.filter(n => !this.hiddenNodes.has(n.id));\n        if (visibleNodes.length === 0) {return;}\n\n        switch (event.key) {\n        case 'ArrowRight':\n        case 'ArrowDown':\n            event.preventDefault();\n            this.navigateToNextNode();\n            break;\n\n        case 'ArrowLeft':\n        case 'ArrowUp':\n            event.preventDefault();\n            this.navigateToPreviousNode();\n            break;\n\n        case 'Enter':\n        case ' ':\n            event.preventDefault();\n            this.selectFocusedNode();\n            break;\n\n        case 'Escape':\n            event.preventDefault();\n            this.clearSelection();\n            this.container.blur();\n            break;\n\n        case 'Tab':\n            // Allow normal tab navigation\n            break;\n\n        case '+':\n        case '=':\n            event.preventDefault();\n            this.zoomIn();\n            break;\n\n        case '-':\n            event.preventDefault();\n            this.zoomOut();\n            break;\n\n        case '0':\n            event.preventDefault();\n            this.resetView();\n            break;\n\n        case 'f':\n        case 'F':\n            event.preventDefault();\n            this.fitToView();\n            break;\n        }\n    }\n\n    /**\n     * Navigate to next node\n     */\n    navigateToNextNode() {\n        const visibleNodes = this.nodes.filter(n => !this.hiddenNodes.has(n.id));\n        if (visibleNodes.length === 0) {return;}\n\n        this.focusedNodeIndex = (this.focusedNodeIndex + 1) % visibleNodes.length;\n        const focusedNode = visibleNodes[this.focusedNodeIndex];\n\n        this.focusOnNode(focusedNode.id);\n        this.announceNodeFocus(focusedNode);\n    }\n\n    /**\n     * Navigate to previous node\n     */\n    navigateToPreviousNode() {\n        const visibleNodes = this.nodes.filter(n => !this.hiddenNodes.has(n.id));\n        if (visibleNodes.length === 0) {return;}\n\n        this.focusedNodeIndex = this.focusedNodeIndex <= 0 ?\n            visibleNodes.length - 1 : this.focusedNodeIndex - 1;\n        const focusedNode = visibleNodes[this.focusedNodeIndex];\n\n        this.focusOnNode(focusedNode.id);\n        this.announceNodeFocus(focusedNode);\n    }\n\n    /**\n     * Select the currently focused node\n     */\n    selectFocusedNode() {\n        const visibleNodes = this.nodes.filter(n => !this.hiddenNodes.has(n.id));\n        if (visibleNodes.length === 0 || this.focusedNodeIndex < 0) {return;}\n\n        const focusedNode = visibleNodes[this.focusedNodeIndex];\n        this.handleNodeClick({ ctrlKey: false, metaKey: false }, focusedNode);\n    }\n\n    /**\n     * Clear all selections\n     */\n    clearSelection() {\n        this.selectedNodes.clear();\n        this.updateNodeSelection();\n        store.setState({ selectedNode: null });\n        this.announceToScreenReader('Selection cleared');\n    }\n\n    /**\n     * Focus on a specific node\n     */\n    focusOnNode(nodeId) {\n        const node = this.nodes.find(n => n.id === nodeId);\n        if (!node || this.hiddenNodes.has(nodeId)) {return;}\n\n        // Center the view on the node\n        const transform = this.d3.zoomIdentity\n            .translate(\n                this.config.width / 2 - node.x * this.transform.k,\n                this.config.height / 2 - node.y * this.transform.k\n            )\n            .scale(Math.max(1, this.transform.k));\n\n        this.svg.transition()\n            .duration(750)\n            .call(this.zoom.transform, transform);\n\n        // Highlight the focused node\n        this.highlightFocusedNode(nodeId);\n    }\n\n    /**\n     * Highlight the focused node for keyboard navigation\n     */\n    highlightFocusedNode(nodeId) {\n        // Remove previous focus highlights\n        this.nodeSelection.select('.focus-ring').remove();\n\n        // Add focus ring to current node\n        const focusedNodeSelection = this.nodeSelection\n            .filter(d => d.id === nodeId);\n\n        focusedNodeSelection.insert('circle', '.node-circle')\n            .attr('class', 'focus-ring')\n            .attr('r', d => this.getNodeRadius(d) + 8)\n            .attr('fill', 'none')\n            .attr('stroke', '#ff6b35')\n            .attr('stroke-width', 3)\n            .attr('stroke-dasharray', '5,5')\n            .style('opacity', 0)\n            .transition()\n            .duration(300)\n            .style('opacity', 0.8);\n\n        // Animate the focus ring\n        const animate = () => {\n            focusedNodeSelection.select('.focus-ring')\n                .transition()\n                .duration(1000)\n                .attr('stroke-dashoffset', -10)\n                .on('end', animate);\n        };\n        animate();\n    }\n\n    /**\n     * Add comprehensive screen reader support\n     */\n    addScreenReaderSupport() {\n        // Create ARIA description for the graph\n        const description = document.createElement('div');\n        description.id = 'graph-description';\n        description.className = 'sr-only';\n        description.innerHTML = `\n            This is an interactive knowledge graph visualization.\n            Use arrow keys to navigate between nodes.\n            Press Enter or Space to select a node.\n            Press Escape to clear selections and exit graph navigation.\n            Use + and - keys to zoom in and out.\n            Press F to fit all nodes to view.\n            Press 0 to reset the view.\n        `;\n        document.body.appendChild(description);\n\n        // Link description to graph container\n        this.container.setAttribute('aria-describedby', 'graph-description');\n    }\n\n    /**\n     * Setup focus management\n     */\n    setupFocusManagement() {\n        // Track focus state\n        this.container.addEventListener('focus', () => {\n            this.keyboardNavigationMode = true;\n            this.container.classList.add('keyboard-focused');\n        });\n\n        this.container.addEventListener('blur', () => {\n            this.keyboardNavigationMode = false;\n            this.container.classList.remove('keyboard-focused');\n\n            // Remove focus rings when leaving graph\n            if (this.nodeSelection) {\n                this.nodeSelection.selectAll('.focus-ring')\n                    .transition()\n                    .duration(300)\n                    .style('opacity', 0)\n                    .remove();\n            }\n        });\n\n        // Reset focus index when nodes change\n        this.container.addEventListener('nodeDataChanged', () => {\n            this.focusedNodeIndex = -1;\n        });\n    }\n\n    /**\n     * Create accessibility descriptions for nodes\n     */\n    createAccessibilityDescriptions() {\n        this.nodes.forEach(node => {\n            const degree = this.getNodeDegree(node);\n            const description = `${node.type || 'Node'} named ${node.name || node.id}. ` +\n                `Has ${degree} connection${degree !== 1 ? 's' : ''}. ` +\n                `${node.address?.city ? `Located in ${node.address.city}, ${node.address.state}. ` : ''}` +\n                `${this.clusteredNodes.has(node.id) ?\n                    `This is a cluster containing ${this.getClusterSize(node.id)} nodes. ` : ''}`;\n\n            this.nodeDescriptions.set(node.id, description);\n        });\n    }\n\n    /**\n     * Announce graph focus to screen readers\n     */\n    announceGraphFocus() {\n        const nodeCount = this.nodes.filter(n => !this.hiddenNodes.has(n.id)).length;\n        const edgeCount = this.edges.length;\n\n        this.announceToScreenReader(\n            `Graph focused. Contains ${nodeCount} nodes and ${edgeCount} connections. ` +\n            'Use arrow keys to navigate, Enter to select, Escape to exit.'\n        );\n    }\n\n    /**\n     * Announce node focus to screen readers\n     */\n    announceNodeFocus(node) {\n        const description = this.nodeDescriptions.get(node.id) ||\n            `Node ${node.name || node.id}`;\n        this.announceToScreenReader(`Focused on: ${description}`);\n    }\n\n    /**\n     * Announce to screen reader (connects to dashboard UI)\n     */\n    announceToScreenReader(message) {\n        // Use global dashboard UI announcer if available\n        if (window.dashboardUI && window.dashboardUI.announceToScreenReader) {\n            window.dashboardUI.announceToScreenReader(message);\n            return;\n        }\n\n        // Fallback to direct announcement\n        const announcer = document.getElementById('sr-announcer');\n        if (announcer) {\n            announcer.textContent = message;\n            setTimeout(() => {\n                announcer.textContent = '';\n            }, 1000);\n        }\n    }\n\n    /**\n     * Zoom in functionality\n     */\n    zoomIn() {\n        const newScale = Math.min(5, this.transform.k * 1.2);\n        this.svg.transition()\n            .duration(300)\n            .call(this.zoom.scaleBy, 1.2);\n\n        this.announceToScreenReader(`Zoomed in. Current zoom level: ${Math.round(newScale * 100)}%`);\n    }\n\n    /**\n     * Zoom out functionality\n     */\n    zoomOut() {\n        const newScale = Math.max(0.1, this.transform.k * 0.8);\n        this.svg.transition()\n            .duration(300)\n            .call(this.zoom.scaleBy, 0.8);\n\n        this.announceToScreenReader(`Zoomed out. Current zoom level: ${Math.round(newScale * 100)}%`);\n    }\n\n    /**\n     * Update node selection with accessibility enhancements\n     */\n    updateNodeSelection() {\n        if (!this.nodeSelection) {return;}\n\n        this.nodeSelection.each((d, i, nodes) => {\n            const node = this.d3.select(nodes[i]);\n            const circle = node.select('.node-circle');\n\n            if (this.selectedNodes.has(d.id)) {\n                circle.attr('stroke', '#f39c12')\n                    .attr('stroke-width', 4)\n                    .style('filter', 'url(#glow)');\n\n                // Add selection indicator for screen readers\n                node.attr('aria-selected', 'true');\n            } else {\n                circle.attr('stroke', '#2c3e50')\n                    .attr('stroke-width', 2.5)\n                    .style('filter', null);\n\n                node.attr('aria-selected', 'false');\n            }\n        });\n    }\n\n    /**\n     * Enhanced node highlighting with accessibility\n     */\n    highlightNodeNeighborhood(nodeId, highlight = true) {\n        if (!this.nodeSelection || !this.edgeSelection) {return;}\n\n        const neighbors = new Set(this.getNodeNeighbors(nodeId));\n        neighbors.add(nodeId);\n\n        // Highlight nodes\n        this.nodeSelection.style('opacity', d => {\n            return highlight ? (neighbors.has(d.id) ? 1 : 0.3) : 1;\n        });\n\n        // Highlight edges\n        this.edgeSelection.style('opacity', d => {\n            const sourceId = d.source.id || d.source;\n            const targetId = d.target.id || d.target;\n            return highlight ?\n                (neighbors.has(sourceId) && neighbors.has(targetId) ? 1 : 0.2) : 0.8;\n        });\n\n        if (highlight) {\n            const neighborCount = neighbors.size - 1;\n            this.announceToScreenReader(\n                `Highlighting ${neighborCount} connected node${neighborCount !== 1 ? 's' : ''}`\n            );\n        }\n    }\n\n    /**\n     * Cleanup and destroy\n     */\n    destroy() {\n        if (this.simulation) {\n            this.simulation.stop();\n        }\n\n        if (this.container) {\n            this.container.innerHTML = '';\n        }\n\n        this.d3.selectAll('.enhanced-tooltip').remove();\n\n        // Clear internal state\n        this.hiddenNodes.clear();\n        this.clusteredNodes.clear();\n        this.selectedNodes.clear();\n        this.highlightedNodes.clear();\n    }\n}\n\nexport default D3EnhancedGraphView;\n","/**\n * Dashboard UI Manager\n * Handles theme switching, tab navigation, search functionality, and accessibility features\n */\n\nexport class DashboardUI {\n    constructor() {\n        this.currentTheme = 'theme-light';\n        this.currentTab = 'details';\n        this.legendVisible = false;\n        this.focusableElements = [];\n        this.currentFocusIndex = -1;\n        this.keyboardNavigationMode = false;\n\n        this.initializeEventListeners();\n        this.setupAccessibility();\n        this.setupKeyboardNavigation();\n        this.loadUserPreferences();\n        this.detectUserPreferences();\n    }\n\n    /**\n     * Initialize all event listeners for dashboard interactions\n     */\n    initializeEventListeners() {\n        // Theme toggle\n        const themeToggle = document.getElementById('theme-toggle');\n        if (themeToggle) {\n            themeToggle.addEventListener('click', () => this.toggleTheme());\n        }\n\n        // Layout toggle\n        const layoutToggle = document.getElementById('layout-toggle');\n        if (layoutToggle) {\n            layoutToggle.addEventListener('click', () => this.toggleLayout());\n        }\n\n        // Legend toggle\n        const legendToggle = document.getElementById('legend-toggle');\n        if (legendToggle) {\n            legendToggle.addEventListener('click', () => this.toggleLegend());\n        }\n\n        // Tab switching\n        const detailsTab = document.getElementById('details-tab');\n        const analysisTab = document.getElementById('analysis-tab');\n\n        if (detailsTab) {\n            detailsTab.addEventListener('click', () => this.switchTab('details'));\n        }\n        if (analysisTab) {\n            analysisTab.addEventListener('click', () => this.switchTab('analysis'));\n        }\n\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const searchClear = document.getElementById('search-clear');\n\n        if (searchInput) {\n            searchInput.addEventListener('input', (e) => this.handleSearch(e.target.value));\n            searchInput.addEventListener('keydown', (e) => {\n                if (e.key === 'Escape') {\n                    this.clearSearch();\n                }\n            });\n        }\n\n        if (searchClear) {\n            searchClear.addEventListener('click', () => this.clearSearch());\n        }\n\n        // Filter interactions\n        this.setupFilterListeners();\n\n        // Graph control buttons\n        this.setupGraphControlListeners();\n\n        // Keyboard navigation\n        document.addEventListener('keydown', (e) => this.handleKeyboardNavigation(e));\n\n        // Global focus management\n        document.addEventListener('focusin', (e) => this.handleFocusIn(e));\n        document.addEventListener('focusout', (e) => this.handleFocusOut(e));\n\n        // Mouse and touch interactions\n        document.addEventListener('mousedown', () => this.keyboardNavigationMode = false);\n        document.addEventListener('touchstart', () => this.keyboardNavigationMode = false);\n\n        // Resize handler for responsive adjustments\n        window.addEventListener('resize', () => this.handleResize());\n    }\n\n    /**\n     * Setup accessibility features and ARIA attributes\n     */\n    setupAccessibility() {\n        // Setup screen reader support first\n        this.setupScreenReaderSupport();\n\n        // Update ARIA labels for dynamic content\n        this.updateAriaLabels();\n\n        // Setup focus management\n        this.updateFocusableElements();\n\n        // Add landmark roles and descriptions\n        this.enhanceLandmarks();\n\n        // Setup high contrast media query listener\n        this.setupContrastListener();\n    }\n\n    /**\n     * Toggle between light, dark, and high-contrast themes\n     */\n    toggleTheme() {\n        const app = document.getElementById('app');\n        const themeButton = document.getElementById('theme-toggle');\n\n        if (!app || !themeButton) {return;}\n\n        // Cycle through themes: light -> dark -> high-contrast -> light\n        switch (this.currentTheme) {\n        case 'theme-light':\n            this.currentTheme = 'theme-dark';\n            themeButton.innerHTML = '<span aria-hidden=\"true\">☀️</span> Light';\n            themeButton.setAttribute('aria-label', 'Switch to light mode');\n            break;\n        case 'theme-dark':\n            this.currentTheme = 'theme-high-contrast';\n            themeButton.innerHTML = '<span aria-hidden=\"true\">⚪</span> Contrast';\n            themeButton.setAttribute('aria-label', 'Switch to high contrast mode');\n            break;\n        case 'theme-high-contrast':\n            this.currentTheme = 'theme-light';\n            themeButton.innerHTML = '<span aria-hidden=\"true\">🌙</span> Dark';\n            themeButton.setAttribute('aria-label', 'Switch to dark mode');\n            break;\n        }\n\n        // Apply theme class\n        app.className = this.currentTheme;\n\n        // Save preference\n        this.saveUserPreference('theme', this.currentTheme);\n\n        // Announce change to screen readers\n        this.announceToScreenReader(`Switched to ${this.currentTheme.replace('theme-', '')} theme`);\n    }\n\n    /**\n     * Toggle layout type (implementation would depend on graph library)\n     */\n    toggleLayout() {\n        // This would integrate with the graph visualization\n        // For now, just cycle through layout names\n        const layouts = ['Force-Directed', 'Circular', 'Hierarchical', 'Grid'];\n        const currentIndex = layouts.findIndex(layout =>\n            document.getElementById('layout-toggle').textContent.includes(layout)\n        );\n        const nextIndex = (currentIndex + 1) % layouts.length;\n        const nextLayout = layouts[nextIndex];\n\n        const layoutButton = document.getElementById('layout-toggle');\n        layoutButton.innerHTML = `<span aria-hidden=\"true\">🔀</span> ${nextLayout}`;\n\n        // Emit custom event for graph to handle\n        document.dispatchEvent(new CustomEvent('layoutChange', {\n            detail: { layout: nextLayout.toLowerCase().replace('-', '') }\n        }));\n\n        this.announceToScreenReader(`Layout changed to ${nextLayout}`);\n    }\n\n    /**\n     * Toggle legend visibility\n     */\n    toggleLegend() {\n        const legend = document.getElementById('legend');\n        const button = document.getElementById('legend-toggle');\n\n        if (!legend || !button) {return;}\n\n        this.legendVisible = !this.legendVisible;\n\n        if (this.legendVisible) {\n            legend.classList.remove('hidden');\n            button.setAttribute('aria-pressed', 'true');\n            this.announceToScreenReader('Legend shown');\n        } else {\n            legend.classList.add('hidden');\n            button.setAttribute('aria-pressed', 'false');\n            this.announceToScreenReader('Legend hidden');\n        }\n\n        this.saveUserPreference('legendVisible', this.legendVisible);\n    }\n\n    /**\n     * Switch between details and analysis tabs\n     */\n    switchTab(tabName) {\n        const tabs = ['details', 'analysis'];\n\n        tabs.forEach(tab => {\n            const tabButton = document.getElementById(`${tab}-tab`);\n            const tabContent = document.getElementById(`${tab}-content`);\n\n            if (tabButton && tabContent) {\n                if (tab === tabName) {\n                    tabButton.classList.add('active');\n                    tabButton.setAttribute('aria-selected', 'true');\n                    tabButton.setAttribute('tabindex', '0');\n                    tabContent.classList.add('active');\n                } else {\n                    tabButton.classList.remove('active');\n                    tabButton.setAttribute('aria-selected', 'false');\n                    tabButton.setAttribute('tabindex', '-1');\n                    tabContent.classList.remove('active');\n                }\n            }\n        });\n\n        this.currentTab = tabName;\n        this.announceToScreenReader(`Switched to ${tabName} tab`);\n    }\n\n    /**\n     * Handle search input\n     */\n    handleSearch(query) {\n        const clearButton = document.getElementById('search-clear');\n\n        // Show/hide clear button\n        if (clearButton) {\n            clearButton.style.display = query ? 'block' : 'none';\n        }\n\n        // Emit search event for graph to handle\n        document.dispatchEvent(new CustomEvent('searchGraph', {\n            detail: { query: query.trim() }\n        }));\n\n        // Update aria-live region with search results count (would be updated by graph)\n        if (query.trim()) {\n            this.announceToScreenReader(`Searching for \"${query}\"`);\n        }\n    }\n\n    /**\n     * Clear search input\n     */\n    clearSearch() {\n        const searchInput = document.getElementById('search-input');\n        const clearButton = document.getElementById('search-clear');\n\n        if (searchInput) {\n            searchInput.value = '';\n            searchInput.focus();\n        }\n\n        if (clearButton) {\n            clearButton.style.display = 'none';\n        }\n\n        // Emit clear search event\n        document.dispatchEvent(new CustomEvent('searchGraph', {\n            detail: { query: '' }\n        }));\n\n        this.announceToScreenReader('Search cleared');\n    }\n\n    /**\n     * Setup filter event listeners\n     */\n    setupFilterListeners() {\n        // Node type filters\n        const nodeTypeFilters = ['filter-files', 'filter-folders', 'filter-tags'];\n        nodeTypeFilters.forEach(id => {\n            const checkbox = document.getElementById(id);\n            if (checkbox) {\n                checkbox.addEventListener('change', () => this.handleFilterChange());\n            }\n        });\n\n        // Connection filters\n        const connectionFilters = ['filter-strong', 'filter-weak'];\n        connectionFilters.forEach(id => {\n            const checkbox = document.getElementById(id);\n            if (checkbox) {\n                checkbox.addEventListener('change', () => this.handleFilterChange());\n            }\n        });\n\n        // Range sliders\n        const rangeSliders = ['node-size-slider', 'link-strength-slider'];\n        rangeSliders.forEach(id => {\n            const slider = document.getElementById(id);\n            if (slider) {\n                slider.addEventListener('input', () => this.handleRangeChange(id, slider.value));\n            }\n        });\n\n        // Reset filters button\n        const resetButton = document.getElementById('reset-filters');\n        if (resetButton) {\n            resetButton.addEventListener('click', () => this.resetFilters());\n        }\n    }\n\n    /**\n     * Setup graph control button listeners\n     */\n    setupGraphControlListeners() {\n        const controls = ['reset-view', 'fit-view', 'expand-all', 'collapse-all'];\n\n        controls.forEach(id => {\n            const button = document.getElementById(id);\n            if (button) {\n                button.addEventListener('click', () => {\n                    // Emit event for graph to handle\n                    document.dispatchEvent(new CustomEvent('graphControl', {\n                        detail: { action: id.replace('-', '') }\n                    }));\n\n                    this.announceToScreenReader(`${id.replace('-', ' ')} activated`);\n                });\n            }\n        });\n    }\n\n    /**\n     * Handle filter changes\n     */\n    handleFilterChange() {\n        const filters = this.collectFilterState();\n\n        // Emit filter change event\n        document.dispatchEvent(new CustomEvent('filtersChanged', {\n            detail: filters\n        }));\n\n        // Save filter preferences\n        this.saveUserPreference('filters', filters);\n    }\n\n    /**\n     * Handle range slider changes\n     */\n    handleRangeChange(sliderId, value) {\n        const action = sliderId.replace('-slider', '');\n\n        // Emit range change event\n        document.dispatchEvent(new CustomEvent('rangeChanged', {\n            detail: { type: action, value: parseFloat(value) }\n        }));\n    }\n\n    /**\n     * Collect current filter state\n     */\n    collectFilterState() {\n        return {\n            nodeTypes: {\n                files: document.getElementById('filter-files')?.checked || false,\n                folders: document.getElementById('filter-folders')?.checked || false,\n                tags: document.getElementById('filter-tags')?.checked || false\n            },\n            connections: {\n                strong: document.getElementById('filter-strong')?.checked || false,\n                weak: document.getElementById('filter-weak')?.checked || false\n            },\n            ranges: {\n                nodeSize: parseFloat(document.getElementById('node-size-slider')?.value || 1),\n                linkStrength: parseFloat(document.getElementById('link-strength-slider')?.value || 1)\n            }\n        };\n    }\n\n    /**\n     * Reset all filters to default\n     */\n    resetFilters() {\n        // Reset checkboxes\n        ['filter-files', 'filter-folders', 'filter-tags', 'filter-strong', 'filter-weak'].forEach(id => {\n            const checkbox = document.getElementById(id);\n            if (checkbox) {checkbox.checked = true;}\n        });\n\n        // Reset sliders\n        const nodeSizeSlider = document.getElementById('node-size-slider');\n        const linkStrengthSlider = document.getElementById('link-strength-slider');\n\n        if (nodeSizeSlider) {nodeSizeSlider.value = 1;}\n        if (linkStrengthSlider) {linkStrengthSlider.value = 1;}\n\n        // Emit reset event\n        this.handleFilterChange();\n\n        this.announceToScreenReader('Filters reset to default');\n    }\n\n    /**\n     * Enhanced keyboard navigation with comprehensive support\n     */\n    handleKeyboardNavigation(event) {\n        // Set keyboard navigation mode\n        if (['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', 'Space'].includes(event.key)) {\n            this.keyboardNavigationMode = true;\n        }\n\n        // Handle Escape key to close overlays and reset focus\n        if (event.key === 'Escape') {\n            this.handleEscapeKey(event);\n            return;\n        }\n\n        // Handle Enter and Space for activation\n        if ((event.key === 'Enter' || event.key === ' ') && event.target.getAttribute('role') === 'button') {\n            event.preventDefault();\n            event.target.click();\n            return;\n        }\n\n        // Handle tab navigation with roving tabindex\n        if (event.key === 'Tab') {\n            this.handleTabNavigation(event);\n            return;\n        }\n\n        // Handle arrow key navigation\n        this.handleArrowNavigation(event);\n\n        // Handle specific keyboard shortcuts\n        this.handleKeyboardShortcuts(event);\n    }\n\n    /**\n     * Handle window resize for responsive adjustments\n     */\n    handleResize() {\n        // Emit resize event for graph to handle\n        document.dispatchEvent(new CustomEvent('dashboardResize'));\n    }\n\n    /**\n     * Setup comprehensive keyboard navigation system\n     */\n    setupKeyboardNavigation() {\n        // Create keyboard navigation map\n        this.navigationMap = {\n            'header': {\n                selector: '.header-toolbar button, .header-toolbar input',\n                direction: 'horizontal'\n            },\n            'filters': {\n                selector: '.sidebar-filters input, .sidebar-filters button',\n                direction: 'vertical'\n            },\n            'graph-controls': {\n                selector: '.graph-controls-overlay button',\n                direction: 'vertical'\n            },\n            'tabs': {\n                selector: '.panel-tabs .tab-button',\n                direction: 'horizontal'\n            }\n        };\n\n        // Setup roving tabindex for each navigation group\n        this.setupRovingTabindex();\n    }\n\n    /**\n     * Setup roving tabindex pattern for better keyboard navigation\n     */\n    setupRovingTabindex() {\n        Object.keys(this.navigationMap).forEach(groupName => {\n            const group = this.navigationMap[groupName];\n            const elements = document.querySelectorAll(group.selector);\n\n            if (elements.length === 0) {return;}\n\n            // Set first element as focusable, others as non-focusable\n            elements.forEach((element, index) => {\n                element.setAttribute('tabindex', index === 0 ? '0' : '-1');\n                element.dataset.navigationGroup = groupName;\n                element.dataset.navigationIndex = index;\n            });\n        });\n    }\n\n    /**\n     * Update focusable elements list\n     */\n    updateFocusableElements() {\n        this.focusableElements = Array.from(\n            document.querySelectorAll(\n                'button:not([disabled]), [href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex=\"-1\"]):not([disabled])'\n            )\n        ).filter(el => {\n            // Filter out hidden elements\n            const style = window.getComputedStyle(el);\n            return style.display !== 'none' && style.visibility !== 'hidden' && el.offsetParent !== null;\n        });\n    }\n\n    /**\n     * Handle Escape key actions\n     */\n    handleEscapeKey(event) {\n        // Close legend if open\n        if (this.legendVisible) {\n            this.toggleLegend();\n            return;\n        }\n\n        // Clear search if focused\n        if (event.target.id === 'search-input') {\n            this.clearSearch();\n            return;\n        }\n\n        // Return focus to main content\n        const mainContent = document.getElementById('main-content');\n        if (mainContent) {\n            mainContent.focus();\n        }\n    }\n\n    /**\n     * Handle Tab navigation with focus trapping\n     */\n    handleTabNavigation(event) {\n        this.updateFocusableElements();\n\n        if (this.focusableElements.length === 0) {return;}\n\n        const currentIndex = this.focusableElements.indexOf(event.target);\n        let nextIndex;\n\n        if (event.shiftKey) {\n            // Shift+Tab - go backwards\n            nextIndex = currentIndex <= 0 ? this.focusableElements.length - 1 : currentIndex - 1;\n        } else {\n            // Tab - go forwards\n            nextIndex = currentIndex >= this.focusableElements.length - 1 ? 0 : currentIndex + 1;\n        }\n\n        // Only prevent default and manually focus if we're at the boundaries\n        if ((currentIndex === 0 && event.shiftKey) ||\n            (currentIndex === this.focusableElements.length - 1 && !event.shiftKey)) {\n            event.preventDefault();\n            this.focusableElements[nextIndex].focus();\n        }\n    }\n\n    /**\n     * Handle arrow key navigation within groups\n     */\n    handleArrowNavigation(event) {\n        const target = event.target;\n        const groupName = target.dataset.navigationGroup;\n\n        if (!groupName) {return;}\n\n        const group = this.navigationMap[groupName];\n        if (!group) {return;}\n\n        const elements = Array.from(document.querySelectorAll(group.selector));\n        const currentIndex = elements.indexOf(target);\n\n        if (currentIndex === -1) {return;}\n\n        let nextIndex = currentIndex;\n\n        if (group.direction === 'horizontal') {\n            if (event.key === 'ArrowLeft') {\n                nextIndex = currentIndex > 0 ? currentIndex - 1 : elements.length - 1;\n                event.preventDefault();\n            } else if (event.key === 'ArrowRight') {\n                nextIndex = currentIndex < elements.length - 1 ? currentIndex + 1 : 0;\n                event.preventDefault();\n            }\n        } else if (group.direction === 'vertical') {\n            if (event.key === 'ArrowUp') {\n                nextIndex = currentIndex > 0 ? currentIndex - 1 : elements.length - 1;\n                event.preventDefault();\n            } else if (event.key === 'ArrowDown') {\n                nextIndex = currentIndex < elements.length - 1 ? currentIndex + 1 : 0;\n                event.preventDefault();\n            }\n        }\n\n        if (nextIndex !== currentIndex) {\n            // Update tabindex for roving tabindex pattern\n            elements[currentIndex].setAttribute('tabindex', '-1');\n            elements[nextIndex].setAttribute('tabindex', '0');\n            elements[nextIndex].focus();\n\n            // Handle special navigation for tabs\n            if (groupName === 'tabs') {\n                const tabName = elements[nextIndex].id.replace('-tab', '');\n                this.switchTab(tabName);\n            }\n\n            this.announceToScreenReader(`Navigated to ${elements[nextIndex].textContent || elements[nextIndex].getAttribute('aria-label')}`);\n        }\n    }\n\n    /**\n     * Handle keyboard shortcuts\n     */\n    handleKeyboardShortcuts(event) {\n        // Only handle shortcuts when not in input fields\n        if (['input', 'textarea', 'select'].includes(event.target.tagName.toLowerCase())) {\n            return;\n        }\n\n        // Handle shortcuts with modifiers\n        if (event.ctrlKey || event.metaKey) {\n            switch (event.key) {\n            case 'f':\n                event.preventDefault();\n                document.getElementById('search-input')?.focus();\n                this.announceToScreenReader('Search focused');\n                break;\n            case 'r':\n                event.preventDefault();\n                this.resetFilters();\n                break;\n            }\n        }\n\n        // Handle single key shortcuts\n        if (!event.ctrlKey && !event.metaKey && !event.altKey) {\n            switch (event.key) {\n            case 't':\n            case 'T':\n                this.toggleTheme();\n                break;\n            case 'l':\n            case 'L':\n                this.toggleLegend();\n                break;\n            case '?':\n                this.showKeyboardHelp();\n                break;\n            }\n        }\n    }\n\n    /**\n     * Handle focus in events\n     */\n    handleFocusIn(event) {\n        // Add visual focus indicator for keyboard navigation\n        if (this.keyboardNavigationMode) {\n            event.target.classList.add('keyboard-focused');\n        }\n\n        // Announce complex widgets to screen readers\n        if (event.target.getAttribute('aria-describedby')) {\n            const descId = event.target.getAttribute('aria-describedby');\n            const description = document.getElementById(descId);\n            if (description) {\n                this.announceToScreenReader(description.textContent);\n            }\n        }\n    }\n\n    /**\n     * Handle focus out events\n     */\n    handleFocusOut(event) {\n        // Remove visual focus indicator\n        event.target.classList.remove('keyboard-focused');\n    }\n\n    /**\n     * Enhance landmarks with better accessibility\n     */\n    enhanceLandmarks() {\n        // Add live region for dynamic announcements\n        if (!document.getElementById('sr-announcer')) {\n            const announcer = document.createElement('div');\n            announcer.id = 'sr-announcer';\n            announcer.setAttribute('aria-live', 'polite');\n            announcer.setAttribute('aria-atomic', 'true');\n            announcer.className = 'sr-only';\n            document.body.appendChild(announcer);\n        }\n\n        // Enhance graph container with better accessibility\n        const graphContainer = document.getElementById('graph-container');\n        if (graphContainer) {\n            graphContainer.setAttribute('role', 'application');\n            graphContainer.setAttribute('aria-label', 'Interactive knowledge graph. Use arrow keys to navigate, Enter to select.');\n            graphContainer.setAttribute('tabindex', '0');\n        }\n    }\n\n    /**\n     * Update ARIA labels for dynamic content\n     */\n    updateAriaLabels() {\n        // Update search results count\n        // Update graph statistics\n        // This would be called when data changes\n    }\n\n    /**\n     * Setup screen reader support with enhanced announcements\n     */\n    setupScreenReaderSupport() {\n        // Ensure announcer exists\n        if (!document.getElementById('sr-announcer')) {\n            this.enhanceLandmarks();\n        }\n\n        // Add contextual help for complex interactions\n        this.addContextualHelp();\n\n        // Setup mutation observer for dynamic content\n        this.setupContentObserver();\n    }\n\n    /**\n     * Add contextual help for screen reader users\n     */\n    addContextualHelp() {\n        // Add help for graph interactions\n        const graphContainer = document.getElementById('graph-container');\n        if (graphContainer) {\n            graphContainer.addEventListener('focus', () => {\n                this.announceToScreenReader('Graph focused. Use arrow keys to navigate nodes, Enter to select, Escape to return to main navigation.');\n            });\n        }\n\n        // Add help for filter controls\n        const filterInputs = document.querySelectorAll('.filter-item input');\n        filterInputs.forEach(input => {\n            input.addEventListener('focus', () => {\n                const label = input.closest('label');\n                if (label) {\n                    const text = label.textContent.replace(/\\s+/g, ' ').trim();\n                    this.announceToScreenReader(`${text} filter`);\n                }\n            });\n        });\n    }\n\n    /**\n     * Setup content observer for dynamic updates\n     */\n    setupContentObserver() {\n        if (typeof MutationObserver === 'undefined') {return;}\n\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === 'childList') {\n                    // Update focusable elements when DOM changes\n                    this.updateFocusableElements();\n\n                    // Update roving tabindex if navigation elements change\n                    if (mutation.target.classList.contains('graph-controls-overlay') ||\n                        mutation.target.classList.contains('panel-tabs')) {\n                        this.setupRovingTabindex();\n                    }\n                }\n\n                // Announce important content changes\n                if (mutation.target.id === 'node-details' && mutation.type === 'childList') {\n                    this.announceNodeDetailsChange();\n                }\n            });\n        });\n\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n            attributes: false\n        });\n\n        this.contentObserver = observer;\n    }\n\n    /**\n     * Enhanced screen reader announcements with timing and context\n     */\n    announceToScreenReader(message, priority = 'polite') {\n        const announcer = document.getElementById('sr-announcer');\n        if (!announcer) {return;}\n\n        // Set appropriate priority\n        announcer.setAttribute('aria-live', priority);\n\n        // Clear previous announcement\n        announcer.textContent = '';\n\n        // Add new announcement after a brief delay to ensure it's picked up\n        setTimeout(() => {\n            announcer.textContent = message;\n\n            // Clear after appropriate time based on message length\n            const clearDelay = Math.max(1000, message.length * 50); // ~50ms per character\n            setTimeout(() => {\n                if (announcer.textContent === message) {\n                    announcer.textContent = '';\n                }\n            }, clearDelay);\n        }, 50);\n    }\n\n    /**\n     * Announce node details changes\n     */\n    announceNodeDetailsChange() {\n        const nodeDetails = document.getElementById('node-details');\n        if (!nodeDetails) {return;}\n\n        const hasSelection = !nodeDetails.querySelector('.no-selection');\n        if (hasSelection) {\n            const nodeTitle = nodeDetails.querySelector('.node-title');\n            if (nodeTitle) {\n                this.announceToScreenReader(`Node selected: ${nodeTitle.textContent}`);\n            }\n        } else {\n            this.announceToScreenReader('No node selected');\n        }\n    }\n\n    /**\n     * Show keyboard help dialog\n     */\n    showKeyboardHelp() {\n        const helpText = `\n            Keyboard shortcuts:\n            Tab: Navigate between controls\n            Arrow keys: Navigate within groups\n            Enter/Space: Activate buttons\n            Escape: Close overlays or clear search\n            T: Toggle theme\n            L: Toggle legend\n            Ctrl+F: Focus search\n            Ctrl+R: Reset filters\n            ?: Show this help\n        `.replace(/\\n\\s+/g, '\\n').trim();\n\n        this.announceToScreenReader(helpText, 'assertive');\n\n        // Also show visual help if needed\n        console.log('Keyboard Help:', helpText);\n    }\n\n    /**\n     * Detect user preferences for accessibility\n     */\n    detectUserPreferences() {\n        // Detect reduced motion preference\n        if (window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches) {\n            document.body.classList.add('reduced-motion');\n            console.log('Reduced motion detected - animations minimized');\n        }\n\n        // Detect high contrast preference\n        if (window.matchMedia && window.matchMedia('(prefers-contrast: high)').matches) {\n            if (!this.currentTheme.includes('high-contrast')) {\n                this.currentTheme = 'theme-high-contrast';\n                document.getElementById('app').className = this.currentTheme;\n                this.updateThemeButton();\n                this.announceToScreenReader('High contrast mode activated based on system preference');\n            }\n        }\n\n        // Detect color scheme preference\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            if (this.currentTheme === 'theme-light') {\n                this.currentTheme = 'theme-dark';\n                document.getElementById('app').className = this.currentTheme;\n                this.updateThemeButton();\n            }\n        }\n    }\n\n    /**\n     * Setup contrast media query listener\n     */\n    setupContrastListener() {\n        if (!window.matchMedia) {return;}\n\n        const contrastQuery = window.matchMedia('(prefers-contrast: high)');\n        const colorSchemeQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n        contrastQuery.addEventListener('change', (e) => {\n            if (e.matches && !this.currentTheme.includes('high-contrast')) {\n                this.currentTheme = 'theme-high-contrast';\n                document.getElementById('app').className = this.currentTheme;\n                this.updateThemeButton();\n                this.announceToScreenReader('High contrast mode activated');\n            }\n        });\n\n        colorSchemeQuery.addEventListener('change', (e) => {\n            // Only auto-switch if user hasn't manually set a preference\n            if (!localStorage.getItem('nas-graph-preferences')) {\n                this.currentTheme = e.matches ? 'theme-dark' : 'theme-light';\n                document.getElementById('app').className = this.currentTheme;\n                this.updateThemeButton();\n            }\n        });\n    }\n\n    /**\n     * Save user preference to localStorage\n     */\n    saveUserPreference(key, value) {\n        try {\n            const preferences = JSON.parse(localStorage.getItem('nas-graph-preferences') || '{}');\n            preferences[key] = value;\n            localStorage.setItem('nas-graph-preferences', JSON.stringify(preferences));\n        } catch (error) {\n            console.warn('Could not save user preference:', error);\n        }\n    }\n\n    /**\n     * Load user preferences from localStorage\n     */\n    loadUserPreferences() {\n        try {\n            const preferences = JSON.parse(localStorage.getItem('nas-graph-preferences') || '{}');\n\n            // Apply saved theme\n            if (preferences.theme && preferences.theme !== this.currentTheme) {\n                this.currentTheme = preferences.theme;\n                document.getElementById('app').className = this.currentTheme;\n                this.updateThemeButton();\n            }\n\n            // Apply saved legend visibility\n            if (typeof preferences.legendVisible === 'boolean') {\n                this.legendVisible = !preferences.legendVisible; // Opposite because toggleLegend flips it\n                this.toggleLegend();\n            }\n\n            // Apply saved filters\n            if (preferences.filters) {\n                this.applyFilters(preferences.filters);\n            }\n\n        } catch (error) {\n            console.warn('Could not load user preferences:', error);\n        }\n    }\n\n    /**\n     * Update theme button text based on current theme\n     */\n    updateThemeButton() {\n        const themeButton = document.getElementById('theme-toggle');\n        if (!themeButton) {return;}\n\n        switch (this.currentTheme) {\n        case 'theme-light':\n            themeButton.innerHTML = '<span aria-hidden=\"true\">🌙</span> Dark';\n            themeButton.setAttribute('aria-label', 'Switch to dark mode');\n            break;\n        case 'theme-dark':\n            themeButton.innerHTML = '<span aria-hidden=\"true\">⚪</span> Contrast';\n            themeButton.setAttribute('aria-label', 'Switch to high contrast mode');\n            break;\n        case 'theme-high-contrast':\n            themeButton.innerHTML = '<span aria-hidden=\"true\">☀️</span> Light';\n            themeButton.setAttribute('aria-label', 'Switch to light mode');\n            break;\n        }\n    }\n\n    /**\n     * Apply saved filters\n     */\n    applyFilters(filters) {\n        if (filters.nodeTypes) {\n            Object.entries(filters.nodeTypes).forEach(([type, checked]) => {\n                const checkbox = document.getElementById(`filter-${type}`);\n                if (checkbox) {checkbox.checked = checked;}\n            });\n        }\n\n        if (filters.connections) {\n            Object.entries(filters.connections).forEach(([type, checked]) => {\n                const checkbox = document.getElementById(`filter-${type}`);\n                if (checkbox) {checkbox.checked = checked;}\n            });\n        }\n\n        if (filters.ranges) {\n            if (filters.ranges.nodeSize) {\n                const slider = document.getElementById('node-size-slider');\n                if (slider) {slider.value = filters.ranges.nodeSize;}\n            }\n            if (filters.ranges.linkStrength) {\n                const slider = document.getElementById('link-strength-slider');\n                if (slider) {slider.value = filters.ranges.linkStrength;}\n            }\n        }\n    }\n\n    /**\n     * Update graph statistics in the analysis panel\n     */\n    updateGraphStats(stats) {\n        const elements = {\n            'nodes-count': stats.nodeCount || 0,\n            'edges-count': stats.edgeCount || 0,\n            'clusters-count': stats.clusterCount || 0,\n            'density-value': `${(stats.density * 100 || 0).toFixed(1)}%`,\n            'avg-degree-value': stats.avgDegree?.toFixed(1) || 0,\n            'components-value': stats.components || 0\n        };\n\n        Object.entries(elements).forEach(([id, value]) => {\n            const element = document.getElementById(id);\n            if (element) {element.textContent = value;}\n        });\n\n        // Announce significant changes\n        if (stats.nodeCount !== this.lastStatsUpdate?.nodeCount) {\n            this.announceToScreenReader(`Graph updated with ${stats.nodeCount} nodes`);\n        }\n\n        this.lastStatsUpdate = stats;\n    }\n}\n\n// Initialize dashboard UI when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.dashboardUI = new DashboardUI();\n});\n"],"names":["D3EnhancedGraphView","constructor","containerId","this","container","document","getElementById","Error","d3","window","svg","simulation","nodes","edges","hiddenNodes","Set","clusteredNodes","Map","nodeSelection","edgeSelection","nodeGroup","edgeGroup","selectedNodes","highlightedNodes","focusedNodeIndex","keyboardNavigationMode","isDragging","transform","x","y","k","focusableNodes","nodeDescriptions","config","width","height","nodeRadius","small","medium","large","cluster","edgeLength","default","strong","nodeColors","faa_stars_terminal","approach_control","faa_eram_terminal","geographic_location","radar_equipment","communication_equipment","nodeIcons","edgeTypes","LOCATED_AT","color","dash","CONNECTED_TO","CONTAINS","forces","charge","chargeDistance","collide","centerStrength","linkStrength","linkDistance","transitions","duration","stagger","ease","easeCubicInOut","clustering","enabled","threshold","maxDistance","minClusterSize","performance","maxSimulationIterations","simulationCooldown","renderThrottle","batchSize","enableLOD","maxVisibleNodes","useOffscreen","enableWebGL","performanceStats","frameCount","lastFpsUpdate","now","fps","renderTime","simulationIterations","animationFrameId","isAnimating","pendingUpdates","lodNodes","lodEdges","currentZoomLevel","init","setupSubscriptions","setupAccessibilityFeatures","loadD3","then","Promise","resolve","reject","script","createElement","src","onload","onerror","head","appendChild","innerHTML","createResponsiveSVG","setupZoomBehavior","setupForceSimulation","createDefinitions","containerRect","getBoundingClientRect","select","append","attr","style","zoomGroup","zoom","scaleExtent","on","event","store","setState","graphView","getState","center","adjustElementsForZoom","call","resetView","setupGraphKeyboardNavigation","forceSimulation","force","forceLink","id","d","distance","getLinkDistance","strength","forceManyBody","distanceMax","forceCenter","forceCollide","radius","getNodeRadius","forceX","forceY","handleSimulationTick","simulationIterationCount","alpha","stop","requestAnimationFrame","startTime","updatePositionsOptimized","endTime","updateFPS","nodeData","data","i","length","slice","filter","index","updateEdgePositionsLOD","currentZoom","type","source","target","Math","atan2","PI","updatePositions","round","zoomLevel","has","scheduleRender","renderFunction","pendingRender","updateVisualizationOptimized","updateNodes","updateEdges","defs","Object","entries","forEach","gradient","brighter","createArrowMarkers","createFilterEffects","dropShadow","feMerge","glow","glowMerge","subscribe","updateVisualization","selectedNode","handleNodeSelection","visibleNodes","n","selectAll","exit","transition","delay","remove","nodeEnter","enter","setupDragBehavior","setupNodeInteractions","createEnhancedNodeStructure","merge","updateExistingNodes","restart","max","text","getNodeIcon","labelGroup","truncateLabel","name","label","each","textBox","parentNode","node","getBBox","clusterBadge","getClusterSize","degreeIndicator","getNodeDegree","visibleEdges","edge","sourceVisible","targetVisible","edgeEnter","setupEdgeInteractions","createEdgeStructure","links","getEdgeWidth","getEdgeColor","getEdgeDash","getMarkerEnd","drag","active","alphaTarget","fx","fy","sourceEvent","selection","stopPropagation","handleNodeClick","handleNodeDoubleClick","handleNodeMouseEnter","handleNodeMouseLeave","preventDefault","showContextMenu","handleEdgeClick","highlightEdge","ctrlKey","metaKey","delete","size","clear","add","updateNodeSelection","highlightConnectedElements","expandCluster","neighbors","getNodeNeighbors","createCluster","focusOnNode","showEnhancedTooltip","highlightNodeNeighborhood","hideEnhancedTooltip","degree","getNodeColor","edgeConfig","nodeId","get","maxLength","substring","tooltip","isCluster","clusterSize","html","address","city","state","tooltipRect","windowWidth","innerWidth","windowHeight","innerHeight","left","pageX","top","pageY","depth","visited","queue","currentDepth","currentId","shift","neighborId","push","Array","from","zoomIdentity","fitToView","bounds","getGraphBounds","fullWidth","fullHeight","scale","min","translateX","translateY","translate","xs","map","ys","addScreenReaderSupport","setupFocusManagement","createAccessibilityDescriptions","setAttribute","addEventListener","handleGraphKeyboard","announceGraphFocus","key","navigateToNextNode","navigateToPreviousNode","selectFocusedNode","clearSelection","blur","zoomIn","zoomOut","focusedNode","announceNodeFocus","announceToScreenReader","find","highlightFocusedNode","focusedNodeSelection","insert","animate","description","className","body","classList","set","nodeCount","edgeCount","message","dashboardUI","announcer","textContent","setTimeout","newScale","scaleBy","circle","highlight","sourceId","targetId","neighborCount","destroy","DashboardUI","currentTheme","currentTab","legendVisible","focusableElements","currentFocusIndex","initializeEventListeners","setupAccessibility","setupKeyboardNavigation","loadUserPreferences","detectUserPreferences","themeToggle","toggleTheme","layoutToggle","toggleLayout","legendToggle","toggleLegend","detailsTab","analysisTab","switchTab","searchInput","searchClear","e","handleSearch","value","clearSearch","setupFilterListeners","setupGraphControlListeners","handleKeyboardNavigation","handleFocusIn","handleFocusOut","handleResize","setupScreenReaderSupport","updateAriaLabels","updateFocusableElements","enhanceLandmarks","setupContrastListener","app","themeButton","saveUserPreference","replace","layouts","currentIndex","findIndex","layout","includes","nextLayout","dispatchEvent","CustomEvent","detail","toLowerCase","legend","button","tabName","tab","tabButton","tabContent","query","clearButton","display","trim","focus","checkbox","handleFilterChange","slider","handleRangeChange","resetButton","resetFilters","action","filters","collectFilterState","sliderId","parseFloat","nodeTypes","files","checked","folders","tags","connections","weak","ranges","nodeSize","nodeSizeSlider","linkStrengthSlider","getAttribute","handleArrowNavigation","handleKeyboardShortcuts","handleTabNavigation","click","handleEscapeKey","navigationMap","header","selector","direction","tabs","setupRovingTabindex","keys","groupName","group","elements","querySelectorAll","element","dataset","navigationGroup","navigationIndex","el","getComputedStyle","visibility","offsetParent","mainContent","indexOf","nextIndex","shiftKey","tagName","altKey","showKeyboardHelp","descId","graphContainer","addContextualHelp","setupContentObserver","input","closest","MutationObserver","observer","mutations","mutation","contains","announceNodeDetailsChange","observe","childList","subtree","attributes","contentObserver","priority","clearDelay","nodeDetails","querySelector","nodeTitle","helpText","matchMedia","matches","updateThemeButton","contrastQuery","colorSchemeQuery","localStorage","getItem","preferences","JSON","parse","setItem","stringify","error","theme","applyFilters","updateGraphStats","stats","clusterCount","density","toFixed","avgDegree","components","lastStatsUpdate"],"mappings":"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"}