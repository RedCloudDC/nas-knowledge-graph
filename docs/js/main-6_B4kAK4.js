import{s as e}from"./chunk-B5VhykKX.js";import{L as t}from"./chunk-DKBjnJXm.js";import{D as a}from"./chunk-VRMXnrWU.js";import{G as n,A as s,N as r,P as o}from"./chunk-BRD_uMrR.js";import{U as i}from"./chunk-BDh3YsLp.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const a of e)if("childList"===a.type)for(const e of a.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const d=new class{constructor(){this.cache=new Map,this.baseUrl="/data",this.loadingSpinners=new Map,this.abortControllers=new Map,this.progressCallbacks=new Map,this.loadTimes=new Map,this.cacheHits=0,this.cacheMisses=0}async loadFromUrl(a,n={}){const{useCache:s=!0,transform:r=null,showSpinner:o=!0,container:i=null,progressCallback:d=null,abortable:c=!0}=n,l=`load_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,h=performance.now();if(s&&this.cache.has(a))return this.cacheHits++,this.cache.get(a);this.cacheMisses++;let p=null;o&&(p=new t(i||document.body,{message:"Loading data...",overlay:!0}),p.show(),this.loadingSpinners.set(l,p));let u=null;c&&(u=new AbortController,this.abortControllers.set(l,u));try{e.setState({loading:{...e.getState().loading,data:!0}}),p&&p.updateMessage("Fetching data...");const t=await fetch(a,{signal:u?.signal});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);let n;if(p&&p.updateMessage("Processing data..."),t.headers.get("content-length")){const e=parseInt(t.headers.get("content-length"));n=await this.readWithProgress(t,e,d,p)}else n=await t.json();p&&p.updateMessage("Validating data..."),r&&"function"==typeof r&&(n=r(n));const o=this.validateDataStructure(n);s&&this.cache.set(a,o);const i=performance.now()-h;return this.loadTimes.set(a,i),d&&d({phase:"complete",loaded:100,total:100,loadTime:i}),o}catch(g){if("AbortError"===g.name)throw new Error("Loading cancelled by user");throw g}finally{p&&(p.hide(),this.loadingSpinners.delete(l)),u&&this.abortControllers.delete(l),e.setState({loading:{...e.getState().loading,data:!1}})}}async readWithProgress(e,t,a,n){const s=e.body.getReader(),r=[];let o=0;try{for(;;){const{done:e,value:i}=await s.read();if(e)break;r.push(i),o+=i.length;const d=o/t*100;a&&a({phase:"downloading",loaded:o,total:t,progress:d}),n&&n.updateMessage(`Loading data... ${Math.round(d)}%`)}const e=new Uint8Array(o);let i=0;for(const t of r)e.set(t,i),i+=t.length;const d=(new TextDecoder).decode(e);return JSON.parse(d)}finally{s.releaseLock()}}async loadSampleData(){try{const e=await this.loadFromUrl(`${this.baseUrl}/sample-data.json`),t=await this.loadFromUrl(`${this.baseUrl}/sample-relations.json`);return this.mergeSampleData(e,t)}catch(e){return this.getFallbackData()}}async loadFromFile(e){return new Promise((t,a)=>{const n=new FileReader;n.onload=e=>{try{const a=JSON.parse(e.target.result),n=this.validateDataStructure(a);t(n)}catch(n){a(new Error("Invalid JSON file"))}},n.onerror=()=>a(new Error("Error reading file")),n.readAsText(e)})}async loadSchema(e){try{const t=`${this.baseUrl}/schema/${e}.schema.json`;return await this.loadFromUrl(t,{useCache:!0})}catch(t){return null}}processCsvData(e,t={}){const{nodeColumns:a=["id","label","type"],edgeColumns:n=["source","target","label"],delimiter:s=",",hasHeaders:r=!0}=t,o=e.split("\n").filter(e=>e.trim()),i=r?o.shift().split(s):null,d=[],c=[],l=new Set;return o.forEach((e,t)=>{const r=e.split(s).map(e=>e.trim().replace(/^"|"$/g,""));if(r.length<2)return;const o={};if(i?i.forEach((e,t)=>{o[e.trim()]=r[t]||""}):r.forEach((e,t)=>{o[`col_${t}`]=e}),this.looksLikeEdgeRecord(o,n)){const e=this.recordToEdge(o,n,t);e&&(c.push(e),[e.source,e.target].forEach(e=>{l.has(e)||(d.push({id:e,label:e,type:"auto-generated"}),l.add(e))}))}else if(this.looksLikeNodeRecord(o,a)){const e=this.recordToNode(o,a);e&&!l.has(e.id)&&(d.push(e),l.add(e.id))}}),this.validateDataStructure({nodes:d,edges:c})}mergeSampleData(e,t){const a=Array.isArray(e)?e:e.nodes||[],n=Array.isArray(t)?t:t.edges||e.edges||[];return this.validateDataStructure({nodes:a,edges:n})}validateDataStructure(e){if(!e||"object"!=typeof e)throw new Error("Data must be an object");const{nodes:t=[],edges:a=[]}=e;if(!Array.isArray(t))throw new Error("Nodes must be an array");if(!Array.isArray(a))throw new Error("Edges must be an array");const n=t.map(e=>{if(!e.id)throw new Error("Each node must have an id");return{id:e.id,label:e.label||String(e.id),type:e.type||"default",properties:e.properties||{},position:e.position||{x:0,y:0},...e}}),s=new Set(n.map(e=>e.id));return{nodes:n,edges:a.map(e=>{if(!e.source||!e.target)throw new Error("Each edge must have source and target");if(!s.has(e.source)||!s.has(e.target))throw new Error(`Edge references non-existent node: ${e.source} -> ${e.target}`);return{id:e.id||`${e.source}-${e.target}`,source:e.source,target:e.target,label:e.label||"",type:e.type||"default",properties:e.properties||{},...e}}),metadata:e.metadata||{}}}looksLikeEdgeRecord(e,t){return t.every(t=>e.hasOwnProperty(t)&&e[t])}looksLikeNodeRecord(e,t){return t.some(t=>e.hasOwnProperty(t)&&e[t])}recordToEdge(e,t,a){const[n,s,r]=t,o=e[n],i=e[s];return o&&i?{id:e.id||`edge_${a}`,source:o,target:i,label:e[r]||"",type:e.type||"default",properties:{...e}}:null}recordToNode(e,t){const[a,n,s]=t,r=e[a];return r?{id:r,label:e[n]||r,type:e[s]||"default",properties:{...e}}:null}getFallbackData(){return{nodes:[{id:1,label:"NAS Device",type:"hardware",position:{x:200,y:150}},{id:2,label:"RAID Configuration",type:"concept",position:{x:400,y:100}},{id:3,label:"Network Protocol",type:"protocol",position:{x:300,y:250}},{id:4,label:"Storage Pool",type:"concept",position:{x:500,y:200}},{id:5,label:"Backup Strategy",type:"process",position:{x:150,y:300}}],edges:[{id:"e1",source:1,target:2,label:"uses"},{id:"e2",source:1,target:3,label:"communicates via"},{id:"e3",source:2,target:4,label:"creates"},{id:"e4",source:1,target:5,label:"implements"}],metadata:{source:"fallback",generated:(new Date).toISOString()}}}async loadSampleDataLazy(e={}){const{chunkSize:a=1e3,container:n=null,progressCallback:s=null}=e,r=new t(n||"graph-container",{message:"Loading sample data...",size:"large"});try{r.show();const e=await this.loadFromUrl(`${this.baseUrl}/sample-data.json`,{showSpinner:!1,progressCallback:e=>{s&&s(e),"downloading"===e.phase&&r.updateMessage(`Loading data... ${Math.round(e.progress||0)}%`)}}),t=await this.loadFromUrl(`${this.baseUrl}/sample-relations.json`,{showSpinner:!1});r.updateMessage("Processing data...");return await this.processDataInChunks(this.mergeSampleData(e,t),a,r)}catch(o){return r.updateMessage("Using fallback data..."),await this.processDataInChunks(this.getFallbackData(),a,r)}finally{r.hide()}}async processDataInChunks(e,t=1e3,a=null){const{nodes:n,edges:s}=e,r=[],o=[];for(let i=0;i<n.length;i+=t){const e=n.slice(i,i+t);if(await new Promise(t=>{requestAnimationFrame(()=>{e.forEach(e=>{r.push({...e,processed:!0,processedAt:Date.now()})}),t()})}),a){const e=Math.round((i+t)/n.length*50);a.updateMessage(`Processing nodes... ${e}%`)}}for(let i=0;i<s.length;i+=t){const e=s.slice(i,i+t);if(await new Promise(t=>{requestAnimationFrame(()=>{e.forEach(e=>{o.push({...e,processed:!0,processedAt:Date.now()})}),t()})}),a){const e=50+Math.round((i+t)/s.length*50);a.updateMessage(`Processing edges... ${e}%`)}}return{nodes:r,edges:o,metadata:{...e.metadata,chunked:!0,chunkSize:t,processedAt:(new Date).toISOString()}}}abortAllLoading(){for(const[e,t]of this.abortControllers)t.abort(),this.abortControllers.delete(e);for(const[e,t]of this.loadingSpinners)t.hide(),this.loadingSpinners.delete(e)}getPerformanceStats(){const e=this.cacheHits+this.cacheMisses,t=e>0?this.cacheHits/e*100:0,a=Array.from(this.loadTimes.values()),n=a.length>0?a.reduce((e,t)=>e+t,0)/a.length:0;return{cacheSize:this.cache.size,cacheHits:this.cacheHits,cacheMisses:this.cacheMisses,cacheHitRate:Math.round(100*t)/100,totalRequests:e,averageLoadTime:Math.round(100*n)/100,activeLoads:this.loadingSpinners.size,loadTimes:Object.fromEntries(this.loadTimes)}}async preloadData(e=[]){const t=[`${this.baseUrl}/sample-data.json`,`${this.baseUrl}/sample-relations.json`],a=(e.length>0?e:t).map(e=>this.loadFromUrl(e,{useCache:!0,showSpinner:!1,abortable:!0}).catch(e=>null));return(await Promise.allSettled(a)).filter(e=>"fulfilled"===e.status&&null!==e.value).map(e=>e.value)}clearCache(){this.cache.clear(),this.loadTimes.clear(),this.cacheHits=0,this.cacheMisses=0}exportData(t="json"){const{nodes:a,edges:n}=e.getState();switch(t.toLowerCase()){case"json":return JSON.stringify({nodes:a,edges:n},null,2);case"csv":return this.exportToCsv(a,n);case"cytoscape":return this.exportToCytoscape(a,n);default:throw new Error(`Unsupported export format: ${t}`)}}exportToCsv(e,t){return`NODES:\n${["id,label,type,"+Object.keys(e[0]?.properties||{}).join(","),...e.map(e=>`${e.id},"${e.label}",${e.type},`+Object.values(e.properties||{}).map(e=>`"${e}"`).join(","))].join("\n")}\n\nEDGES:\n${["source,target,label,type,"+Object.keys(t[0]?.properties||{}).join(","),...t.map(e=>`${e.source},${e.target},"${e.label}",${e.type},`+Object.values(e.properties||{}).map(e=>`"${e}"`).join(","))].join("\n")}`}exportToCytoscape(e,t){return JSON.stringify({elements:[...e.map(e=>({data:{id:e.id,label:e.label,type:e.type,...e.properties},position:e.position})),...t.map(e=>({data:{id:e.id,source:e.source,target:e.target,label:e.label,type:e.type,...e.properties}}))]},null,2)}};const c=new class{constructor(){this.metrics=new Map,this.observers=new Map,this.isEnabled=!0,this.reportingEndpoint=null,this.initCustomMetrics(),this.setupPerformanceObserver(),setInterval(()=>{this.reportMetrics()},6e4)}initCustomMetrics(){this.trackInitialLoad(),this.trackGraphRendering(),this.trackSearchPerformance(),this.trackMemoryUsage()}setupPerformanceObserver(){if(!("PerformanceObserver"in window))return;const e=new PerformanceObserver(e=>{e.getEntries().forEach(e=>{this.recordMetric("navigation",e.duration,{type:e.type,loadEventEnd:e.loadEventEnd,domContentLoaded:e.domContentLoadedEventEnd})})});try{e.observe({type:"navigation",buffered:!0})}catch(n){}const t=new PerformanceObserver(e=>{e.getEntries().forEach(e=>{(e.name.includes("d3")||e.name.includes("sample-data")||e.name.includes(".js")||e.name.includes(".css"))&&this.recordMetric("resource-load",e.duration,{name:e.name,size:e.transferSize,type:this.getResourceType(e.name)})})});try{t.observe({type:"resource",buffered:!0})}catch(n){}const a=new PerformanceObserver(e=>{e.getEntries().forEach(e=>{this.recordMetric("long-task",e.duration,{startTime:e.startTime,attribution:e.attribution})})});try{a.observe({type:"longtask",buffered:!0})}catch(n){}this.observers.set("navigation",e),this.observers.set("resource",t),this.observers.set("longtask",a)}trackInitialLoad(){const e=performance.now();"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{this.recordMetric("dom-ready",performance.now()-e)}):this.recordMetric("dom-ready",0),window.addEventListener("load",()=>{if(this.recordMetric("app-load",performance.now()-e),"getEntriesByType"in performance){performance.getEntriesByType("paint").forEach(e=>{this.recordMetric(`paint-${e.name}`,e.startTime)})}})}trackGraphRendering(){document.addEventListener("graph-render-start",e=>{const t=performance.now();e.detail.startTime=t}),document.addEventListener("graph-render-complete",e=>{const t=performance.now(),a=e.detail.startTime;if(a){const n=t-a;this.recordMetric("graph-render",n,{nodeCount:e.detail.nodeCount,edgeCount:e.detail.edgeCount,layoutType:e.detail.layoutType}),n>2e3&&this.recordMetric("graph-render-slow",n)}})}trackSearchPerformance(){document.addEventListener("search-start",e=>{const t=performance.now();e.detail.startTime=t}),document.addEventListener("search-complete",e=>{const t=performance.now(),a=e.detail.startTime;if(a){const n=t-a;this.recordMetric("search-performance",n,{query:e.detail.query,resultCount:e.detail.resultCount,scope:e.detail.scope}),n>500&&this.recordMetric("search-slow",n)}})}trackMemoryUsage(){"memory"in performance&&setInterval(()=>{const e=performance.memory;this.recordMetric("memory-usage",e.usedJSHeapSize,{total:e.totalJSHeapSize,limit:e.jsHeapSizeLimit,percentage:e.usedJSHeapSize/e.totalJSHeapSize*100})},3e4)}recordMetric(e,t,a={}){if(!this.isEnabled)return;const n={name:e,value:t,timestamp:Date.now(),url:location.pathname,userAgent:navigator.userAgent,metadata:a};this.metrics.has(e)||this.metrics.set(e,[]),this.metrics.get(e).push(n),this.metrics.get(e).length>100&&this.metrics.get(e).shift(),document.dispatchEvent(new CustomEvent("performance-metric",{detail:n}))}getResourceType(e){return e.includes(".css")?"stylesheet":e.includes(".js")?"script":e.includes(".json")?"data":e.match(/\.(png|jpg|jpeg|gif|svg|webp)$/)?"image":e.includes("d3js.org")?"library":"other"}getPerformanceSummary(){const e={customMetrics:{},resources:{},timestamp:Date.now()};["graph-render","search-performance","app-load"].forEach(t=>{const a=this.metrics.get(t)||[];if(a.length>0){const n=a.reduce((e,t)=>e+t.value,0)/a.length;e.customMetrics[t]={average:n,count:a.length,latest:a[a.length-1].value}}});const t=this.metrics.get("resource-load")||[],a={};return t.forEach(e=>{const t=e.metadata.type;a[t]||(a[t]={count:0,totalTime:0}),a[t].count++,a[t].totalTime+=e.value}),Object.keys(a).forEach(t=>{const n=a[t];e.resources[t]={count:n.count,averageLoadTime:n.totalTime/n.count}}),e}reportMetrics(){this.getPerformanceSummary()}checkPerformanceTargets(){const e={};return Object.entries({"app-load":3e3,"graph-render":2e3,"search-performance":500}).forEach(([t,a])=>{const n=this.metrics.get(t)||[];if(n.length>0){const s=n[n.length-1].value;e[t]={value:s,target:a,met:s<=a}}}),e}destroy(){this.observers.forEach(e=>e.disconnect()),this.observers.clear(),this.metrics.clear(),this.isEnabled=!1}};"undefined"!=typeof window&&(window.performanceMonitor=c);const l=new class{constructor(){this.graphView=null,this.initialized=!1,this.currentLayout="force",this.globalSearch=null,this.advancedFilters=null,this.neighborhoodExplorer=null,this.pathFinder=null,this.urlStateManager=null,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.init()):this.init()}async init(){try{const e=performance.now();document.dispatchEvent(new CustomEvent("graph-render-start",{detail:{startTime:e}})),this.graphView=new a("graph-container"),this.setupGraphPerformanceMonitoring(),await this.initializeDataExplorationComponents(),this.setupEventHandlers(),this.setupStoreSubscriptions(),await this.loadInitialData(),this.setupComponentIntegration(),this.hideLoadingIndicator(),this.initialized=!0}catch(e){this.showError("Failed to initialize application. Please refresh the page.")}}setupEventHandlers(){const t=document.getElementById("reset-view"),a=document.getElementById("fit-view"),n=document.getElementById("expand-all"),s=document.getElementById("collapse-all"),r=document.getElementById("layout-select");t&&t.addEventListener("click",()=>{this.graphView&&this.graphView.resetView&&this.graphView.resetView()}),a&&a.addEventListener("click",()=>{this.graphView&&this.graphView.fitToView&&this.graphView.fitToView()}),n&&n.addEventListener("click",()=>{this.expandAllClusters()}),s&&s.addEventListener("click",()=>{this.collapseAllNodes()}),r&&r.addEventListener("change",e=>{this.changeLayout(e.target.value)}),document.addEventListener("keydown",e=>{this.handleKeyboardShortcuts(e)}),window.addEventListener("resize",()=>{this.handleResize()}),document.addEventListener("click",t=>{(t.target===document.body||t.target.closest("#graph-container"))&&(t.target.closest(".node")||t.target.closest(".edge")||e.setState({selectedNode:null,selectedEdge:null}))}),this.setupDashboardEventListeners()}setupDashboardEventListeners(){document.addEventListener("searchGraph",e=>{this.handleGraphSearch(e.detail.query)}),document.addEventListener("filtersChanged",e=>{this.handleFiltersChanged(e.detail)}),document.addEventListener("rangeChanged",e=>{this.handleRangeChanged(e.detail.type,e.detail.value)}),document.addEventListener("graphControl",e=>{this.handleGraphControl(e.detail.action)}),document.addEventListener("layoutChange",e=>{this.changeLayout(e.detail.layout)}),document.addEventListener("dashboardResize",()=>{this.handleResize()})}handleGraphSearch(t){this.graphView&&"function"==typeof this.graphView.search&&this.graphView.search(t);const a=e.getState().nodes.filter(e=>e.name?.toLowerCase().includes(t.toLowerCase())||e.label?.toLowerCase().includes(t.toLowerCase())||e.id?.toLowerCase().includes(t.toLowerCase()));window.dashboardUI&&window.dashboardUI.announceToScreenReader(`Found ${a.length} matching nodes`)}handleFiltersChanged(t){this.graphView&&"function"==typeof this.graphView.applyFilters&&this.graphView.applyFilters(t),e.setState({filters:t})}handleRangeChanged(e,t){this.graphView&&("node-size"===e&&"function"==typeof this.graphView.setNodeSize&&this.graphView.setNodeSize(t),"link-strength"===e&&"function"==typeof this.graphView.setLinkStrength&&this.graphView.setLinkStrength(t))}handleGraphControl(e){switch(e){case"resetview":this.graphView&&this.graphView.resetView&&this.graphView.resetView();break;case"fitview":this.graphView&&this.graphView.fitToView&&this.graphView.fitToView();break;case"expandall":this.expandAllClusters();break;case"collapseall":this.collapseAllNodes()}}setupStoreSubscriptions(){e.subscribe("selectedNode",e=>{this.updateNodeDetailsPanel(e)}),e.subscribe("nodes",e=>{this.updateStatistics()}),e.subscribe("edges",e=>{this.updateStatistics()})}async loadInitialData(){try{const e=await d.loadSampleDataLazy({chunkSize:500,container:"graph-container",progressCallback:e=>{const t=document.querySelector(".loading p");t&&("downloading"===e.phase?t.textContent=`Downloading data... ${Math.round(e.progress||0)}%`:"complete"===e.phase&&(t.textContent="Initializing graph..."))}}),t=performance.now(),a=this.transformDataForVisualization(e);performance.now();await this.loadDataIntoStore(a)}catch(t){e.setState({nodes:[],edges:[]})}}async loadDataIntoStore(t){const a=200;for(let n=0;n<t.nodes.length;n+=a)await new Promise(s=>{requestAnimationFrame(()=>{const r=t.nodes.slice(n,n+a),o=e.getState().nodes||[];e.setState({nodes:[...o,...r]}),s()})});for(let n=0;n<t.edges.length;n+=a)await new Promise(s=>{requestAnimationFrame(()=>{const r=t.edges.slice(n,n+a),o=e.getState().edges||[];e.setState({edges:[...o,...r]}),s()})})}transformDataForVisualization(e){return{nodes:e.nodes.map(e=>({...e,name:e.name||e.label||e.id,x:e.x||800*Math.random(),y:e.y||600*Math.random()})),edges:e.edges.map(e=>({...e,id:e.id||`${e.source}-${e.target}-${e.type||"default"}`,label:e.label||e.type||"",source:"object"==typeof e.source?e.source.id:e.source,target:"object"==typeof e.target?e.target.id:e.target}))}}updateNodeDetailsPanel(e){const t=document.getElementById("node-details");if(!t)return;if(!e)return void(t.innerHTML='\n                <div class="no-selection">\n                    <p>🖱️ Click on a node to view details</p>\n                    <p>🖱️ Double-click to expand/cluster</p>\n                    <p>🖱️ Right-click for context menu</p>\n                    <p>🖱️ Drag nodes to reposition</p>\n                    <p>🖱️ Use mouse wheel to zoom</p>\n                </div>\n            ');const a=this.getNodeIcon(e.type),n=this.getNodeDegree(e);t.innerHTML=`\n            <div class="node-details-content">\n                <div class="node-details-header">\n                    <span class="node-icon-large">${a}</span>\n                    <div>\n                        <h4 class="node-title">${e.name||e.label||e.id}</h4>\n                        <p class="node-subtitle">${e.type||"Unknown Type"}</p>\n                    </div>\n                </div>\n                <div class="node-properties">\n                    <div class="node-property">\n                        <span class="property-label">ID:</span>\n                        <span class="property-value">${e.id}</span>\n                    </div>\n                    <div class="node-property">\n                        <span class="property-label">Type:</span>\n                        <span class="property-value">${e.type||"Unknown"}</span>\n                    </div>\n                    <div class="node-property">\n                        <span class="property-label">Connections:</span>\n                        <span class="property-value">${n}</span>\n                    </div>\n                    ${e.address?.city?`\n                        <div class="node-property">\n                            <span class="property-label">Location:</span>\n                            <span class="property-value">${e.address.city}, ${e.address.state}</span>\n                        </div>\n                    `:""}\n                    ${e.capacity?.equipmentCount?`\n                        <div class="node-property">\n                            <span class="property-label">Equipment:</span>\n                            <span class="property-value">${e.capacity.equipmentCount}</span>\n                        </div>\n                    `:""}\n                    ${e.capacity?.personnelCount?`\n                        <div class="node-property">\n                            <span class="property-label">Personnel:</span>\n                            <span class="property-value">${e.capacity.personnelCount}</span>\n                        </div>\n                    `:""}\n                    ${e.operatingHours?`\n                        <div class="node-property">\n                            <span class="property-label">24/7 Operation:</span>\n                            <span class="property-value">${e.operatingHours["24x7"]?"✅ Yes":"❌ No"}</span>\n                        </div>\n                    `:""}\n                </div>\n            </div>\n        `}updateStatistics(){const t=e.getState(),a=document.getElementById("nodes-count"),n=document.getElementById("edges-count"),s=document.getElementById("clusters-count");if(a&&(a.textContent=t.nodes.length||0),n&&(n.textContent=t.edges.length||0),s){const e=this.graphView?.clusteredNodes?.size||0;s.textContent=e}}handleKeyboardShortcuts(t){if(t.ctrlKey||t.metaKey)switch(t.key.toLowerCase()){case"r":t.preventDefault(),this.graphView&&this.graphView.resetView&&this.graphView.resetView();break;case"f":t.preventDefault(),this.graphView&&this.graphView.fitToView&&this.graphView.fitToView();break;case"e":t.preventDefault(),this.expandAllClusters();break;case"c":t.preventDefault(),this.collapseAllNodes()}"Escape"===t.key&&e.setState({selectedNode:null,selectedEdge:null})}handleResize(){if(this.graphView&&"function"==typeof this.graphView.resize){const e=document.getElementById("graph-container");if(e){const t=e.getBoundingClientRect();this.graphView.resize(t.width,t.height)}}}changeLayout(t){this.currentLayout=t,e.setState({graphView:{...e.getState().graphView,layout:t}})}expandAllClusters(){if(this.graphView&&this.graphView.clusteredNodes){Array.from(this.graphView.clusteredNodes.keys()).forEach(e=>{"function"==typeof this.graphView.expandCluster&&this.graphView.expandCluster(e)})}}collapseAllNodes(){this.graphView&&"function"==typeof this.graphView.autoCluster&&this.graphView.autoCluster()}hideLoadingIndicator(){const e=document.querySelector(".loading");e&&(e.style.opacity="0",setTimeout(()=>{e.style.display="none"},300))}showError(e){const t=document.getElementById("graph-container");t&&(t.innerHTML=`\n                <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #e74c3c; text-align: center; padding: 20px;">\n                    <div>\n                        <h3>❌ Error</h3>\n                        <p>${e}</p>\n                        <button onclick="location.reload()" style="margin-top: 15px; padding: 10px 20px; background: #3498db; color: white; border: none; border-radius: 4px; cursor: pointer;">\n                            Refresh Page\n                        </button>\n                    </div>\n                </div>\n            `)}getNodeIcon(e){const t={faa_stars_terminal:"🏢",approach_control:"🛫",faa_eram_terminal:"📡",geographic_location:"📍",radar_equipment:"📊",communication_equipment:"📻",default:"◉"};return t[e]||t.default}getNodeDegree(t){return e.getState().edges.filter(e=>e.source===t.id||e.target===t.id).length}async initializeDataExplorationComponents(){try{this.globalSearch=new n(".header-center"),this.advancedFilters=new s(".sidebar-filters"),this.neighborhoodExplorer=new r,this.pathFinder=new o,this.urlStateManager=new i}catch(e){throw e}}setupComponentIntegration(){document.addEventListener("globalSearch",e=>{this.handleGlobalSearch(e.detail)}),document.addEventListener("globalSearchClear",()=>{this.clearSearchHighlights()}),document.addEventListener("filtersApplied",e=>{this.handleAdvancedFilters(e.detail)}),document.addEventListener("showNeighborhood",e=>{this.handleNeighborhoodExploration(e.detail)}),document.addEventListener("showAllConnected",e=>{this.handleShowAllConnected(e.detail)}),document.addEventListener("focusOnNode",e=>{this.handleFocusOnNode(e.detail)}),document.addEventListener("hideOtherNodes",e=>{this.handleHideOtherNodes(e.detail)}),document.addEventListener("filterByNodeType",e=>{this.handleFilterByNodeType(e.detail)}),document.addEventListener("showShortestPath",e=>{this.handleShowShortestPath(e.detail)}),document.addEventListener("pathNotFound",e=>{this.handlePathNotFound(e.detail)}),document.addEventListener("clearAllPaths",()=>{this.clearPathHighlights()}),document.addEventListener("urlCopied",e=>{this.showNotification("URL copied to clipboard!","success")})}handleGlobalSearch(e){const{query:t,scope:a}=e;this.graphView&&"function"==typeof this.graphView.highlightSearch&&this.graphView.highlightSearch(t,a)}handleAdvancedFilters(e){const{filteredData:t,filterState:a}=e;this.graphView&&"function"==typeof this.graphView.applyAdvancedFilters&&this.graphView.applyAdvancedFilters(t)}handleNeighborhoodExploration(e){const{sourceNode:t,neighbors:a,hops:n,highlightClass:s}=e;this.graphView&&"function"==typeof this.graphView.highlightNeighborhood&&this.graphView.highlightNeighborhood(t,a,s),this.showNeighborhoodInfo(t,a,n)}handleShowAllConnected(e){const{sourceNode:t,connectedNodes:a}=e;this.graphView&&"function"==typeof this.graphView.highlightConnectedComponent&&this.graphView.highlightConnectedComponent(t,a),this.showConnectedComponentInfo(t,a)}handleFocusOnNode(t){const{node:a,centerAndZoom:n}=t;this.graphView&&"function"==typeof this.graphView.focusOnNode&&this.graphView.focusOnNode(a,n),e.setState({selectedNode:a})}handleHideOtherNodes(e){const{visibleNodeIds:t,sourceNode:a}=e;this.graphView&&"function"==typeof this.graphView.hideOtherNodes&&this.graphView.hideOtherNodes(t)}handleFilterByNodeType(e){const{nodeType:t,sourceNode:a}=e;this.advancedFilters&&document.dispatchEvent(new CustomEvent("setTypeFilter",{detail:{nodeType:t}}))}handleShowShortestPath(e){const{path:t,distance:a,algorithm:n,sourceId:s,targetId:r}=e;this.graphView&&"function"==typeof this.graphView.highlightPath&&this.graphView.highlightPath(t,"shortest-path"),this.showPathInfo(t,a,n,s,r)}handlePathNotFound(e){const{sourceId:t,targetId:a,algorithm:n}=e;this.showNotification(`No path found between nodes using ${n}`,"warning")}clearSearchHighlights(){this.graphView&&"function"==typeof this.graphView.clearSearchHighlights&&this.graphView.clearSearchHighlights()}clearPathHighlights(){this.graphView&&"function"==typeof this.graphView.clearPathHighlights&&this.graphView.clearPathHighlights()}showNeighborhoodInfo(e,t,a){const n=document.getElementById("analysis-content");if(n){const s=`\n                <div class="neighborhood-info">\n                    <h4>🌐 ${a}-Hop Neighborhood</h4>\n                    <div class="info-item">\n                        <span class="info-label">Center Node:</span>\n                        <span class="info-value">${e.name||e.id}</span>\n                    </div>\n                    <div class="info-item">\n                        <span class="info-label">Neighbors:</span>\n                        <span class="info-value">${t.length}</span>\n                    </div>\n                    <div class="info-item">\n                        <span class="info-label">Hops:</span>\n                        <span class="info-value">${a}</span>\n                    </div>\n                </div>\n            `;n.innerHTML+=s}}showConnectedComponentInfo(e,t){const a=document.getElementById("analysis-content");if(a){const n=`\n                <div class="component-info">\n                    <h4>🌐 Connected Component</h4>\n                    <div class="info-item">\n                        <span class="info-label">Source Node:</span>\n                        <span class="info-value">${e.name||e.id}</span>\n                    </div>\n                    <div class="info-item">\n                        <span class="info-label">Connected Nodes:</span>\n                        <span class="info-value">${t.length}</span>\n                    </div>\n                </div>\n            `;a.innerHTML+=n}}showPathInfo(e,t,a,n,s){const r=document.getElementById("analysis-content");if(r){const n=`\n                <div class="path-info">\n                    <h4>🛣️ Shortest Path</h4>\n                    <div class="info-item">\n                        <span class="info-label">Algorithm:</span>\n                        <span class="info-value">${a.toUpperCase()}</span>\n                    </div>\n                    <div class="info-item">\n                        <span class="info-label">Path Length:</span>\n                        <span class="info-value">${e.length} nodes</span>\n                    </div>\n                    <div class="info-item">\n                        <span class="info-label">Distance:</span>\n                        <span class="info-value">${t.toFixed(2)}</span>\n                    </div>\n                    <div class="info-item">\n                        <span class="info-label">Path:</span>\n                        <span class="info-value">${e.join(" → ")}</span>\n                    </div>\n                </div>\n            `;r.innerHTML+=n}}showNotification(e,t="info",a=3e3){const n=document.createElement("div");n.className=`notification notification-${t}`,n.innerHTML=`\n            <div class="notification-content">\n                <span class="notification-icon">${this.getNotificationIcon(t)}</span>\n                <span class="notification-message">${e}</span>\n                <button class="notification-close">×</button>\n            </div>\n        `,n.style.cssText=`\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: ${this.getNotificationColor(t)};\n            color: white;\n            padding: 16px 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n            z-index: 10000;\n            opacity: 0;\n            transform: translateX(100%);\n            transition: all 0.3s ease;\n            max-width: 400px;\n            font-family: system-ui, sans-serif;\n        `,document.body.appendChild(n),requestAnimationFrame(()=>{n.style.opacity="1",n.style.transform="translateX(0)"});n.querySelector(".notification-close").addEventListener("click",()=>{this.hideNotification(n)}),a>0&&setTimeout(()=>{this.hideNotification(n)},a)}hideNotification(e){e.style.opacity="0",e.style.transform="translateX(100%)",setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},300)}getNotificationIcon(e){const t={info:"ℹ️",success:"✅",warning:"⚠️",error:"❌"};return t[e]||t.info}getNotificationColor(e){const t={info:"#3498db",success:"#2ecc71",warning:"#f39c12",error:"#e74c3c"};return t[e]||t.info}getDataExplorationComponents(){return{globalSearch:this.globalSearch,advancedFilters:this.advancedFilters,neighborhoodExplorer:this.neighborhoodExplorer,pathFinder:this.pathFinder,urlStateManager:this.urlStateManager}}getGraphView(){return this.graphView}isInitialized(){return this.initialized}getState(){return{initialized:this.initialized,currentLayout:this.currentLayout,store:e.getState(),dataExploration:this.getDataExplorationComponents()}}setupGraphPerformanceMonitoring(){document.addEventListener("graph-render-complete",e=>{const{nodeCount:t,edgeCount:a,renderTime:n,layoutType:s}=e.detail;c.recordMetric("graph-render",n,{nodeCount:t,edgeCount:a,layoutType:s||this.currentLayout}),n>2e3&&this.showNotification(`Graph rendering took ${(n/1e3).toFixed(1)}s (target: 2s)`,"warning")}),document.addEventListener("search-start",e=>{e.detail.startTime=performance.now()}),document.addEventListener("search-complete",e=>{const t=performance.now()-e.detail.startTime;c.recordMetric("search-performance",t,{query:e.detail.query,resultCount:e.detail.resultCount,scope:e.detail.scope})}),document.addEventListener("data-load-start",e=>{e.detail.startTime=performance.now()}),document.addEventListener("data-load-complete",e=>{const t=performance.now()-e.detail.startTime;c.recordMetric("data-load",t,{source:e.detail.source,size:e.detail.size,cached:e.detail.cached||!1})}),setInterval(()=>{const e=c.checkPerformanceTargets();Object.entries(e).forEach(([e,t])=>{t.met});Object.entries(e).filter(([e,t])=>!t.met&&t.value>1.5*t.target).map(([e])=>e).length},6e4)}};window.knowledgeGraphApp=l;
//# sourceMappingURL=main-6_B4kAK4.js.map
