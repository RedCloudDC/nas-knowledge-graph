{"version":3,"file":"chunk-B5VhykKX.js","sources":["../../src/core/store.js"],"sourcesContent":["/**\n * Central State Store\n * Simple observable pattern for state management\n */\nexport class Store {\n    constructor(initialState = {}) {\n        this.state = { ...initialState };\n        this.listeners = new Map();\n    }\n\n    /**\n     * Get current state\n     */\n    getState() {\n        return { ...this.state };\n    }\n\n    /**\n     * Update state and notify listeners\n     */\n    setState(updates, notify = true) {\n        const oldState = { ...this.state };\n        this.state = { ...this.state, ...updates };\n\n        if (notify) {\n            this.notifyListeners(oldState, this.state);\n        }\n    }\n\n    /**\n     * Subscribe to state changes\n     */\n    subscribe(key, callback) {\n        if (!this.listeners.has(key)) {\n            this.listeners.set(key, []);\n        }\n        this.listeners.get(key).push(callback);\n\n        // Return unsubscribe function\n        return () => {\n            const callbacks = this.listeners.get(key);\n            if (callbacks) {\n                const index = callbacks.indexOf(callback);\n                if (index > -1) {\n                    callbacks.splice(index, 1);\n                }\n            }\n        };\n    }\n\n    /**\n     * Notify all listeners of state changes\n     */\n    notifyListeners(oldState, newState) {\n        this.listeners.forEach((callbacks, key) => {\n            // Check if the specific state key has changed\n            if (oldState[key] !== newState[key]) {\n                callbacks.forEach(callback => {\n                    callback(newState[key], oldState[key], newState);\n                });\n            }\n        });\n\n        // Notify general listeners (subscribed to '*')\n        if (this.listeners.has('*')) {\n            this.listeners.get('*').forEach(callback => {\n                callback(newState, oldState);\n            });\n        }\n    }\n\n    /**\n     * Reset store to initial state\n     */\n    reset(initialState = {}) {\n        this.setState(initialState, false);\n        this.state = { ...initialState };\n        this.notifyListeners({}, this.state);\n    }\n}\n\n// Create and export singleton store instance\nexport const store = new Store({\n    // Graph data\n    nodes: [],\n    edges: [],\n\n    // UI state\n    selectedNode: null,\n    selectedEdge: null,\n    viewMode: 'graph', // 'graph', 'analysis'\n    sidePanel: {\n        visible: true,\n        activeTab: 'details' // 'details', 'analysis', 'filters'\n    },\n\n    // Graph view state\n    graphView: {\n        zoom: 1,\n        center: { x: 400, y: 300 },\n        layout: 'force' // 'force', 'circular', 'hierarchical'\n    },\n\n    // Filters\n    filters: {\n        nodeTypes: [],\n        searchTerm: '',\n        dateRange: null\n    },\n\n    // Loading states\n    loading: {\n        data: false,\n        analysis: false\n    }\n});\n"],"names":["store","constructor","initialState","this","state","listeners","Map","getState","setState","updates","notify","oldState","notifyListeners","subscribe","key","callback","has","set","get","push","callbacks","index","indexOf","splice","newState","forEach","reset","nodes","edges","selectedNode","selectedEdge","viewMode","sidePanel","visible","activeTab","graphView","zoom","center","x","y","layout","filters","nodeTypes","searchTerm","dateRange","loading","data","analysis"],"mappings":"AAkFY,MAACA,EAAQ,IA9Ed,MACH,WAAAC,CAAYC,EAAe,IACvBC,KAAKC,MAAQ,IAAKF,GAClBC,KAAKE,UAAY,IAAIC,GACzB,CAKA,QAAAC,GACI,MAAO,IAAKJ,KAAKC,MACrB,CAKA,QAAAI,CAASC,EAASC,GAAS,GACvB,MAAMC,EAAW,IAAKR,KAAKC,OAC3BD,KAAKC,MAAQ,IAAKD,KAAKC,SAAUK,GAE7BC,GACAP,KAAKS,gBAAgBD,EAAUR,KAAKC,MAE5C,CAKA,SAAAS,CAAUC,EAAKC,GAOX,OANKZ,KAAKE,UAAUW,IAAIF,IACpBX,KAAKE,UAAUY,IAAIH,EAAK,IAE5BX,KAAKE,UAAUa,IAAIJ,GAAKK,KAAKJ,GAGtB,KACH,MAAMK,EAAYjB,KAAKE,UAAUa,IAAIJ,GACrC,GAAIM,EAAW,CACX,MAAMC,EAAQD,EAAUE,QAAQP,GAC5BM,GAAQ,GACRD,EAAUG,OAAOF,EAAO,EAEhC,EAER,CAKA,eAAAT,CAAgBD,EAAUa,GACtBrB,KAAKE,UAAUoB,QAAQ,CAACL,EAAWN,KAE3BH,EAASG,KAASU,EAASV,IAC3BM,EAAUK,QAAQV,IACdA,EAASS,EAASV,GAAMH,EAASG,GAAMU,OAM/CrB,KAAKE,UAAUW,IAAI,MACnBb,KAAKE,UAAUa,IAAI,KAAKO,QAAQV,IAC5BA,EAASS,EAAUb,IAG/B,CAKA,KAAAe,CAAMxB,EAAe,IACjBC,KAAKK,SAASN,GAAc,GAC5BC,KAAKC,MAAQ,IAAKF,GAClBC,KAAKS,gBAAgB,GAAIT,KAAKC,MAClC,GAI2B,CAE3BuB,MAAO,GACPC,MAAO,GAGPC,aAAc,KACdC,aAAc,KACdC,SAAU,QACVC,UAAW,CACPC,SAAS,EACTC,UAAW,WAIfC,UAAW,CACPC,KAAM,EACNC,OAAQ,CAAEC,EAAG,IAAKC,EAAG,KACrBC,OAAQ,SAIZC,QAAS,CACLC,UAAW,GACXC,WAAY,GACZC,UAAW,MAIfC,QAAS,CACLC,MAAM,EACNC,UAAU"}