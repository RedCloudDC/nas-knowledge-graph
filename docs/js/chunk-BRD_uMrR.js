import{c as e,t,f as n,b as i,s,a}from"./chunk-BDh3YsLp.js";import{s as o}from"./chunk-B5VhykKX.js";class r{constructor(e){this.container=document.getElementById(e)||document.querySelector(e),this.searchInput=null,this.suggestionsContainer=null,this.currentSuggestions=[],this.selectedSuggestionIndex=-1,this.isOpen=!1,this.config={minQueryLength:1,maxSuggestions:10,searchDelay:200,highlightMatches:!0,searchScopes:["all","nodes","edges"],currentScope:"all",maxCachedResults:100,virtualScrolling:!0,itemHeight:48,visibleItems:8,throttleKeyNav:16,batchRenderSize:20,enableMetrics:!0},this.searchMetrics={searchCount:0,avgSearchTime:0,totalSearchTime:0,cacheHits:0,lastSearchTime:null},this.searchCache=new Map,this.debounceInstances=new Map,this.virtualScrollState={startIndex:0,endIndex:this.config.visibleItems},this.documentFragment=document.createDocumentFragment(),this.intersectionObserver=null,this.init(),this.setupEventListeners()}init(){this.container&&(this.createSearchInterface(),this.setupSearch())}createSearchInterface(){this.searchInput=this.container.querySelector("#search-input")||this.container.querySelector('input[type="search"]'),this.searchInput||(this.container.innerHTML='\n                <div class="global-search-container">\n                    <div class="search-input-wrapper">\n                        <div class="search-icon">üîç</div>\n                        <input \n                            type="search" \n                            id="search-input" \n                            placeholder="Search nodes, edges, or properties..." \n                            autocomplete="off"\n                            spellcheck="false"\n                            role="combobox"\n                            aria-expanded="false"\n                            aria-haspopup="listbox"\n                            aria-owns="search-suggestions"\n                        />\n                        <div class="search-scope-selector">\n                            <select id="search-scope" aria-label="Search scope">\n                                <option value="all">All</option>\n                                <option value="nodes">Nodes</option>\n                                <option value="edges">Edges</option>\n                            </select>\n                        </div>\n                        <button id="search-clear" type="button" class="search-clear-btn" aria-label="Clear search">\n                            <span>‚úï</span>\n                        </button>\n                    </div>\n                    <div id="search-suggestions" \n                         class="search-suggestions" \n                         role="listbox" \n                         aria-label="Search suggestions"\n                         style="display: none;">\n                    </div>\n                </div>\n            ',this.searchInput=this.container.querySelector("#search-input")),this.suggestionsContainer=this.container.querySelector("#search-suggestions"),this.suggestionsContainer||(this.suggestionsContainer=document.createElement("div"),this.suggestionsContainer.id="search-suggestions",this.suggestionsContainer.className="search-suggestions",this.suggestionsContainer.setAttribute("role","listbox"),this.suggestionsContainer.setAttribute("aria-label","Search suggestions"),this.suggestionsContainer.style.display="none",this.container.appendChild(this.suggestionsContainer)),this.addSearchStyles()}addSearchStyles(){if(document.querySelector("#global-search-styles"))return;const e=document.createElement("style");e.id="global-search-styles",e.textContent="\n            .global-search-container {\n                position: relative;\n                width: 100%;\n                max-width: 500px;\n            }\n\n            .search-input-wrapper {\n                position: relative;\n                display: flex;\n                align-items: center;\n                background: white;\n                border: 2px solid #e1e8ed;\n                border-radius: 25px;\n                transition: all 0.2s ease;\n                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            }\n\n            .search-input-wrapper:focus-within {\n                border-color: #3498db;\n                box-shadow: 0 4px 12px rgba(52,152,219,0.2);\n            }\n\n            .search-icon {\n                padding: 0 15px;\n                color: #7f8c8d;\n                font-size: 16px;\n                pointer-events: none;\n            }\n\n            #search-input {\n                flex: 1;\n                border: none;\n                outline: none;\n                padding: 12px 0;\n                font-size: 14px;\n                background: transparent;\n                color: #2c3e50;\n            }\n\n            #search-input::placeholder {\n                color: #bdc3c7;\n            }\n\n            .search-scope-selector {\n                padding-right: 8px;\n            }\n\n            #search-scope {\n                border: none;\n                background: #f8f9fa;\n                padding: 4px 8px;\n                border-radius: 12px;\n                font-size: 11px;\n                color: #7f8c8d;\n                cursor: pointer;\n                outline: none;\n            }\n\n            #search-scope:focus {\n                background: #e9ecef;\n                color: #495057;\n            }\n\n            .search-clear-btn {\n                background: none;\n                border: none;\n                padding: 8px 15px;\n                cursor: pointer;\n                color: #7f8c8d;\n                border-radius: 50%;\n                transition: all 0.2s ease;\n                display: none;\n            }\n\n            .search-clear-btn:hover {\n                background: #f8f9fa;\n                color: #e74c3c;\n            }\n\n            .search-suggestions {\n                position: absolute;\n                top: 100%;\n                left: 0;\n                right: 0;\n                background: white;\n                border: 1px solid #e1e8ed;\n                border-radius: 12px;\n                box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n                z-index: 1000;\n                max-height: 400px;\n                overflow-y: auto;\n                margin-top: 8px;\n            }\n\n            .suggestion-item {\n                padding: 12px 16px;\n                cursor: pointer;\n                border-bottom: 1px solid #f8f9fa;\n                display: flex;\n                align-items: center;\n                transition: background-color 0.2s ease;\n            }\n\n            .suggestion-item:hover,\n            .suggestion-item.selected {\n                background: #f8f9fa;\n            }\n\n            .suggestion-item:last-child {\n                border-bottom: none;\n            }\n\n            .suggestion-icon {\n                margin-right: 12px;\n                font-size: 16px;\n                width: 20px;\n                text-align: center;\n            }\n\n            .suggestion-content {\n                flex: 1;\n                min-width: 0;\n            }\n\n            .suggestion-title {\n                font-weight: 600;\n                color: #2c3e50;\n                margin-bottom: 2px;\n                word-break: break-word;\n            }\n\n            .suggestion-subtitle {\n                font-size: 12px;\n                color: #7f8c8d;\n                word-break: break-word;\n            }\n\n            .suggestion-type {\n                font-size: 10px;\n                background: #e9ecef;\n                color: #6c757d;\n                padding: 2px 6px;\n                border-radius: 8px;\n                font-weight: 500;\n                text-transform: uppercase;\n                margin-left: 8px;\n            }\n\n            .search-highlight {\n                background: #fff3cd;\n                color: #856404;\n                padding: 1px 2px;\n                border-radius: 2px;\n                font-weight: 600;\n            }\n\n            .no-suggestions {\n                padding: 16px;\n                text-align: center;\n                color: #7f8c8d;\n                font-style: italic;\n            }\n\n            .recent-searches {\n                border-bottom: 1px solid #f8f9fa;\n            }\n\n            .recent-searches-header {\n                padding: 8px 16px;\n                font-size: 11px;\n                font-weight: 600;\n                color: #7f8c8d;\n                text-transform: uppercase;\n                letter-spacing: 0.5px;\n                background: #f8f9fa;\n            }\n\n            /* Dark theme support */\n            .theme-dark .search-input-wrapper,\n            .theme-dark .search-suggestions {\n                background: #2c3e50;\n                border-color: #34495e;\n                color: #ecf0f1;\n            }\n\n            .theme-dark .search-input-wrapper:focus-within {\n                border-color: #3498db;\n            }\n\n            .theme-dark #search-input {\n                color: #ecf0f1;\n            }\n\n            .theme-dark #search-input::placeholder {\n                color: #7f8c8d;\n            }\n\n            .theme-dark .suggestion-item:hover,\n            .theme-dark .suggestion-item.selected {\n                background: #34495e;\n            }\n\n            .theme-dark .suggestion-title {\n                color: #ecf0f1;\n            }\n\n            .theme-dark #search-scope {\n                background: #34495e;\n                color: #ecf0f1;\n            }\n\n            .theme-dark .search-clear-btn:hover {\n                background: #34495e;\n            }\n        ",document.head.appendChild(e)}setupSearch(){this.debouncedSearch=e(this.performSearchOptimized.bind(this),this.config.searchDelay),this.throttledKeyNav=t(this.updateSuggestionSelection.bind(this),this.config.throttleKeyNav),this.frameBasedRender=n(this.renderSuggestionsOptimized.bind(this)),this.batchProcessor=i(this.processBatchOperations.bind(this),50,10),this.updateSearchIndex(),this.setupVirtualScrolling(),this.config.enableMetrics&&this.initPerformanceMonitoring()}setupVirtualScrolling(){this.config.virtualScrolling&&(this.intersectionObserver=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&this.handleVirtualScrollIntersection(e.target)})},{root:this.suggestionsContainer,rootMargin:"50px",threshold:.1}))}initPerformanceMonitoring(){setInterval(()=>{this.searchMetrics.searchCount},3e4)}performSearchOptimized(e){if(!e||e.length<this.config.minQueryLength)return void this.hideSuggestions();const t=performance.now(),n=`${e}-${this.config.currentScope}`;if(this.searchCache.has(n))return this.searchMetrics.cacheHits++,this.currentSuggestions=this.searchCache.get(n),this.frameBasedRender(),void this.showSuggestions();const i={searchNodes:"all"===this.config.currentScope||"nodes"===this.config.currentScope,searchEdges:"all"===this.config.currentScope||"edges"===this.config.currentScope,limit:this.config.maxSuggestions},a=s.textSearch(e,i),o=s.getSuggestions(e,this.config.maxSuggestions-a.length);this.currentSuggestions=[...a.map(t=>({type:t.type,data:t.data,score:t.score,matchedText:e})),...o.map(t=>({type:"suggestion",text:t,matchedText:e}))],this.searchCache.size<this.config.maxCachedResults&&this.searchCache.set(n,this.currentSuggestions);const r=performance.now()-t;this.searchMetrics.searchCount++,this.searchMetrics.totalSearchTime+=r,this.searchMetrics.avgSearchTime=this.searchMetrics.totalSearchTime/this.searchMetrics.searchCount,this.searchMetrics.lastSearchTime=r,this.frameBasedRender(),this.showSuggestions()}renderSuggestionsOptimized(){0!==this.currentSuggestions.length?this.config.virtualScrolling&&this.currentSuggestions.length>this.config.visibleItems?this.renderVirtualScrollSuggestions():this.renderBatchedSuggestions():this.suggestionsContainer.innerHTML='\n                <div class="no-suggestions">\n                    No matches found. Try different keywords.\n                </div>\n            '}renderVirtualScrollSuggestions(){const{startIndex:e,endIndex:t}=this.virtualScrollState,n=this.currentSuggestions.slice(e,t),i=this.currentSuggestions.length*this.config.itemHeight,s=e*this.config.itemHeight;this.suggestionsContainer.innerHTML=`\n            <div class="virtual-scroll-container" style="height: ${i}px; position: relative;">\n                <div class="visible-items" style="transform: translateY(${s}px);">\n                    ${this.renderSuggestionItems(n,e)}\n                </div>\n            </div>\n        `;this.suggestionsContainer.querySelectorAll(".suggestion-item").forEach(e=>{this.intersectionObserver?.observe(e)})}renderBatchedSuggestions(){const e=this.config.batchRenderSize,t=[];for(let s=0;s<this.currentSuggestions.length;s+=e)t.push(this.currentSuggestions.slice(s,s+e));this.suggestionsContainer.innerHTML="";let n=0;const i=()=>{if(n>=t.length)return;const s=t[n],a=document.createDocumentFragment();s.forEach((t,i)=>{const s=n*e+i,o=this.createSuggestionElement(t,s);a.appendChild(o)}),this.suggestionsContainer.appendChild(a),n++,n<t.length&&requestAnimationFrame(i)};requestAnimationFrame(i)}renderSuggestionItems(e,t=0){return e.map((e,n)=>{const i=t+n,s=this.getSuggestionIcon(e),a=this.getSuggestionTitle(e),o=this.getSuggestionSubtitle(e),r=this.getSuggestionTypeLabel(e);return`\n                <div class="suggestion-item" \n                     data-index="${i}" \n                     role="option"\n                     style="height: ${this.config.itemHeight}px;">\n                    <div class="suggestion-icon">${s}</div>\n                    <div class="suggestion-content">\n                        <div class="suggestion-title">${a}</div>\n                        ${o?`<div class="suggestion-subtitle">${o}</div>`:""}\n                    </div>\n                    ${r?`<div class="suggestion-type">${r}</div>`:""}\n                </div>\n            `}).join("")}createSuggestionElement(e,t){const n=document.createElement("div");n.className="suggestion-item",n.dataset.index=t,n.setAttribute("role","option"),n.style.height=this.config.itemHeight+"px";const i=this.getSuggestionIcon(e),s=this.getSuggestionTitle(e),a=this.getSuggestionSubtitle(e),o=this.getSuggestionTypeLabel(e);return n.innerHTML=`\n            <div class="suggestion-icon">${i}</div>\n            <div class="suggestion-content">\n                <div class="suggestion-title">${s}</div>\n                ${a?`<div class="suggestion-subtitle">${a}</div>`:""}\n            </div>\n            ${o?`<div class="suggestion-type">${o}</div>`:""}\n        `,n}handleVirtualScrollIntersection(e){const t=parseInt(e.dataset.index);t<=this.virtualScrollState.startIndex+2?(this.virtualScrollState.startIndex=Math.max(0,this.virtualScrollState.startIndex-this.config.visibleItems),this.virtualScrollState.endIndex=this.virtualScrollState.startIndex+2*this.config.visibleItems,this.frameBasedRender()):t>=this.virtualScrollState.endIndex-2&&(this.virtualScrollState.startIndex=Math.min(this.currentSuggestions.length-this.config.visibleItems,this.virtualScrollState.startIndex+this.config.visibleItems),this.virtualScrollState.endIndex=this.virtualScrollState.startIndex+2*this.config.visibleItems,this.frameBasedRender())}processBatchOperations(e){e.forEach(e=>{switch(e.type){case"cache-cleanup":this.cleanupCache();break;case"metrics-update":this.updateMetrics(e.data);break;case"index-update":this.updateSearchIndex()}})}cleanupCache(){if(this.searchCache.size>.8*this.config.maxCachedResults){const e=Array.from(this.searchCache.entries()),t=Math.floor(.3*e.length);for(let n=0;n<t;n++)this.searchCache.delete(e[n][0])}}updateSuggestionSelectionThrottled(){this.throttledKeyNav()}getPerformanceMetrics(){return{...this.searchMetrics,cacheSize:this.searchCache.size,cacheHitRate:this.searchMetrics.searchCount>0?Math.round(this.searchMetrics.cacheHits/this.searchMetrics.searchCount*100):0}}setupEventListeners(){if(!this.searchInput)return;this.searchInput.addEventListener("input",e=>{this.handleSearchInput(e.target.value)}),this.searchInput.addEventListener("keydown",e=>{this.handleSearchKeydown(e)}),this.searchInput.addEventListener("focus",()=>{this.searchInput.value.length>=this.config.minQueryLength?this.showSuggestions():this.showRecentSearches()}),this.searchInput.addEventListener("blur",e=>{setTimeout(()=>{this.container.contains(document.activeElement)||this.hideSuggestions()},150)});const e=this.container.querySelector("#search-clear");e&&e.addEventListener("click",()=>{this.clearSearch(),this.searchInput.focus()});const t=this.container.querySelector("#search-scope");t&&t.addEventListener("change",e=>{this.config.currentScope=e.target.value,this.searchInput.value&&this.debouncedSearch(this.searchInput.value)}),this.suggestionsContainer.addEventListener("click",e=>{const t=e.target.closest(".suggestion-item");t&&this.selectSuggestion(parseInt(t.dataset.index))}),document.addEventListener("click",e=>{this.container.contains(e.target)||this.hideSuggestions()}),o.subscribe("nodes",()=>this.updateSearchIndex()),o.subscribe("edges",()=>this.updateSearchIndex())}handleSearchInput(e){const t=this.container.querySelector("#search-clear");t&&(t.style.display=e?"block":"none"),e.length>=this.config.minQueryLength?this.debouncedSearch(e):0===e.length?this.showRecentSearches():this.hideSuggestions()}handleSearchKeydown(e){if(this.isOpen)switch(e.key){case"ArrowDown":e.preventDefault(),this.selectedSuggestionIndex=Math.min(this.selectedSuggestionIndex+1,this.currentSuggestions.length-1),this.updateSuggestionSelection();break;case"ArrowUp":e.preventDefault(),this.selectedSuggestionIndex=Math.max(this.selectedSuggestionIndex-1,-1),this.updateSuggestionSelection();break;case"Enter":e.preventDefault(),this.selectedSuggestionIndex>=0?this.selectSuggestion(this.selectedSuggestionIndex):this.performDirectSearch(e.target.value);break;case"Escape":this.hideSuggestions(),this.searchInput.blur();break;case"Tab":this.selectedSuggestionIndex>=0&&(e.preventDefault(),this.selectSuggestion(this.selectedSuggestionIndex))}}performSearch(e){if(!e||e.length<this.config.minQueryLength)return void this.hideSuggestions();const t={searchNodes:"all"===this.config.currentScope||"nodes"===this.config.currentScope,searchEdges:"all"===this.config.currentScope||"edges"===this.config.currentScope,limit:this.config.maxSuggestions},n=s.textSearch(e,t),i=s.getSuggestions(e,this.config.maxSuggestions-n.length);this.currentSuggestions=[...n.map(t=>({type:t.type,data:t.data,score:t.score,matchedText:e})),...i.map(t=>({type:"suggestion",text:t,matchedText:e}))],this.renderSuggestions(),this.showSuggestions()}showRecentSearches(){const e=s.getSearchHistory();0!==e.length?(this.currentSuggestions=e.slice(0,5).map(e=>({type:"recent",text:e,isRecent:!0})),this.renderRecentSearches(),this.showSuggestions()):this.hideSuggestions()}renderSuggestions(){if(0===this.currentSuggestions.length)return void(this.suggestionsContainer.innerHTML='\n                <div class="no-suggestions">\n                    No matches found. Try different keywords.\n                </div>\n            ');const e=this.currentSuggestions.map((e,t)=>{const n=this.getSuggestionIcon(e),i=this.getSuggestionTitle(e),s=this.getSuggestionSubtitle(e),a=this.getSuggestionTypeLabel(e);return`\n                <div class="suggestion-item" data-index="${t}" role="option">\n                    <div class="suggestion-icon">${n}</div>\n                    <div class="suggestion-content">\n                        <div class="suggestion-title">${i}</div>\n                        ${s?`<div class="suggestion-subtitle">${s}</div>`:""}\n                    </div>\n                    ${a?`<div class="suggestion-type">${a}</div>`:""}\n                </div>\n            `}).join("");this.suggestionsContainer.innerHTML=e}renderRecentSearches(){const e=`\n            <div class="recent-searches">\n                <div class="recent-searches-header">Recent Searches</div>\n                ${this.currentSuggestions.map((e,t)=>`\n                    <div class="suggestion-item" data-index="${t}" role="option">\n                        <div class="suggestion-icon">üïê</div>\n                        <div class="suggestion-content">\n                            <div class="suggestion-title">${e.text}</div>\n                        </div>\n                    </div>\n                `).join("")}\n            </div>\n        `;this.suggestionsContainer.innerHTML=e}getSuggestionIcon(e){if(e.isRecent)return"üïê";if("suggestion"===e.type)return"üîç";if("edge"===e.type)return"‚ÜîÔ∏è";const t={faa_stars_terminal:"üè¢",approach_control:"üõ´",faa_eram_terminal:"üì°",geographic_location:"üìç",radar_equipment:"üìä",communication_equipment:"üìª",default:"‚óâ"};return e.data?.type?t[e.data.type]||t.default:"üîç"}getSuggestionTitle(e){if("suggestion"===e.type||e.isRecent)return this.highlightMatch(e.text,e.matchedText);const t=e.data?.name||e.data?.label||e.data?.id||"Unknown";return this.highlightMatch(t,e.matchedText)}getSuggestionSubtitle(e){if("suggestion"===e.type||e.isRecent)return null;if("edge"===e.type)return`${e.data.source} ‚Üí ${e.data.target}`;const t=[];return e.data?.type&&t.push(e.data.type.replace(/_/g," ")),e.data?.address?.city&&t.push(`${e.data.address.city}, ${e.data.address.state}`),t.join(" ‚Ä¢ ")}getSuggestionTypeLabel(e){return e.isRecent?null:"suggestion"===e.type?"Search":"edge"===e.type?"Edge":"Node"}highlightMatch(e,t){if(!this.config.highlightMatches||!t)return e;const n=new RegExp(`(${t})`,"gi");return e.replace(n,'<span class="search-highlight">$1</span>')}updateSuggestionSelection(){this.suggestionsContainer.querySelectorAll(".suggestion-item").forEach((e,t)=>{e.classList.toggle("selected",t===this.selectedSuggestionIndex)}),this.searchInput.setAttribute("aria-activedescendant",this.selectedSuggestionIndex>=0?`suggestion-${this.selectedSuggestionIndex}`:"")}selectSuggestion(e){const t=this.currentSuggestions[e];t&&("suggestion"===t.type||t.isRecent?(this.searchInput.value=t.text,this.performDirectSearch(t.text)):("node"===t.type?(o.setState({selectedNode:t.data}),this.highlightSearchResult(t.data)):"edge"===t.type&&(o.setState({selectedEdge:t.data}),this.highlightSearchResult(t.data)),this.searchInput.value=this.getSuggestionTitle(t),this.hideSuggestions()))}performDirectSearch(e){this.hideSuggestions(),document.dispatchEvent(new CustomEvent("globalSearch",{detail:{query:e,scope:this.config.currentScope,timestamp:Date.now()}})),e.length>=this.config.minQueryLength&&s.addToHistory(e)}highlightSearchResult(e){document.dispatchEvent(new CustomEvent("highlightGraphElement",{detail:{element:e,type:e.source?"edge":"node"}}))}showSuggestions(){this.suggestionsContainer.style.display="block",this.searchInput.setAttribute("aria-expanded","true"),this.isOpen=!0,this.selectedSuggestionIndex=-1}hideSuggestions(){this.suggestionsContainer.style.display="none",this.searchInput.setAttribute("aria-expanded","false"),this.isOpen=!1,this.selectedSuggestionIndex=-1,this.currentSuggestions=[]}clearSearch(){this.searchInput.value="",this.hideSuggestions();const e=this.container.querySelector("#search-clear");e&&(e.style.display="none"),document.dispatchEvent(new CustomEvent("globalSearchClear"))}updateSearchIndex(){s.updateIndex()}getCurrentQuery(){return this.searchInput?this.searchInput.value:""}setQuery(e){this.searchInput&&(this.searchInput.value=e,e&&this.debouncedSearch(e))}focus(){this.searchInput&&this.searchInput.focus()}destroy(){this.hideSuggestions(),this.searchInput=null,this.suggestionsContainer=null,this.currentSuggestions=[]}}class c{constructor(e){this.container=document.getElementById(e)||document.querySelector(e),this.activeFilters=new Map,this.filterState={equipmentTypes:[],dateRange:{start:null,end:null},severity:[],locationRegions:[],connectionCount:{min:0,max:null},customProperties:{}},this.init(),this.setupEventListeners()}init(){this.container&&(this.createFilterInterface(),this.addFilterStyles(),this.loadFilterState())}createFilterInterface(){this.container.innerHTML='\n            <div class="advanced-filters-container">\n                <div class="filter-header">\n                    <h2>üîç Advanced Filters</h2>\n                    <div class="filter-actions">\n                        <button id="clear-all-filters" class="filter-btn filter-btn-secondary">\n                            üóëÔ∏è Clear All\n                        </button>\n                        <button id="save-filter-set" class="filter-btn filter-btn-primary">\n                            üíæ Save Set\n                        </button>\n                    </div>\n                </div>\n\n                \x3c!-- Equipment Type Filter --\x3e\n                <div class="filter-section" id="equipment-type-section">\n                    <div class="filter-section-header">\n                        <h3>üîß Equipment Type</h3>\n                        <button class="filter-toggle" data-section="equipment-type">\n                            <span class="toggle-icon">‚ñº</span>\n                        </button>\n                    </div>\n                    <div class="filter-content">\n                        <div class="checkbox-group">\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="faa_stars_terminal" data-filter="equipmentType">\n                                <span class="checkmark"></span>\n                                <span class="checkbox-icon">üè¢</span>\n                                FAA STARS Terminal\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="approach_control" data-filter="equipmentType">\n                                <span class="checkmark"></span>\n                                <span class="checkbox-icon">üõ´</span>\n                                Approach Control\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="faa_eram_terminal" data-filter="equipmentType">\n                                <span class="checkmark"></span>\n                                <span class="checkbox-icon">üì°</span>\n                                FAA ERAM Terminal\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="radar_equipment" data-filter="equipmentType">\n                                <span class="checkmark"></span>\n                                <span class="checkbox-icon">üìä</span>\n                                Radar Equipment\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="communication_equipment" data-filter="equipmentType">\n                                <span class="checkmark"></span>\n                                <span class="checkbox-icon">üìª</span>\n                                Communication Equipment\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Date Range Filter --\x3e\n                <div class="filter-section" id="date-range-section">\n                    <div class="filter-section-header">\n                        <h3>üìÖ Date Range</h3>\n                        <button class="filter-toggle" data-section="date-range">\n                            <span class="toggle-icon">‚ñº</span>\n                        </button>\n                    </div>\n                    <div class="filter-content">\n                        <div class="date-range-container">\n                            <div class="date-input-group">\n                                <label>From:</label>\n                                <input type="date" id="date-start" data-filter="dateRange">\n                            </div>\n                            <div class="date-input-group">\n                                <label>To:</label>\n                                <input type="date" id="date-end" data-filter="dateRange">\n                            </div>\n                        </div>\n                        <div class="date-presets">\n                            <button class="date-preset" data-days="7">Last 7 days</button>\n                            <button class="date-preset" data-days="30">Last 30 days</button>\n                            <button class="date-preset" data-days="90">Last 90 days</button>\n                            <button class="date-preset" data-days="365">Last year</button>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Severity Filter --\x3e\n                <div class="filter-section" id="severity-section">\n                    <div class="filter-section-header">\n                        <h3>‚ö†Ô∏è Severity Level</h3>\n                        <button class="filter-toggle" data-section="severity">\n                            <span class="toggle-icon">‚ñº</span>\n                        </button>\n                    </div>\n                    <div class="filter-content">\n                        <div class="severity-grid">\n                            <label class="severity-item severity-critical">\n                                <input type="checkbox" value="critical" data-filter="severity">\n                                <span class="severity-indicator"></span>\n                                <span class="severity-label">Critical</span>\n                            </label>\n                            <label class="severity-item severity-high">\n                                <input type="checkbox" value="high" data-filter="severity">\n                                <span class="severity-indicator"></span>\n                                <span class="severity-label">High</span>\n                            </label>\n                            <label class="severity-item severity-medium">\n                                <input type="checkbox" value="medium" data-filter="severity">\n                                <span class="severity-indicator"></span>\n                                <span class="severity-label">Medium</span>\n                            </label>\n                            <label class="severity-item severity-low">\n                                <input type="checkbox" value="low" data-filter="severity">\n                                <span class="severity-indicator"></span>\n                                <span class="severity-label">Low</span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Location Region Filter --\x3e\n                <div class="filter-section" id="location-section">\n                    <div class="filter-section-header">\n                        <h3>üìç Location Region</h3>\n                        <button class="filter-toggle" data-section="location">\n                            <span class="toggle-icon">‚ñº</span>\n                        </button>\n                    </div>\n                    <div class="filter-content">\n                        <div class="location-search">\n                            <input type="text" id="location-search" placeholder="Search locations..." \n                                   autocomplete="off">\n                        </div>\n                        <div class="location-regions">\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="northeast" data-filter="region">\n                                <span class="checkmark"></span>\n                                Northeast US\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="southeast" data-filter="region">\n                                <span class="checkmark"></span>\n                                Southeast US\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="midwest" data-filter="region">\n                                <span class="checkmark"></span>\n                                Midwest US\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="southwest" data-filter="region">\n                                <span class="checkmark"></span>\n                                Southwest US\n                            </label>\n                            <label class="filter-checkbox">\n                                <input type="checkbox" value="west" data-filter="region">\n                                <span class="checkmark"></span>\n                                Western US\n                            </label>\n                        </div>\n                        <div class="specific-locations" id="specific-locations">\n                            \x3c!-- Dynamically populated based on data --\x3e\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Connection Count Filter --\x3e\n                <div class="filter-section" id="connection-section">\n                    <div class="filter-section-header">\n                        <h3>üîó Connection Count</h3>\n                        <button class="filter-toggle" data-section="connection">\n                            <span class="toggle-icon">‚ñº</span>\n                        </button>\n                    </div>\n                    <div class="filter-content">\n                        <div class="range-filter">\n                            <div class="range-input-group">\n                                <label>Minimum:</label>\n                                <input type="number" id="connection-min" min="0" placeholder="0" \n                                       data-filter="connectionCount">\n                            </div>\n                            <div class="range-input-group">\n                                <label>Maximum:</label>\n                                <input type="number" id="connection-max" min="0" placeholder="‚àû" \n                                       data-filter="connectionCount">\n                            </div>\n                        </div>\n                        <div class="range-slider-container">\n                            <input type="range" id="connection-range" min="0" max="50" value="0" \n                                   class="range-slider">\n                            <div class="range-labels">\n                                <span>0</span>\n                                <span>50+</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Custom Properties Filter --\x3e\n                <div class="filter-section" id="custom-properties-section">\n                    <div class="filter-section-header">\n                        <h3>‚öôÔ∏è Custom Properties</h3>\n                        <button class="filter-toggle" data-section="custom-properties">\n                            <span class="toggle-icon">‚ñº</span>\n                        </button>\n                    </div>\n                    <div class="filter-content">\n                        <div class="custom-filter-builder">\n                            <div class="property-filter-row">\n                                <select id="property-key" class="property-select">\n                                    <option value="">Select property...</option>\n                                </select>\n                                <select id="property-operator" class="operator-select">\n                                    <option value="equals">equals</option>\n                                    <option value="contains">contains</option>\n                                    <option value="greater">greater than</option>\n                                    <option value="less">less than</option>\n                                </select>\n                                <input type="text" id="property-value" class="property-value" \n                                       placeholder="Value...">\n                                <button id="add-property-filter" class="add-filter-btn">+</button>\n                            </div>\n                            <div id="active-property-filters" class="active-filters-list">\n                                \x3c!-- Active property filters will be displayed here --\x3e\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Filter Summary --\x3e\n                <div class="filter-summary">\n                    <div class="summary-header">\n                        <h4>üìä Filter Summary</h4>\n                    </div>\n                    <div class="summary-content">\n                        <div class="summary-stats">\n                            <div class="stat-item">\n                                <span class="stat-value" id="filtered-nodes">0</span>\n                                <span class="stat-label">Nodes</span>\n                            </div>\n                            <div class="stat-item">\n                                <span class="stat-value" id="filtered-edges">0</span>\n                                <span class="stat-label">Edges</span>\n                            </div>\n                        </div>\n                        <div class="active-filters-summary" id="active-filters-summary">\n                            \x3c!-- Active filters summary --\x3e\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Saved Filter Sets --\x3e\n                <div class="saved-filters-section">\n                    <div class="section-header">\n                        <h4>üíæ Saved Filter Sets</h4>\n                    </div>\n                    <div id="saved-filters-list" class="saved-filters-list">\n                        \x3c!-- Saved filter sets will be displayed here --\x3e\n                    </div>\n                </div>\n            </div>\n        ',this.populateSpecificLocations(),this.populatePropertyKeys(),this.loadSavedFilterSets()}addFilterStyles(){if(document.querySelector("#advanced-filters-styles"))return;const e=document.createElement("style");e.id="advanced-filters-styles",e.textContent='\n            .advanced-filters-container {\n                padding: 20px;\n                background: #f8f9fa;\n                border-radius: 12px;\n                max-height: calc(100vh - 200px);\n                overflow-y: auto;\n            }\n\n            .filter-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                margin-bottom: 20px;\n                padding-bottom: 15px;\n                border-bottom: 2px solid #e9ecef;\n            }\n\n            .filter-header h2 {\n                margin: 0;\n                color: #2c3e50;\n                font-size: 18px;\n            }\n\n            .filter-actions {\n                display: flex;\n                gap: 10px;\n            }\n\n            .filter-btn {\n                padding: 8px 16px;\n                border: none;\n                border-radius: 6px;\n                font-size: 12px;\n                font-weight: 600;\n                cursor: pointer;\n                transition: all 0.2s ease;\n            }\n\n            .filter-btn-primary {\n                background: #3498db;\n                color: white;\n            }\n\n            .filter-btn-primary:hover {\n                background: #2980b9;\n            }\n\n            .filter-btn-secondary {\n                background: #e9ecef;\n                color: #6c757d;\n            }\n\n            .filter-btn-secondary:hover {\n                background: #dee2e6;\n                color: #495057;\n            }\n\n            .filter-section {\n                margin-bottom: 20px;\n                background: white;\n                border-radius: 8px;\n                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            }\n\n            .filter-section-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 15px 20px;\n                border-bottom: 1px solid #e9ecef;\n                cursor: pointer;\n            }\n\n            .filter-section-header h3 {\n                margin: 0;\n                font-size: 14px;\n                color: #2c3e50;\n            }\n\n            .filter-toggle {\n                background: none;\n                border: none;\n                cursor: pointer;\n                padding: 5px;\n                border-radius: 4px;\n                transition: background-color 0.2s ease;\n            }\n\n            .filter-toggle:hover {\n                background: #f8f9fa;\n            }\n\n            .toggle-icon {\n                transition: transform 0.2s ease;\n            }\n\n            .filter-section.collapsed .toggle-icon {\n                transform: rotate(-90deg);\n            }\n\n            .filter-content {\n                padding: 20px;\n            }\n\n            .filter-section.collapsed .filter-content {\n                display: none;\n            }\n\n            /* Checkbox Styles */\n            .checkbox-group {\n                display: flex;\n                flex-direction: column;\n                gap: 12px;\n            }\n\n            .filter-checkbox {\n                display: flex;\n                align-items: center;\n                cursor: pointer;\n                padding: 8px;\n                border-radius: 6px;\n                transition: background-color 0.2s ease;\n            }\n\n            .filter-checkbox:hover {\n                background: #f8f9fa;\n            }\n\n            .filter-checkbox input[type="checkbox"] {\n                display: none;\n            }\n\n            .checkmark {\n                width: 18px;\n                height: 18px;\n                border: 2px solid #bdc3c7;\n                border-radius: 4px;\n                margin-right: 10px;\n                position: relative;\n                transition: all 0.2s ease;\n            }\n\n            .filter-checkbox input[type="checkbox"]:checked + .checkmark {\n                background: #3498db;\n                border-color: #3498db;\n            }\n\n            .filter-checkbox input[type="checkbox"]:checked + .checkmark::after {\n                content: \'‚úì\';\n                position: absolute;\n                top: -2px;\n                left: 2px;\n                color: white;\n                font-size: 12px;\n                font-weight: bold;\n            }\n\n            .checkbox-icon {\n                margin-right: 8px;\n                font-size: 16px;\n            }\n\n            /* Date Range Styles */\n            .date-range-container {\n                display: flex;\n                gap: 15px;\n                margin-bottom: 15px;\n            }\n\n            .date-input-group {\n                flex: 1;\n            }\n\n            .date-input-group label {\n                display: block;\n                font-size: 12px;\n                font-weight: 600;\n                color: #6c757d;\n                margin-bottom: 5px;\n            }\n\n            .date-input-group input {\n                width: 100%;\n                padding: 8px 12px;\n                border: 1px solid #e9ecef;\n                border-radius: 6px;\n                font-size: 14px;\n                outline: none;\n                transition: border-color 0.2s ease;\n            }\n\n            .date-input-group input:focus {\n                border-color: #3498db;\n                box-shadow: 0 0 0 2px rgba(52,152,219,0.2);\n            }\n\n            .date-presets {\n                display: flex;\n                gap: 8px;\n                flex-wrap: wrap;\n            }\n\n            .date-preset {\n                padding: 6px 12px;\n                background: #e9ecef;\n                border: none;\n                border-radius: 4px;\n                font-size: 11px;\n                cursor: pointer;\n                transition: all 0.2s ease;\n            }\n\n            .date-preset:hover {\n                background: #dee2e6;\n            }\n\n            .date-preset.active {\n                background: #3498db;\n                color: white;\n            }\n\n            /* Severity Styles */\n            .severity-grid {\n                display: grid;\n                grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n                gap: 12px;\n            }\n\n            .severity-item {\n                display: flex;\n                align-items: center;\n                padding: 10px;\n                border-radius: 6px;\n                cursor: pointer;\n                border: 2px solid transparent;\n                transition: all 0.2s ease;\n            }\n\n            .severity-item input[type="checkbox"] {\n                display: none;\n            }\n\n            .severity-indicator {\n                width: 12px;\n                height: 12px;\n                border-radius: 50%;\n                margin-right: 8px;\n            }\n\n            .severity-critical .severity-indicator {\n                background: #e74c3c;\n            }\n\n            .severity-high .severity-indicator {\n                background: #f39c12;\n            }\n\n            .severity-medium .severity-indicator {\n                background: #f1c40f;\n            }\n\n            .severity-low .severity-indicator {\n                background: #2ecc71;\n            }\n\n            .severity-item input[type="checkbox"]:checked + .severity-indicator {\n                box-shadow: 0 0 0 3px rgba(255,255,255,1), 0 0 0 5px currentColor;\n            }\n\n            .severity-label {\n                font-size: 12px;\n                font-weight: 600;\n            }\n\n            /* Location Styles */\n            .location-search {\n                margin-bottom: 15px;\n            }\n\n            .location-search input {\n                width: 100%;\n                padding: 10px 15px;\n                border: 1px solid #e9ecef;\n                border-radius: 25px;\n                font-size: 14px;\n                outline: none;\n                transition: border-color 0.2s ease;\n            }\n\n            .location-search input:focus {\n                border-color: #3498db;\n            }\n\n            .location-regions {\n                margin-bottom: 15px;\n            }\n\n            .specific-locations {\n                max-height: 150px;\n                overflow-y: auto;\n                border: 1px solid #e9ecef;\n                border-radius: 6px;\n                padding: 10px;\n            }\n\n            /* Range Filter Styles */\n            .range-filter {\n                display: flex;\n                gap: 15px;\n                margin-bottom: 15px;\n            }\n\n            .range-input-group {\n                flex: 1;\n            }\n\n            .range-slider-container {\n                position: relative;\n            }\n\n            .range-slider {\n                width: 100%;\n                height: 6px;\n                border-radius: 3px;\n                background: #e9ecef;\n                outline: none;\n                cursor: pointer;\n            }\n\n            .range-slider::-webkit-slider-thumb {\n                appearance: none;\n                width: 18px;\n                height: 18px;\n                border-radius: 50%;\n                background: #3498db;\n                cursor: pointer;\n            }\n\n            .range-labels {\n                display: flex;\n                justify-content: space-between;\n                margin-top: 8px;\n                font-size: 11px;\n                color: #6c757d;\n            }\n\n            /* Custom Properties Styles */\n            .property-filter-row {\n                display: flex;\n                gap: 10px;\n                align-items: end;\n                margin-bottom: 15px;\n            }\n\n            .property-select,\n            .operator-select {\n                flex: 1;\n                padding: 8px 12px;\n                border: 1px solid #e9ecef;\n                border-radius: 6px;\n                background: white;\n                outline: none;\n            }\n\n            .property-value {\n                flex: 1;\n                padding: 8px 12px;\n                border: 1px solid #e9ecef;\n                border-radius: 6px;\n                outline: none;\n            }\n\n            .add-filter-btn {\n                width: 36px;\n                height: 36px;\n                background: #3498db;\n                color: white;\n                border: none;\n                border-radius: 6px;\n                cursor: pointer;\n                font-size: 16px;\n                font-weight: bold;\n            }\n\n            .add-filter-btn:hover {\n                background: #2980b9;\n            }\n\n            .active-filters-list {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n            }\n\n            .property-filter-tag {\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                padding: 8px 12px;\n                background: #e3f2fd;\n                border-radius: 6px;\n                font-size: 12px;\n            }\n\n            .filter-tag-remove {\n                background: none;\n                border: none;\n                color: #2196f3;\n                cursor: pointer;\n                font-size: 14px;\n                padding: 2px 4px;\n            }\n\n            /* Filter Summary Styles */\n            .filter-summary {\n                background: white;\n                border-radius: 8px;\n                padding: 15px;\n                margin-bottom: 20px;\n                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            }\n\n            .summary-header h4 {\n                margin: 0 0 15px 0;\n                font-size: 14px;\n                color: #2c3e50;\n            }\n\n            .summary-stats {\n                display: flex;\n                gap: 20px;\n                margin-bottom: 15px;\n            }\n\n            .stat-item {\n                text-align: center;\n            }\n\n            .stat-value {\n                display: block;\n                font-size: 24px;\n                font-weight: bold;\n                color: #3498db;\n            }\n\n            .stat-label {\n                display: block;\n                font-size: 11px;\n                color: #6c757d;\n                text-transform: uppercase;\n                letter-spacing: 0.5px;\n            }\n\n            .active-filters-summary {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n\n            .filter-tag {\n                padding: 4px 8px;\n                background: #e9ecef;\n                border-radius: 4px;\n                font-size: 11px;\n                color: #495057;\n            }\n\n            /* Saved Filters Styles */\n            .saved-filters-section {\n                background: white;\n                border-radius: 8px;\n                padding: 15px;\n                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            }\n\n            .saved-filters-list {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n            }\n\n            .saved-filter-item {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 10px;\n                background: #f8f9fa;\n                border-radius: 6px;\n                cursor: pointer;\n                transition: background-color 0.2s ease;\n            }\n\n            .saved-filter-item:hover {\n                background: #e9ecef;\n            }\n\n            .saved-filter-name {\n                font-weight: 600;\n                color: #2c3e50;\n            }\n\n            .saved-filter-actions {\n                display: flex;\n                gap: 5px;\n            }\n\n            .filter-action-btn {\n                padding: 4px 8px;\n                background: none;\n                border: 1px solid #dee2e6;\n                border-radius: 4px;\n                font-size: 11px;\n                cursor: pointer;\n                transition: all 0.2s ease;\n            }\n\n            .filter-action-btn:hover {\n                background: #e9ecef;\n            }\n\n            /* Dark theme support */\n            .theme-dark .advanced-filters-container,\n            .theme-dark .filter-section,\n            .theme-dark .filter-summary,\n            .theme-dark .saved-filters-section {\n                background: #2c3e50;\n                color: #ecf0f1;\n            }\n\n            .theme-dark .filter-section-header {\n                border-bottom-color: #34495e;\n            }\n\n            .theme-dark .filter-content {\n                background: #2c3e50;\n            }\n\n            .theme-dark .date-input-group input,\n            .theme-dark .location-search input,\n            .theme-dark .property-value,\n            .theme-dark .property-select,\n            .theme-dark .operator-select {\n                background: #34495e;\n                border-color: #4a5c6b;\n                color: #ecf0f1;\n            }\n        ',document.head.appendChild(e)}setupEventListeners(){this.container.addEventListener("click",e=>{if(e.target.closest(".filter-toggle")){e.target.closest(".filter-section").classList.toggle("collapsed")}}),this.container.addEventListener("change",e=>{"checkbox"===e.target.type&&this.handleCheckboxFilter(e.target)}),this.container.addEventListener("change",e=>{"date"===e.target.type&&this.handleDateRangeFilter()}),this.container.addEventListener("click",e=>{e.target.classList.contains("date-preset")&&this.handleDatePreset(e.target)});const e=this.container.querySelector("#location-search");e&&e.addEventListener("input",e=>{this.handleLocationSearch(e.target.value)});const t=this.container.querySelector("#connection-min"),n=this.container.querySelector("#connection-max"),i=this.container.querySelector("#connection-range");[t,n].forEach(e=>{e&&e.addEventListener("input",()=>this.handleConnectionCountFilter())}),i&&i.addEventListener("input",e=>{t.value=e.target.value,this.handleConnectionCountFilter()});const s=this.container.querySelector("#add-property-filter");s&&s.addEventListener("click",()=>{this.addCustomPropertyFilter()});const a=this.container.querySelector("#clear-all-filters");a&&a.addEventListener("click",()=>{this.clearAllFilters()});const r=this.container.querySelector("#save-filter-set");r&&r.addEventListener("click",()=>{this.saveFilterSet()}),o.subscribe("nodes",()=>this.updateFilterSummary()),o.subscribe("edges",()=>this.updateFilterSummary())}handleCheckboxFilter(e){const t=e.dataset.filter,n=e.value;switch(t){case"equipmentType":this.updateArrayFilter("equipmentTypes",n,e.checked);break;case"severity":this.updateArrayFilter("severity",n,e.checked);break;case"region":this.updateArrayFilter("locationRegions",n,e.checked)}this.applyFilters()}updateArrayFilter(e,t,n){n?this.filterState[e].includes(t)||this.filterState[e].push(t):this.filterState[e]=this.filterState[e].filter(e=>e!==t)}handleDateRangeFilter(){const e=this.container.querySelector("#date-start"),t=this.container.querySelector("#date-end");this.filterState.dateRange={start:e.value||null,end:t.value||null},this.applyFilters()}handleDatePreset(e){const t=parseInt(e.dataset.days),n=new Date,i=new Date;i.setDate(n.getDate()-t);const s=this.container.querySelector("#date-start"),a=this.container.querySelector("#date-end");s&&a&&(s.value=i.toISOString().split("T")[0],a.value=n.toISOString().split("T")[0]),this.container.querySelectorAll(".date-preset").forEach(e=>{e.classList.remove("active")}),e.classList.add("active"),this.handleDateRangeFilter()}handleLocationSearch(e){const t=this.container.querySelector("#specific-locations");if(!t)return;const{nodes:n}=o.getState(),i=new Set;n.forEach(t=>{if(t.address?.city){const n=`${t.address.city}, ${t.address.state}`;n.toLowerCase().includes(e.toLowerCase())&&i.add(n)}}),t.innerHTML=Array.from(i).slice(0,10).map(e=>`\n                <label class="filter-checkbox">\n                    <input type="checkbox" value="${e}" data-filter="specificLocation">\n                    <span class="checkmark"></span>\n                    üìç ${e}\n                </label>\n            `).join("")}handleConnectionCountFilter(){const e=this.container.querySelector("#connection-min"),t=this.container.querySelector("#connection-max"),n=this.container.querySelector("#connection-range"),i=parseInt(e.value)||0,s=t.value?parseInt(t.value):null;this.filterState.connectionCount={min:i,max:s},n&&(n.value=i),this.applyFilters()}addCustomPropertyFilter(){const e=this.container.querySelector("#property-key"),t=this.container.querySelector("#property-operator"),n=this.container.querySelector("#property-value");if(!e.value||!n.value)return;const i=`${e.value}_${Date.now()}`;this.filterState.customProperties[i]={key:e.value,operator:t.value,value:n.value},this.renderCustomPropertyFilters(),this.applyFilters(),n.value=""}renderCustomPropertyFilters(){const e=this.container.querySelector("#active-property-filters");e&&(e.innerHTML=Object.entries(this.filterState.customProperties).map(([e,t])=>`\n                <div class="property-filter-tag" data-filter-id="${e}">\n                    <span>${t.key} ${t.operator} "${t.value}"</span>\n                    <button class="filter-tag-remove" onclick="this.removePropertyFilter('${e}')">√ó</button>\n                </div>\n            `).join(""))}removePropertyFilter(e){delete this.filterState.customProperties[e],this.renderCustomPropertyFilters(),this.applyFilters()}applyFilters(){const e=this.buildFilterConfig(),t=a.applyFilters(e);document.dispatchEvent(new CustomEvent("filtersApplied",{detail:{filteredData:t,filterState:this.filterState}})),this.updateFilterSummary(t),this.saveFilterState()}buildFilterConfig(){const e={nodes:{},edges:{}};return this.filterState.equipmentTypes.length>0&&(e.nodes.type=this.filterState.equipmentTypes),(this.filterState.dateRange.start||this.filterState.dateRange.end)&&(e.nodes.properties=e.nodes.properties||{},this.filterState.dateRange.start&&(e.nodes.properties.createdDate={operator:"gte",value:this.filterState.dateRange.start}),this.filterState.dateRange.end&&(e.nodes.properties.createdDate={...e.nodes.properties.createdDate,operator:"between",value:[this.filterState.dateRange.start,this.filterState.dateRange.end]})),(this.filterState.connectionCount.min>0||null!==this.filterState.connectionCount.max)&&(e.nodes.connections={operator:this.filterState.connectionCount.max?"between":"gte",value:this.filterState.connectionCount.max?[this.filterState.connectionCount.min,this.filterState.connectionCount.max]:this.filterState.connectionCount.min}),Object.entries(this.filterState.customProperties).forEach(([t,n])=>{e.nodes.properties=e.nodes.properties||{},e.nodes.properties[n.key]={operator:"equals"===n.operator?"eq":n.operator,value:n.value}}),e}updateFilterSummary(e=null){if(!e){const t=this.buildFilterConfig();e=a.applyFilters(t)}const t=this.container.querySelector("#filtered-nodes"),n=this.container.querySelector("#filtered-edges"),i=this.container.querySelector("#active-filters-summary");if(t&&(t.textContent=e.nodes.length),n&&(n.textContent=e.edges.length),i){const e=[];this.filterState.equipmentTypes.length>0&&e.push(`Equipment: ${this.filterState.equipmentTypes.join(", ")}`),(this.filterState.dateRange.start||this.filterState.dateRange.end)&&e.push("Date Range"),this.filterState.severity.length>0&&e.push(`Severity: ${this.filterState.severity.join(", ")}`),(this.filterState.connectionCount.min>0||this.filterState.connectionCount.max)&&e.push("Connection Count"),i.innerHTML=e.map(e=>`<span class="filter-tag">${e}</span>`).join("")}}populateSpecificLocations(){const{nodes:e}=o.getState(),t=new Set;e.forEach(e=>{e.address?.city&&t.add(`${e.address.city}, ${e.address.state}`)});const n=this.container.querySelector("#specific-locations");n&&(n.innerHTML=Array.from(t).slice(0,20).map(e=>`\n                    <label class="filter-checkbox">\n                        <input type="checkbox" value="${e}" data-filter="specificLocation">\n                        <span class="checkmark"></span>\n                        üìç ${e}\n                    </label>\n                `).join(""))}populatePropertyKeys(){const{nodes:e}=o.getState(),t=new Set;e.forEach(e=>{e.properties&&Object.keys(e.properties).forEach(e=>t.add(e)),["type","name","label"].forEach(n=>{e[n]&&t.add(n)})});const n=this.container.querySelector("#property-key");n&&(n.innerHTML=`\n                <option value="">Select property...</option>\n                ${Array.from(t).map(e=>`<option value="${e}">${e}</option>`).join("")}\n            `)}clearAllFilters(){this.filterState={equipmentTypes:[],dateRange:{start:null,end:null},severity:[],locationRegions:[],connectionCount:{min:0,max:null},customProperties:{}},this.container.querySelectorAll('input[type="checkbox"]').forEach(e=>e.checked=!1),this.container.querySelectorAll('input[type="date"]').forEach(e=>e.value=""),this.container.querySelectorAll('input[type="number"]').forEach(e=>e.value=""),this.container.querySelector("#property-value").value="",this.renderCustomPropertyFilters(),this.applyFilters()}saveFilterSet(){const e=prompt("Enter name for filter set:");if(!e)return;const t=this.getSavedFilterSets();t[e]={...this.filterState,created:(new Date).toISOString()},localStorage.setItem("nas-filter-sets",JSON.stringify(t)),this.loadSavedFilterSets()}loadSavedFilterSets(){const e=this.getSavedFilterSets(),t=this.container.querySelector("#saved-filters-list");t&&(t.innerHTML=Object.entries(e).map(([e,t])=>`\n                <div class="saved-filter-item">\n                    <span class="saved-filter-name">${e}</span>\n                    <div class="saved-filter-actions">\n                        <button class="filter-action-btn" onclick="this.applyFilterSet('${e}')">Apply</button>\n                        <button class="filter-action-btn" onclick="this.deleteFilterSet('${e}')">Delete</button>\n                    </div>\n                </div>\n            `).join(""))}getSavedFilterSets(){try{return JSON.parse(localStorage.getItem("nas-filter-sets")||"{}")}catch{return{}}}applyFilterSet(e){const t=this.getSavedFilterSets()[e];t&&(this.filterState={...t},delete this.filterState.created,this.updateUIFromFilterState(),this.applyFilters())}updateUIFromFilterState(){if(this.filterState.equipmentTypes.forEach(e=>{const t=this.container.querySelector(`input[value="${e}"][data-filter="equipmentType"]`);t&&(t.checked=!0)}),this.filterState.severity.forEach(e=>{const t=this.container.querySelector(`input[value="${e}"][data-filter="severity"]`);t&&(t.checked=!0)}),this.filterState.dateRange.start){const e=this.container.querySelector("#date-start");e&&(e.value=this.filterState.dateRange.start)}if(this.filterState.dateRange.end){const e=this.container.querySelector("#date-end");e&&(e.value=this.filterState.dateRange.end)}const e=this.container.querySelector("#connection-min"),t=this.container.querySelector("#connection-max");e&&(e.value=this.filterState.connectionCount.min),t&&this.filterState.connectionCount.max&&(t.value=this.filterState.connectionCount.max),this.renderCustomPropertyFilters()}deleteFilterSet(e){if(!confirm(`Delete filter set "${e}"?`))return;const t=this.getSavedFilterSets();delete t[e],localStorage.setItem("nas-filter-sets",JSON.stringify(t)),this.loadSavedFilterSets()}saveFilterState(){localStorage.setItem("nas-current-filter-state",JSON.stringify(this.filterState))}loadFilterState(){try{const e=localStorage.getItem("nas-current-filter-state");e&&(this.filterState={...this.filterState,...JSON.parse(e)},this.updateUIFromFilterState())}catch(e){}}getFilterState(){return{...this.filterState}}destroy(){this.container=null,this.activeFilters.clear()}}class d{constructor(){this.contextMenu=null,this.currentNode=null,this.exploredNodes=new Set,this.explorationHistory=[],this.maxHistorySize=20,this.init(),this.setupEventListeners()}init(){this.createContextMenu(),this.addExplorerStyles()}createContextMenu(){this.contextMenu&&document.body.removeChild(this.contextMenu),this.contextMenu=document.createElement("div"),this.contextMenu.id="neighborhood-context-menu",this.contextMenu.className="neighborhood-context-menu",this.contextMenu.style.display="none",this.contextMenu.innerHTML='\n            <div class="context-menu-header">\n                <div class="context-node-info">\n                    <span class="context-node-icon">üîç</span>\n                    <div class="context-node-details">\n                        <div class="context-node-name">Node Explorer</div>\n                        <div class="context-node-type">Select exploration option</div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class="context-menu-section">\n                <div class="context-menu-title">üåê Explore Neighborhood</div>\n                <div class="context-menu-items">\n                    <button class="context-menu-item" data-action="show-1-hop">\n                        <span class="menu-icon">üîµ</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Show 1-Hop</div>\n                            <div class="menu-description">Direct connections</div>\n                        </div>\n                        <span class="menu-shortcut">1</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="show-2-hop">\n                        <span class="menu-icon">üî∑</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Show 2-Hop</div>\n                            <div class="menu-description">Extended neighborhood</div>\n                        </div>\n                        <span class="menu-shortcut">2</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="show-all-connected">\n                        <span class="menu-icon">üåê</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Show All Connected</div>\n                            <div class="menu-description">Complete component</div>\n                        </div>\n                        <span class="menu-shortcut">A</span>\n                    </button>\n                </div>\n            </div>\n            \n            <div class="context-menu-section">\n                <div class="context-menu-title">üéØ Focus & Filter</div>\n                <div class="context-menu-items">\n                    <button class="context-menu-item" data-action="focus-on-node">\n                        <span class="menu-icon">üéØ</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Focus on Node</div>\n                            <div class="menu-description">Center and zoom</div>\n                        </div>\n                        <span class="menu-shortcut">F</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="hide-others">\n                        <span class="menu-icon">üëÅÔ∏è</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Hide Others</div>\n                            <div class="menu-description">Show only this neighborhood</div>\n                        </div>\n                        <span class="menu-shortcut">H</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="filter-by-type">\n                        <span class="menu-icon">üîß</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Filter by Type</div>\n                            <div class="menu-description">Show similar nodes</div>\n                        </div>\n                        <span class="menu-shortcut">T</span>\n                    </button>\n                </div>\n            </div>\n            \n            <div class="context-menu-section">\n                <div class="context-menu-title">üõ£Ô∏è Pathfinding</div>\n                <div class="context-menu-items">\n                    <button class="context-menu-item" data-action="start-path-finding">\n                        <span class="menu-icon">üìç</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Find Path From Here</div>\n                            <div class="menu-description">Set as source node</div>\n                        </div>\n                        <span class="menu-shortcut">P</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="end-path-finding">\n                        <span class="menu-icon">üéØ</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Find Path To Here</div>\n                            <div class="menu-description">Set as target node</div>\n                        </div>\n                        <span class="menu-shortcut">E</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="clear-paths" id="clear-paths-item">\n                        <span class="menu-icon">üßπ</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Clear Paths</div>\n                            <div class="menu-description">Remove all path highlights</div>\n                        </div>\n                        <span class="menu-shortcut">C</span>\n                    </button>\n                </div>\n            </div>\n            \n            <div class="context-menu-section">\n                <div class="context-menu-title">üìä Analysis</div>\n                <div class="context-menu-items">\n                    <button class="context-menu-item" data-action="show-node-details">\n                        <span class="menu-icon">‚ÑπÔ∏è</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Node Details</div>\n                            <div class="menu-description">View properties & stats</div>\n                        </div>\n                        <span class="menu-shortcut">I</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="analyze-centrality">\n                        <span class="menu-icon">üìà</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Centrality Analysis</div>\n                            <div class="menu-description">Compute node importance</div>\n                        </div>\n                        <span class="menu-shortcut">N</span>\n                    </button>\n                    \n                    <button class="context-menu-item" data-action="export-neighborhood">\n                        <span class="menu-icon">üíæ</span>\n                        <div class="menu-content">\n                            <div class="menu-label">Export Neighborhood</div>\n                            <div class="menu-description">Save as JSON/CSV</div>\n                        </div>\n                        <span class="menu-shortcut">S</span>\n                    </button>\n                </div>\n            </div>\n\n            <div class="context-menu-footer">\n                <div class="exploration-status">\n                    <span class="status-label">Explored:</span>\n                    <span class="explored-count">0</span>\n                    <span class="status-separator">‚Ä¢</span>\n                    <button class="clear-exploration-btn" data-action="clear-exploration">\n                        Clear History\n                    </button>\n                </div>\n            </div>\n        ',document.body.appendChild(this.contextMenu)}addExplorerStyles(){if(document.querySelector("#neighborhood-explorer-styles"))return;const e=document.createElement("style");e.id="neighborhood-explorer-styles",e.textContent='\n            .neighborhood-context-menu {\n                position: fixed;\n                background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);\n                border: 1px solid #e1e8ed;\n                border-radius: 12px;\n                box-shadow: 0 12px 36px rgba(0,0,0,0.15), 0 0 0 1px rgba(255,255,255,0.5);\n                z-index: 10000;\n                min-width: 280px;\n                max-width: 320px;\n                font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, sans-serif;\n                user-select: none;\n                backdrop-filter: blur(20px);\n                -webkit-backdrop-filter: blur(20px);\n            }\n\n            .context-menu-header {\n                padding: 16px;\n                border-bottom: 1px solid #f0f0f0;\n                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                color: white;\n                border-radius: 12px 12px 0 0;\n            }\n\n            .context-node-info {\n                display: flex;\n                align-items: center;\n                gap: 12px;\n            }\n\n            .context-node-icon {\n                font-size: 24px;\n                opacity: 0.9;\n            }\n\n            .context-node-name {\n                font-weight: 600;\n                font-size: 16px;\n                margin-bottom: 2px;\n            }\n\n            .context-node-type {\n                font-size: 12px;\n                opacity: 0.8;\n            }\n\n            .context-menu-section {\n                padding: 12px 0;\n                border-bottom: 1px solid #f0f0f0;\n            }\n\n            .context-menu-section:last-of-type {\n                border-bottom: none;\n            }\n\n            .context-menu-title {\n                font-size: 11px;\n                font-weight: 700;\n                color: #6c757d;\n                text-transform: uppercase;\n                letter-spacing: 0.8px;\n                padding: 0 16px 8px;\n                margin-bottom: 4px;\n            }\n\n            .context-menu-items {\n                display: flex;\n                flex-direction: column;\n            }\n\n            .context-menu-item {\n                display: flex;\n                align-items: center;\n                padding: 12px 16px;\n                background: none;\n                border: none;\n                cursor: pointer;\n                transition: all 0.15s ease;\n                color: #2c3e50;\n                text-align: left;\n                position: relative;\n            }\n\n            .context-menu-item:hover {\n                background: linear-gradient(90deg, #f8f9fa 0%, #e9ecef 100%);\n            }\n\n            .context-menu-item:active {\n                background: #e9ecef;\n                transform: scale(0.98);\n            }\n\n            .context-menu-item:focus {\n                outline: 2px solid #3498db;\n                outline-offset: -2px;\n            }\n\n            .menu-icon {\n                font-size: 18px;\n                margin-right: 12px;\n                width: 24px;\n                text-align: center;\n                opacity: 0.8;\n            }\n\n            .menu-content {\n                flex: 1;\n                min-width: 0;\n            }\n\n            .menu-label {\n                font-weight: 500;\n                font-size: 14px;\n                margin-bottom: 2px;\n                color: #2c3e50;\n            }\n\n            .menu-description {\n                font-size: 11px;\n                color: #6c757d;\n                line-height: 1.3;\n            }\n\n            .menu-shortcut {\n                font-size: 11px;\n                color: #6c757d;\n                background: #f8f9fa;\n                padding: 3px 6px;\n                border-radius: 4px;\n                font-weight: 600;\n                margin-left: 8px;\n            }\n\n            .context-menu-footer {\n                padding: 12px 16px;\n                background: #f8f9fa;\n                border-radius: 0 0 12px 12px;\n                border-top: 1px solid #e9ecef;\n            }\n\n            .exploration-status {\n                display: flex;\n                align-items: center;\n                font-size: 11px;\n                color: #6c757d;\n            }\n\n            .status-label {\n                font-weight: 600;\n                margin-right: 4px;\n            }\n\n            .explored-count {\n                color: #3498db;\n                font-weight: 600;\n            }\n\n            .status-separator {\n                margin: 0 8px;\n                opacity: 0.5;\n            }\n\n            .clear-exploration-btn {\n                background: none;\n                border: none;\n                color: #e74c3c;\n                font-size: 11px;\n                cursor: pointer;\n                text-decoration: underline;\n                padding: 0;\n            }\n\n            .clear-exploration-btn:hover {\n                color: #c0392b;\n            }\n\n            /* Disabled state */\n            .context-menu-item:disabled {\n                opacity: 0.5;\n                cursor: not-allowed;\n            }\n\n            .context-menu-item:disabled:hover {\n                background: none;\n                transform: none;\n            }\n\n            /* Special highlighting for active path finding mode */\n            .context-menu-item[data-action="start-path-finding"].active,\n            .context-menu-item[data-action="end-path-finding"].active {\n                background: linear-gradient(90deg, #e3f2fd 0%, #bbdefb 100%);\n                color: #1976d2;\n            }\n\n            .context-menu-item[data-action="start-path-finding"].active .menu-icon,\n            .context-menu-item[data-action="end-path-finding"].active .menu-icon {\n                animation: pulse 2s infinite;\n            }\n\n            @keyframes pulse {\n                0%, 100% { opacity: 1; transform: scale(1); }\n                50% { opacity: 0.7; transform: scale(1.1); }\n            }\n\n            /* Dark theme support */\n            .theme-dark .neighborhood-context-menu {\n                background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\n                border-color: #4a5c6b;\n                color: #ecf0f1;\n            }\n\n            .theme-dark .context-menu-header {\n                background: linear-gradient(135deg, #8e44ad 0%, #3498db 100%);\n            }\n\n            .theme-dark .context-menu-section {\n                border-bottom-color: #4a5c6b;\n            }\n\n            .theme-dark .context-menu-item {\n                color: #ecf0f1;\n            }\n\n            .theme-dark .context-menu-item:hover {\n                background: linear-gradient(90deg, #34495e 0%, #4a5c6b 100%);\n            }\n\n            .theme-dark .menu-label {\n                color: #ecf0f1;\n            }\n\n            .theme-dark .menu-shortcut {\n                background: #34495e;\n                color: #bdc3c7;\n            }\n\n            .theme-dark .context-menu-footer {\n                background: #34495e;\n                border-top-color: #4a5c6b;\n            }\n\n            /* Animation for context menu appearance */\n            .neighborhood-context-menu {\n                animation: contextMenuSlide 0.2s ease-out;\n                transform-origin: top left;\n            }\n\n            @keyframes contextMenuSlide {\n                from {\n                    opacity: 0;\n                    transform: scale(0.95) translateY(-10px);\n                }\n                to {\n                    opacity: 1;\n                    transform: scale(1) translateY(0);\n                }\n            }\n\n            /* Path finding mode indicators */\n            .path-finding-source {\n                outline: 3px solid #4caf50 !important;\n                outline-offset: 2px;\n                animation: pathSourcePulse 2s infinite;\n            }\n\n            .path-finding-target {\n                outline: 3px solid #f44336 !important;\n                outline-offset: 2px;\n                animation: pathTargetPulse 2s infinite;\n            }\n\n            @keyframes pathSourcePulse {\n                0%, 100% { outline-color: #4caf50; }\n                50% { outline-color: #81c784; }\n            }\n\n            @keyframes pathTargetPulse {\n                0%, 100% { outline-color: #f44336; }\n                50% { outline-color: #e57373; }\n            }\n\n            /* Neighborhood highlight styles */\n            .neighborhood-1-hop {\n                stroke: #2196f3 !important;\n                stroke-width: 3px !important;\n                filter: drop-shadow(0 0 6px rgba(33, 150, 243, 0.5));\n            }\n\n            .neighborhood-2-hop {\n                stroke: #ff9800 !important;\n                stroke-width: 2px !important;\n                stroke-dasharray: 5,5;\n                filter: drop-shadow(0 0 4px rgba(255, 152, 0, 0.3));\n            }\n\n            .neighborhood-hidden {\n                opacity: 0.1 !important;\n                transition: opacity 0.3s ease;\n            }\n        ',document.head.appendChild(e)}setupEventListeners(){document.addEventListener("click",e=>{this.contextMenu.contains(e.target)||this.hideContextMenu()}),this.contextMenu.addEventListener("click",e=>{const t=e.target.closest(".context-menu-item");if(t){const n=t.dataset.action;this.handleMenuAction(n),e.stopPropagation()}}),document.addEventListener("keydown",e=>{"block"===this.contextMenu.style.display&&this.handleKeyboardShortcut(e)}),document.addEventListener("contextmenu",e=>{const t=e.target.closest(".node, [data-node-id]");t&&(e.preventDefault(),this.showContextMenu(e,this.getNodeFromElement(t)))}),o.subscribe("nodes",()=>this.updateExplorationCount()),o.subscribe("selectedNode",e=>{e&&(this.currentNode=e,this.updateContextMenuHeader())})}showContextMenu(e,t){if(!t)return;this.currentNode=t,this.updateContextMenuHeader(),this.updateMenuStates();const n=e.pageX,i=e.pageY,s=this.contextMenu.getBoundingClientRect(),a=window.innerWidth,o=window.innerHeight;let r=n,c=i;n+s.width>a&&(r=n-s.width),i+s.height>o&&(c=i-s.height),this.contextMenu.style.left=`${r}px`,this.contextMenu.style.top=`${c}px`,this.contextMenu.style.display="block";const d=this.contextMenu.querySelector(".context-menu-item");d&&setTimeout(()=>d.focus(),100)}hideContextMenu(){this.contextMenu.style.display="none",this.currentNode=null}updateContextMenuHeader(){if(!this.currentNode)return;const e=this.getNodeIcon(this.currentNode.type),t=this.currentNode.name||this.currentNode.label||this.currentNode.id,n=this.currentNode.type||"Unknown",i=this.contextMenu.querySelector(".context-node-icon"),s=this.contextMenu.querySelector(".context-node-name"),a=this.contextMenu.querySelector(".context-node-type");i&&(i.textContent=e),s&&(s.textContent=t),a&&(a.textContent=n)}updateMenuStates(){const e=this.contextMenu.querySelector('[data-action="start-path-finding"]'),t=this.contextMenu.querySelector('[data-action="end-path-finding"]'),n=this.contextMenu.querySelector('[data-action="clear-paths"]');this.pathFindingMode?(this.pathFindingMode.source&&e?.classList.add("active"),this.pathFindingMode.target&&t?.classList.add("active"),n&&(n.disabled=!1)):(e?.classList.remove("active"),t?.classList.remove("active"),n&&(n.disabled=!0))}handleMenuAction(e){if(this.currentNode||["clear-exploration","clear-paths"].includes(e)){switch(e){case"show-1-hop":this.showNeighborhood(1);break;case"show-2-hop":this.showNeighborhood(2);break;case"show-all-connected":this.showAllConnected();break;case"focus-on-node":this.focusOnNode();break;case"hide-others":this.hideOthers();break;case"filter-by-type":this.filterByType();break;case"start-path-finding":this.startPathFinding();break;case"end-path-finding":this.endPathFinding();break;case"clear-paths":this.clearPaths();break;case"show-node-details":this.showNodeDetails();break;case"analyze-centrality":this.analyzeCentrality();break;case"export-neighborhood":this.exportNeighborhood();break;case"clear-exploration":this.clearExploration()}this.hideContextMenu()}}showNeighborhood(e=1){const t=s.findConnectedNodes(this.currentNode.id,{maxDepth:e});this.exploredNodes.add(this.currentNode.id),this.explorationHistory.push({action:`show-${e}-hop`,nodeId:this.currentNode.id,nodeName:this.currentNode.name||this.currentNode.id,timestamp:Date.now(),neighborCount:t.length}),this.explorationHistory.length>this.maxHistorySize&&(this.explorationHistory=this.explorationHistory.slice(-this.maxHistorySize)),this.highlightNeighborhood(this.currentNode,t,e),document.dispatchEvent(new CustomEvent("showNeighborhood",{detail:{sourceNode:this.currentNode,neighbors:t,hops:e,highlightClass:`neighborhood-${e}-hop`}})),this.updateExplorationCount()}showAllConnected(){const e=s.findConnectedNodes(this.currentNode.id,{maxDepth:1/0});this.exploredNodes.add(this.currentNode.id),this.explorationHistory.push({action:"show-all-connected",nodeId:this.currentNode.id,nodeName:this.currentNode.name||this.currentNode.id,timestamp:Date.now(),neighborCount:e.length}),this.highlightNeighborhood(this.currentNode,e,"all"),document.dispatchEvent(new CustomEvent("showAllConnected",{detail:{sourceNode:this.currentNode,connectedNodes:e}})),this.updateExplorationCount()}focusOnNode(){document.dispatchEvent(new CustomEvent("focusOnNode",{detail:{node:this.currentNode,centerAndZoom:!0}}))}hideOthers(){const e=s.findConnectedNodes(this.currentNode.id,{maxDepth:2}),t=new Set([this.currentNode.id,...e.map(e=>e.id)]);document.dispatchEvent(new CustomEvent("hideOtherNodes",{detail:{visibleNodeIds:t,sourceNode:this.currentNode}}))}filterByType(){this.currentNode.type&&document.dispatchEvent(new CustomEvent("filterByNodeType",{detail:{nodeType:this.currentNode.type,sourceNode:this.currentNode}}))}startPathFinding(){this.pathFindingMode||(this.pathFindingMode={}),this.pathFindingMode.source=this.currentNode,document.dispatchEvent(new CustomEvent("setPathFindingSource",{detail:{sourceNode:this.currentNode}})),this.pathFindingMode.target&&this.findPath()}endPathFinding(){this.pathFindingMode||(this.pathFindingMode={}),this.pathFindingMode.target=this.currentNode,document.dispatchEvent(new CustomEvent("setPathFindingTarget",{detail:{targetNode:this.currentNode}})),this.pathFindingMode.source&&this.findPath()}findPath(){if(!this.pathFindingMode?.source||!this.pathFindingMode?.target)return;const e=s.findPath(this.pathFindingMode.source.id,this.pathFindingMode.target.id);e?document.dispatchEvent(new CustomEvent("showShortestPath",{detail:{path:e,sourceNode:this.pathFindingMode.source,targetNode:this.pathFindingMode.target}})):document.dispatchEvent(new CustomEvent("pathNotFound",{detail:{sourceNode:this.pathFindingMode.source,targetNode:this.pathFindingMode.target}}))}clearPaths(){this.pathFindingMode=null,document.dispatchEvent(new CustomEvent("clearPathHighlights"))}showNodeDetails(){o.setState({selectedNode:this.currentNode}),document.dispatchEvent(new CustomEvent("showNodeDetails",{detail:{node:this.currentNode,expandedView:!0}}))}analyzeCentrality(){const{nodes:e,edges:t}=o.getState(),n=t.filter(e=>e.source===this.currentNode.id||e.target===this.currentNode.id).length,i=s.findConnectedNodes(this.currentNode.id,{maxDepth:1}),a=s.findConnectedNodes(this.currentNode.id,{maxDepth:2}),r={node:this.currentNode,degree:n,closeness:i.length/(e.length-1),betweenness:this.calculateBetweennessCentrality(this.currentNode.id),clustering:this.calculateClusteringCoefficient(this.currentNode.id),neighborhoodSizes:{oneHop:i.length,twoHop:a.length}};document.dispatchEvent(new CustomEvent("showCentralityAnalysis",{detail:r}))}exportNeighborhood(){const e=s.findConnectedNodes(this.currentNode.id,{maxDepth:2}),{edges:t}=o.getState(),n=new Set([this.currentNode.id,...e.map(e=>e.id)]),i=t.filter(e=>n.has(e.source)&&n.has(e.target)),a={centerNode:this.currentNode,neighbors:e,edges:i,metadata:{exportedAt:(new Date).toISOString(),totalNodes:e.length+1,totalEdges:i.length}};document.dispatchEvent(new CustomEvent("exportNeighborhoodData",{detail:a})),this.downloadNeighborhoodData(a)}downloadNeighborhoodData(e){const t=`neighborhood_${this.currentNode.id}_${Date.now()}.json`,n=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),i=URL.createObjectURL(n),s=document.createElement("a");s.href=i,s.download=t,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(i)}clearExploration(){this.exploredNodes.clear(),this.explorationHistory=[],document.dispatchEvent(new CustomEvent("clearAllHighlights")),this.updateExplorationCount()}handleKeyboardShortcut(e){const t=e.key.toLowerCase(),n={1:"show-1-hop",2:"show-2-hop",a:"show-all-connected",f:"focus-on-node",h:"hide-others",t:"filter-by-type",p:"start-path-finding",e:"end-path-finding",c:"clear-paths",i:"show-node-details",n:"analyze-centrality",s:"export-neighborhood"};n[t]?(e.preventDefault(),this.handleMenuAction(n[t])):"Escape"===e.key&&this.hideContextMenu()}highlightNeighborhood(e,t,n){const i="all"===n?"neighborhood-all":`neighborhood-${n}-hop`;document.dispatchEvent(new CustomEvent("highlightGraphNeighborhood",{detail:{centerNode:e,neighbors:t,highlightClass:i,hops:n}}))}updateExplorationCount(){const e=this.contextMenu.querySelector(".explored-count");e&&(e.textContent=this.exploredNodes.size)}getNodeIcon(e){return{faa_stars_terminal:"üè¢",approach_control:"üõ´",faa_eram_terminal:"üì°",geographic_location:"üìç",radar_equipment:"üìä",communication_equipment:"üìª"}[e]||"‚óâ"}getNodeFromElement(e){const t=e.dataset.nodeId||e.getAttribute("data-node-id");if(!t)return null;const{nodes:n}=o.getState();return n.find(e=>e.id.toString()===t.toString())}calculateBetweennessCentrality(e){const t=s.findConnectedNodes(e,{maxDepth:1});return t.length>1?t.length/10:0}calculateClusteringCoefficient(e){const t=s.findConnectedNodes(e,{maxDepth:1});if(t.length<2)return 0;const{edges:n}=o.getState(),i=new Set(t.map(e=>e.id));let a=0;n.forEach(e=>{i.has(e.source)&&i.has(e.target)&&a++});const r=t.length*(t.length-1)/2;return r>0?a/r:0}getExplorationHistory(){return[...this.explorationHistory]}getExploredNodes(){return new Set(this.exploredNodes)}destroy(){this.contextMenu&&document.body.contains(this.contextMenu)&&document.body.removeChild(this.contextMenu),this.exploredNodes.clear(),this.explorationHistory=[],this.pathFindingMode=null,this.currentNode=null}}class l{constructor(){this.algorithms={dijkstra:this.dijkstra.bind(this),bfs:this.breadthFirstSearch.bind(this),astar:this.aStar.bind(this),bidirectional:this.bidirectionalSearch.bind(this)},this.currentAlgorithm="dijkstra",this.pathCache=new Map,this.maxCacheSize=1e3,this.pathHistory=[],this.maxHistorySize=50,this.setupEventListeners()}setupEventListeners(){document.addEventListener("findPath",e=>{const{sourceId:t,targetId:n,algorithm:i,options:s}=e.detail;this.findPath(t,n,i,s)}),document.addEventListener("setPathFindingSource",e=>{this.pathSource=e.detail.sourceNode,this.updatePathFindingUI()}),document.addEventListener("setPathFindingTarget",e=>{this.pathTarget=e.detail.targetNode,this.updatePathFindingUI(),this.pathSource&&this.findPath(this.pathSource.id,this.pathTarget.id)}),document.addEventListener("clearPathHighlights",()=>{this.clearAllPaths()})}findPath(e,t,n=this.currentAlgorithm,i={}){const s=`${e}-${t}-${n}-${JSON.stringify(i)}`,a=this.pathCache.get(s);if(a)return this.displayPath(a),a;const o=performance.now(),r=this.algorithms[n](e,t,i),c=performance.now();return r.path?(this.cachePathResult(s,r),this.addToHistory({sourceId:e,targetId:t,algorithm:n,path:r.path,distance:r.distance,computeTime:c-o,timestamp:Date.now()}),this.displayPath(r)):document.dispatchEvent(new CustomEvent("pathNotFound",{detail:{sourceId:e,targetId:t,algorithm:n,computeTime:c-o}})),r}dijkstra(e,t,n={}){const{nodes:i,edges:s}=o.getState(),{weightProperty:a=null,maxDistance:r=1/0}=n,c=this.buildWeightedGraph(i,s,a),d=new Map,l=new Map,h=new Set,u=new Set;for(i.forEach(t=>{d.set(t.id,t.id===e?0:1/0),u.add(t.id)});u.size>0;){let e=null,n=1/0;for(const t of u){const i=d.get(t);i<n&&(n=i,e=t)}if(null===e||n===1/0)break;if(e===t)break;if(n>r)break;u.delete(e),h.add(e);const i=c.get(e)||[];for(const{nodeId:t,weight:s}of i){if(h.has(t))continue;const n=d.get(e)+s;n<d.get(t)&&(d.set(t,n),l.set(t,e))}}const p=this.reconstructPath(l,e,t),g=d.get(t);return{path:g===1/0?null:p,distance:g===1/0?null:g,algorithm:"dijkstra",visited:h.size,sourceId:e,targetId:t}}breadthFirstSearch(e,t,n={}){const{nodes:i,edges:s}=o.getState(),{maxHops:a=1/0}=n,r=this.buildGraph(i,s),c=[{nodeId:e,path:[e],distance:0}],d=new Set([e]);for(;c.length>0;){const{nodeId:n,path:i,distance:s}=c.shift();if(n===t)return{path:i,distance:s,algorithm:"bfs",visited:d.size,sourceId:e,targetId:t};if(s>=a)continue;const o=r.get(n)||[];for(const e of o)d.has(e)||(d.add(e),c.push({nodeId:e,path:[...i,e],distance:s+1}))}return{path:null,distance:null,algorithm:"bfs",visited:d.size,sourceId:e,targetId:t}}aStar(e,t,n={}){const{nodes:i,edges:s}=o.getState(),{weightProperty:a=null,heuristicFunction:r}=n,c=this.buildWeightedGraph(i,s,a),d=new Map(i.map(e=>[e.id,e])),l=r||((e,t)=>{const n=d.get(e),i=d.get(t);return void 0!==n?.x&&void 0!==n?.y&&void 0!==i?.x&&void 0!==i?.y?Math.sqrt(Math.pow(i.x-n.x,2)+Math.pow(i.y-n.y,2)):this.getConnectionDistance(e,t)}),h=new Set([e]),u=new Set,p=new Map([[e,0]]),g=new Map([[e,l(e,t)]]),m=new Map;for(;h.size>0;){let n=null,i=1/0;for(const e of h){const t=g.get(e)||1/0;t<i&&(i=t,n=e)}if(n===t){return{path:this.reconstructPath(m,e,t),distance:p.get(t),algorithm:"astar",visited:u.size,sourceId:e,targetId:t}}h.delete(n),u.add(n);const s=c.get(n)||[];for(const{nodeId:e,weight:a}of s){if(u.has(e))continue;const i=p.get(n)+a;if(h.has(e)){if(i>=(p.get(e)||1/0))continue}else h.add(e);m.set(e,n),p.set(e,i),g.set(e,i+l(e,t))}}return{path:null,distance:null,algorithm:"astar",visited:u.size,sourceId:e,targetId:t}}bidirectionalSearch(e,t,n={}){const{nodes:i,edges:s}=o.getState(),{maxDistance:a=1/0}=n,r=this.buildGraph(i,s),c=[{nodeId:e,path:[e],distance:0}],d=new Map([[e,{path:[e],distance:0}]]),l=[{nodeId:t,path:[t],distance:0}],h=new Map([[t,{path:[t],distance:0}]]);for(;c.length>0||l.length>0;){if(c.length>0){const{nodeId:n,path:i,distance:s}=c.shift();if(h.has(n)){const a=h.get(n);return{path:[...i,...a.path.slice(1).reverse()],distance:s+a.distance,algorithm:"bidirectional",visited:d.size+h.size,sourceId:e,targetId:t}}if(s<a){const e=r.get(n)||[];for(const t of e)if(!d.has(t)){const e=[...i,t],n=s+1;d.set(t,{path:e,distance:n}),c.push({nodeId:t,path:e,distance:n})}}}if(l.length>0){const{nodeId:n,path:i,distance:s}=l.shift();if(d.has(n)){const a=d.get(n);return{path:[...a.path,...i.slice(1).reverse()],distance:a.distance+s,algorithm:"bidirectional",visited:d.size+h.size,sourceId:e,targetId:t}}if(s<a){const e=r.get(n)||[];for(const t of e)if(!h.has(t)){const e=[...i,t],n=s+1;h.set(t,{path:e,distance:n}),l.push({nodeId:t,path:e,distance:n})}}}}return{path:null,distance:null,algorithm:"bidirectional",visited:d.size+h.size,sourceId:e,targetId:t}}findAlternativePaths(e,t,n={}){const{maxPaths:i=3,diversityThreshold:s=.5}=n,a=[],r=this.findPath(e,t,this.currentAlgorithm,n);r.path&&a.push(r);const{edges:c}=o.getState(),d=[...c];for(let l=1;l<i&&r.path;l++){const i=this.getPathEdges(r.path),c=d.filter(e=>!i.some(t=>e.source===t.source&&e.target===t.target||e.source===t.target&&e.target===t.source));o.setState({edges:c},!1);const l=this.findPath(e,t,this.currentAlgorithm,n);l.path&&this.isPathDiverse(l.path,a,s)&&a.push(l)}return o.setState({edges:d},!1),a}findAllSimplePaths(e,t,n=10){const{nodes:i,edges:s}=o.getState(),a=this.buildGraph(i,s),r=[],c=(e,t,i,s)=>{if(i.length>n)return;if(e===t)return void r.push([...i]);const o=a.get(e)||[];for(const n of o)s.has(n)||(s.add(n),i.push(n),c(n,t,i,s),i.pop(),s.delete(n))};return c(e,t,[e],new Set([e])),r.sort((e,t)=>e.length-t.length),r.map(e=>({path:e,distance:e.length-1,algorithm:"all-simple-paths"}))}buildGraph(e,t){const n=new Map;return e.forEach(e=>{n.set(e.id,[])}),t.forEach(e=>{const t=n.get(e.source)||[],i=n.get(e.target)||[];t.push(e.target),i.push(e.source),n.set(e.source,t),n.set(e.target,i)}),n}buildWeightedGraph(e,t,n=null){const i=new Map;return e.forEach(e=>{i.set(e.id,[])}),t.forEach(e=>{const t=n&&e[n]?parseFloat(e[n]):1,s=i.get(e.source)||[],a=i.get(e.target)||[];s.push({nodeId:e.target,weight:t}),a.push({nodeId:e.source,weight:t}),i.set(e.source,s),i.set(e.target,a)}),i}reconstructPath(e,t,n){const i=[];let s=n;for(;void 0!==s;)i.unshift(s),s=e.get(s);return i[0]===t?i:null}getConnectionDistance(e,t){return Math.abs(e.toString().length-t.toString().length)+1}getPathEdges(e){const t=[];for(let n=0;n<e.length-1;n++)t.push({source:e[n],target:e[n+1]});return t}isPathDiverse(e,t,n){for(const i of t){if(this.calculatePathSimilarity(e,i.path)>n)return!1}return!0}calculatePathSimilarity(e,t){const n=new Set(e),i=new Set(t),s=new Set([...n].filter(e=>i.has(e))),a=new Set([...n,...i]);return s.size/a.size}displayPath(e){e.path&&document.dispatchEvent(new CustomEvent("showShortestPath",{detail:{path:e.path,distance:e.distance,algorithm:e.algorithm,visited:e.visited,sourceId:e.sourceId,targetId:e.targetId}}))}cachePathResult(e,t){if(this.pathCache.size>=this.maxCacheSize){const e=this.pathCache.keys().next().value;this.pathCache.delete(e)}this.pathCache.set(e,t)}addToHistory(e){this.pathHistory.unshift(e),this.pathHistory.length>this.maxHistorySize&&(this.pathHistory=this.pathHistory.slice(0,this.maxHistorySize))}updatePathFindingUI(){document.dispatchEvent(new CustomEvent("pathFindingStateUpdated",{detail:{source:this.pathSource,target:this.pathTarget,hasSource:!!this.pathSource,hasTarget:!!this.pathTarget,canFindPath:!(!this.pathSource||!this.pathTarget)}}))}clearAllPaths(){this.pathSource=null,this.pathTarget=null,this.updatePathFindingUI(),document.dispatchEvent(new CustomEvent("clearAllPaths"))}getPathStatistics(){return{cacheSize:this.pathCache.size,maxCacheSize:this.maxCacheSize,historySize:this.pathHistory.length,maxHistorySize:this.maxHistorySize,currentAlgorithm:this.currentAlgorithm,availableAlgorithms:Object.keys(this.algorithms)}}analyzeConnectivity(){const{nodes:e,edges:t}=o.getState(),n=this.buildGraph(e,t),i=[],s=new Set;e.forEach(e=>{if(!s.has(e.id)){const t=[],a=[e.id];for(;a.length>0;){const e=a.shift();if(s.has(e))continue;s.add(e),t.push(e);(n.get(e)||[]).forEach(e=>{s.has(e)||a.push(e)})}i.push(t)}});const a=i.map(e=>e.length),r=Math.max(...a),c=e.length,d=t.length;return{totalNodes:c,totalEdges:d,density:c>1?2*d/(c*(c-1)):0,numComponents:i.length,componentSizes:a,largestComponent:r,largestComponentRatio:r/c,isConnected:1===i.length,components:i.map(e=>({size:e.length,nodes:e}))}}setAlgorithm(e){this.algorithms[e]&&(this.currentAlgorithm=e)}getPathHistory(){return[...this.pathHistory]}clearCache(){this.pathCache.clear()}exportPathData(){return{history:this.pathHistory,statistics:this.getPathStatistics(),connectivity:this.analyzeConnectivity(),timestamp:Date.now()}}destroy(){this.clearAllPaths(),this.clearCache(),this.pathHistory=[]}}export{c as A,r as G,d as N,l as P};
//# sourceMappingURL=chunk-BRD_uMrR.js.map
