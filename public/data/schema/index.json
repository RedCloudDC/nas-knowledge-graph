{
  "schemas": {
    "version": "1.0.0",
    "description": "NAS Knowledge Graph JSON Schema Collection",
    "nodeSchemas": [
      {
        "type": "Equipment",
        "file": "equipment.schema.json",
        "description": "Schema for NAS equipment nodes including surveillance, navigation, weather, and communication systems",
        "idPattern": "^EQ[0-9]{6}$"
      },
      {
        "type": "Location", 
        "file": "location.schema.json",
        "description": "Schema for location nodes including airport terminals, FAA facilities, and geographic locations",
        "idPattern": "^LOC[0-9]{6}$"
      },
      {
        "type": "Event",
        "file": "event.schema.json", 
        "description": "Schema for event nodes including maintenance events, outages, and operational incidents",
        "idPattern": "^EVT[0-9]{6}$"
      },
      {
        "type": "Personnel",
        "file": "personnel.schema.json",
        "description": "Schema for personnel nodes including FAA maintenance staff, operations personnel, and safety analysts",
        "idPattern": "^PER[0-9]{6}$"
      },
      {
        "type": "Report",
        "file": "report.schema.json",
        "description": "Schema for report nodes including action reports, lessons learned, and analysis documents", 
        "idPattern": "^RPT[0-9]{6}$"
      }
    ],
    "relationshipSchema": {
      "type": "Relationship",
      "file": "relationship.schema.json",
      "description": "Schema for relationship records that connect nodes in the knowledge graph"
    },
    "mappingConfiguration": {
      "type": "GraphitiMapping",
      "file": "graphiti-mapping.json",
      "description": "Configuration for mapping NAS data model to Graphiti knowledge graph constructs"
    }
  },
  "validation": {
    "tools": [
      {
        "name": "ajv",
        "description": "JSON Schema validator library for JavaScript",
        "usage": "Validate individual nodes against their schemas"
      },
      {
        "name": "jsonschema", 
        "description": "JSON Schema validator library for Python",
        "usage": "Server-side validation and data pipeline validation"
      }
    ],
    "validationOrder": [
      "1. Validate individual nodes against their respective schemas",
      "2. Validate relationship records against relationship schema", 
      "3. Validate cross-references between nodes exist",
      "4. Validate business rules and constraints",
      "5. Validate temporal consistency",
      "6. Validate geospatial data formats"
    ]
  },
  "relationships": {
    "allowed": [
      {
        "type": "LOCATED_AT",
        "source": "Equipment",
        "target": "Location",
        "description": "Equipment is installed at location"
      },
      {
        "type": "ASSIGNED_TO", 
        "source": "Personnel",
        "target": "Event",
        "description": "Personnel assigned to handle event"
      },
      {
        "type": "EXPERIENCED_OUTAGE",
        "source": "Equipment", 
        "target": "Event",
        "description": "Equipment experienced outage/event"
      },
      {
        "type": "GENERATED_REPORT",
        "source": "Event",
        "target": "Report", 
        "description": "Event generated documentation"
      },
      {
        "type": "CONTAINS_LESSONS",
        "source": "Report",
        "target": "Report",
        "description": "Report contains lessons from other report"
      },
      {
        "type": "DEPENDS_ON",
        "source": "Equipment",
        "target": "Equipment", 
        "description": "Equipment dependency relationship"
      },
      {
        "type": "MAINTAINS",
        "source": "Personnel",
        "target": "Equipment",
        "description": "Personnel responsible for equipment"
      },
      {
        "type": "SUPERVISES", 
        "source": "Personnel",
        "target": "Personnel",
        "description": "Supervisory relationship"
      },
      {
        "type": "WORKS_AT",
        "source": "Personnel",
        "target": "Location",
        "description": "Personnel assigned to location"
      },
      {
        "type": "AUTHORED",
        "source": "Personnel", 
        "target": "Report",
        "description": "Personnel authored report"
      },
      {
        "type": "REVIEWED",
        "source": "Personnel",
        "target": "Report",
        "description": "Personnel reviewed report" 
      },
      {
        "type": "APPROVED",
        "source": "Personnel",
        "target": "Report",
        "description": "Personnel approved report"
      }
    ]
  }
}
